<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="758" onload="init(evt)" viewBox="0 0 1200 758" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="758" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="741.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="741.00"> </text><svg id="frames" x="10" width="1180" total_samples="2407"><g><title>dyld`start (1 samples, 0.04%)</title><rect x="0.0000%" y="693" width="0.0415%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="703.50"></text></g><g><title>speed-0b1675bc7d978a4b`main (1 samples, 0.04%)</title><rect x="0.0000%" y="677" width="0.0415%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="687.50"></text></g><g><title>speed-0b1675bc7d978a4b`std::rt::lang_start (1 samples, 0.04%)</title><rect x="0.0000%" y="661" width="0.0415%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="671.50"></text></g><g><title>speed-0b1675bc7d978a4b`std::rt::lang_start_internal (1 samples, 0.04%)</title><rect x="0.0000%" y="645" width="0.0415%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="655.50"></text></g><g><title>speed-0b1675bc7d978a4b`std::rt::lang_start::_{{closure}} (1 samples, 0.04%)</title><rect x="0.0000%" y="629" width="0.0415%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="1"/><text x="0.2500%" y="639.50"></text></g><g><title>speed-0b1675bc7d978a4b`std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.04%)</title><rect x="0.0000%" y="613" width="0.0415%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="1"/><text x="0.2500%" y="623.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ops::function::FnOnce::call_once (1 samples, 0.04%)</title><rect x="0.0000%" y="597" width="0.0415%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="1"/><text x="0.2500%" y="607.50"></text></g><g><title>speed-0b1675bc7d978a4b`speed::main (1 samples, 0.04%)</title><rect x="0.0000%" y="581" width="0.0415%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="1"/><text x="0.2500%" y="591.50"></text></g><g><title>speed-0b1675bc7d978a4b`test::test_main_static (1 samples, 0.04%)</title><rect x="0.0000%" y="565" width="0.0415%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="1"/><text x="0.2500%" y="575.50"></text></g><g><title>speed-0b1675bc7d978a4b`test::test_main (1 samples, 0.04%)</title><rect x="0.0000%" y="549" width="0.0415%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="1"/><text x="0.2500%" y="559.50"></text></g><g><title>speed-0b1675bc7d978a4b`test::console::run_tests_console (1 samples, 0.04%)</title><rect x="0.0000%" y="533" width="0.0415%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="1"/><text x="0.2500%" y="543.50"></text></g><g><title>speed-0b1675bc7d978a4b`test::run_tests (1 samples, 0.04%)</title><rect x="0.0000%" y="517" width="0.0415%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="1"/><text x="0.2500%" y="527.50"></text></g><g><title>speed-0b1675bc7d978a4b`test::run_test (1 samples, 0.04%)</title><rect x="0.0000%" y="501" width="0.0415%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="1"/><text x="0.2500%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.04%)</title><rect x="0.0000%" y="485" width="0.0415%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="1"/><text x="0.2500%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`__exit (1 samples, 0.04%)</title><rect x="0.0415%" y="693" width="0.0415%" height="15" fill="rgb(217,207,13)" fg:x="1" fg:w="1"/><text x="0.2915%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`__mprotect (1 samples, 0.04%)</title><rect x="0.0831%" y="645" width="0.0415%" height="15" fill="rgb(231,73,38)" fg:x="2" fg:w="1"/><text x="0.3331%" y="655.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::const_ptr::_&lt;impl *const T&gt;::is_null (4 samples, 0.17%)</title><rect x="0.3324%" y="373" width="0.1662%" height="15" fill="rgb(225,20,46)" fg:x="8" fg:w="4"/><text x="0.5824%" y="383.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="0.4985%" y="373" width="0.0415%" height="15" fill="rgb(210,31,41)" fg:x="12" fg:w="1"/><text x="0.7485%" y="383.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.54%)</title><rect x="0.1662%" y="389" width="0.5401%" height="15" fill="rgb(221,200,47)" fg:x="4" fg:w="13"/><text x="0.4162%" y="399.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (4 samples, 0.17%)</title><rect x="0.5401%" y="373" width="0.1662%" height="15" fill="rgb(226,26,5)" fg:x="13" fg:w="4"/><text x="0.7901%" y="383.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (3 samples, 0.12%)</title><rect x="0.5816%" y="357" width="0.1246%" height="15" fill="rgb(249,33,26)" fg:x="14" fg:w="3"/><text x="0.8316%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (1 samples, 0.04%)</title><rect x="0.7478%" y="373" width="0.0415%" height="15" fill="rgb(235,183,28)" fg:x="18" fg:w="1"/><text x="0.9978%" y="383.50"></text></g><g><title>speed-0b1675bc7d978a4b`bft_json_crdt::list_crdt::ListCRDT&lt;T&gt;::find (19 samples, 0.79%)</title><rect x="0.1246%" y="421" width="0.7894%" height="15" fill="rgb(221,5,38)" fg:x="3" fg:w="19"/><text x="0.3746%" y="431.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (19 samples, 0.79%)</title><rect x="0.1246%" y="405" width="0.7894%" height="15" fill="rgb(247,18,42)" fg:x="3" fg:w="19"/><text x="0.3746%" y="415.50"></text></g><g><title>speed-0b1675bc7d978a4b`bft_json_crdt::list_crdt::ListCRDT&lt;T&gt;::find::_{{closure}} (5 samples, 0.21%)</title><rect x="0.7063%" y="389" width="0.2077%" height="15" fill="rgb(241,131,45)" fg:x="17" fg:w="5"/><text x="0.9563%" y="399.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::array::equality::_&lt;impl core::cmp::PartialEq&lt;[B (3 samples, 0.12%)</title><rect x="0.7894%" y="373" width="0.1246%" height="15" fill="rgb(249,31,29)" fg:x="19" fg:w="3"/><text x="1.0394%" y="383.50"></text></g><g><title> N]&gt; for [A (3 samples, 0.12%)</title><rect x="0.7894%" y="357" width="0.1246%" height="15" fill="rgb(225,111,53)" fg:x="19" fg:w="3"/><text x="1.0394%" y="367.50"></text></g><g><title> N]&gt;::eq (3 samples, 0.12%)</title><rect x="0.7894%" y="341" width="0.1246%" height="15" fill="rgb(238,160,17)" fg:x="19" fg:w="3"/><text x="1.0394%" y="351.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (2 samples, 0.08%)</title><rect x="0.8309%" y="325" width="0.0831%" height="15" fill="rgb(214,148,48)" fg:x="20" fg:w="2"/><text x="1.0809%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::const_ptr::_&lt;impl *const T&gt;::is_null (1 samples, 0.04%)</title><rect x="1.1217%" y="357" width="0.0415%" height="15" fill="rgb(232,36,49)" fg:x="27" fg:w="1"/><text x="1.3717%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.25%)</title><rect x="0.9971%" y="373" width="0.2493%" height="15" fill="rgb(209,103,24)" fg:x="24" fg:w="6"/><text x="1.2471%" y="383.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (2 samples, 0.08%)</title><rect x="1.1633%" y="357" width="0.0831%" height="15" fill="rgb(229,88,8)" fg:x="28" fg:w="2"/><text x="1.4133%" y="367.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memcmp (1 samples, 0.04%)</title><rect x="1.3710%" y="309" width="0.0415%" height="15" fill="rgb(213,181,19)" fg:x="33" fg:w="1"/><text x="1.6210%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (1 samples, 0.04%)</title><rect x="1.4125%" y="309" width="0.0415%" height="15" fill="rgb(254,191,54)" fg:x="34" fg:w="1"/><text x="1.6625%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`bft_json_crdt::list_crdt::ListCRDT&lt;T&gt;::integrate (14 samples, 0.58%)</title><rect x="0.9140%" y="421" width="0.5816%" height="15" fill="rgb(241,83,37)" fg:x="22" fg:w="14"/><text x="1.1640%" y="431.50"></text></g><g><title>speed-0b1675bc7d978a4b`bft_json_crdt::list_crdt::ListCRDT&lt;T&gt;::find (14 samples, 0.58%)</title><rect x="0.9140%" y="405" width="0.5816%" height="15" fill="rgb(233,36,39)" fg:x="22" fg:w="14"/><text x="1.1640%" y="415.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (14 samples, 0.58%)</title><rect x="0.9140%" y="389" width="0.5816%" height="15" fill="rgb(226,3,54)" fg:x="22" fg:w="14"/><text x="1.1640%" y="399.50"></text></g><g><title>speed-0b1675bc7d978a4b`bft_json_crdt::list_crdt::ListCRDT&lt;T&gt;::find::_{{closure}} (6 samples, 0.25%)</title><rect x="1.2464%" y="373" width="0.2493%" height="15" fill="rgb(245,192,40)" fg:x="30" fg:w="6"/><text x="1.4964%" y="383.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::array::equality::_&lt;impl core::cmp::PartialEq&lt;[B (6 samples, 0.25%)</title><rect x="1.2464%" y="357" width="0.2493%" height="15" fill="rgb(238,167,29)" fg:x="30" fg:w="6"/><text x="1.4964%" y="367.50"></text></g><g><title> N]&gt; for [A (6 samples, 0.25%)</title><rect x="1.2464%" y="341" width="0.2493%" height="15" fill="rgb(232,182,51)" fg:x="30" fg:w="6"/><text x="1.4964%" y="351.50"></text></g><g><title> N]&gt;::eq (6 samples, 0.25%)</title><rect x="1.2464%" y="325" width="0.2493%" height="15" fill="rgb(231,60,39)" fg:x="30" fg:w="6"/><text x="1.4964%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (1 samples, 0.04%)</title><rect x="1.4541%" y="309" width="0.0415%" height="15" fill="rgb(208,69,12)" fg:x="35" fg:w="1"/><text x="1.7041%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (1 samples, 0.04%)</title><rect x="1.4541%" y="293" width="0.0415%" height="15" fill="rgb(235,93,37)" fg:x="35" fg:w="1"/><text x="1.7041%" y="303.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.04%)</title><rect x="1.5372%" y="325" width="0.0415%" height="15" fill="rgb(213,116,39)" fg:x="37" fg:w="1"/><text x="1.7872%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::for_each (1 samples, 0.04%)</title><rect x="1.5372%" y="309" width="0.0415%" height="15" fill="rgb(222,207,29)" fg:x="37" fg:w="1"/><text x="1.7872%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.04%)</title><rect x="1.5372%" y="293" width="0.0415%" height="15" fill="rgb(206,96,30)" fg:x="37" fg:w="1"/><text x="1.7872%" y="303.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::fold (1 samples, 0.04%)</title><rect x="1.5372%" y="277" width="0.0415%" height="15" fill="rgb(218,138,4)" fg:x="37" fg:w="1"/><text x="1.7872%" y="287.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::_{{closure}} (1 samples, 0.04%)</title><rect x="1.5372%" y="261" width="0.0415%" height="15" fill="rgb(250,191,14)" fg:x="37" fg:w="1"/><text x="1.7872%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1 samples, 0.04%)</title><rect x="1.5372%" y="245" width="0.0415%" height="15" fill="rgb(239,60,40)" fg:x="37" fg:w="1"/><text x="1.7872%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::_{{closure}} (1 samples, 0.04%)</title><rect x="1.5372%" y="229" width="0.0415%" height="15" fill="rgb(206,27,48)" fg:x="37" fg:w="1"/><text x="1.7872%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`generic_array::impls::_&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::_{{closure}} (1 samples, 0.04%)</title><rect x="1.5372%" y="213" width="0.0415%" height="15" fill="rgb(225,35,8)" fg:x="37" fg:w="1"/><text x="1.7872%" y="223.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="1.5787%" y="293" width="0.0415%" height="15" fill="rgb(250,213,24)" fg:x="38" fg:w="1"/><text x="1.8287%" y="303.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="1.5787%" y="277" width="0.0415%" height="15" fill="rgb(247,123,22)" fg:x="38" fg:w="1"/><text x="1.8287%" y="287.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::result::Result&lt;T,E&gt;::unwrap (1 samples, 0.04%)</title><rect x="1.6203%" y="229" width="0.0415%" height="15" fill="rgb(231,138,38)" fg:x="39" fg:w="1"/><text x="1.8703%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`block_buffer::BlockBuffer&lt;BlockSize,block_buffer::Eager&gt;::len64_padding_be (5 samples, 0.21%)</title><rect x="1.5787%" y="309" width="0.2077%" height="15" fill="rgb(231,145,46)" fg:x="38" fg:w="5"/><text x="1.8287%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;sha2::core_api::Sha256VarCore as digest::core_api::VariableOutputCore&gt;::finalize_variable_core::_{{closure}} (4 samples, 0.17%)</title><rect x="1.6203%" y="293" width="0.1662%" height="15" fill="rgb(251,118,11)" fg:x="39" fg:w="4"/><text x="1.8703%" y="303.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::compress256 (4 samples, 0.17%)</title><rect x="1.6203%" y="277" width="0.1662%" height="15" fill="rgb(217,147,25)" fg:x="39" fg:w="4"/><text x="1.8703%" y="287.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::x86::compress (4 samples, 0.17%)</title><rect x="1.6203%" y="261" width="0.1662%" height="15" fill="rgb(247,81,37)" fg:x="39" fg:w="4"/><text x="1.8703%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::compress (4 samples, 0.17%)</title><rect x="1.6203%" y="245" width="0.1662%" height="15" fill="rgb(209,12,38)" fg:x="39" fg:w="4"/><text x="1.8703%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::sha256_digest_block_u32 (3 samples, 0.12%)</title><rect x="1.6618%" y="229" width="0.1246%" height="15" fill="rgb(227,1,9)" fg:x="40" fg:w="3"/><text x="1.9118%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::sha256_digest_round_x2 (1 samples, 0.04%)</title><rect x="1.7449%" y="213" width="0.0415%" height="15" fill="rgb(248,47,43)" fg:x="42" fg:w="1"/><text x="1.9949%" y="223.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::FixedOutput&gt;::finalize_into (7 samples, 0.29%)</title><rect x="1.5372%" y="357" width="0.2908%" height="15" fill="rgb(221,10,30)" fg:x="37" fg:w="7"/><text x="1.7872%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (7 samples, 0.29%)</title><rect x="1.5372%" y="341" width="0.2908%" height="15" fill="rgb(210,229,1)" fg:x="37" fg:w="7"/><text x="1.7872%" y="351.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;sha2::core_api::Sha256VarCore as digest::core_api::VariableOutputCore&gt;::finalize_variable_core (6 samples, 0.25%)</title><rect x="1.5787%" y="325" width="0.2493%" height="15" fill="rgb(222,148,37)" fg:x="38" fg:w="6"/><text x="1.8287%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::slice::_&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.04%)</title><rect x="1.7865%" y="309" width="0.0415%" height="15" fill="rgb(234,67,33)" fg:x="43" fg:w="1"/><text x="2.0365%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="1.7865%" y="293" width="0.0415%" height="15" fill="rgb(247,98,35)" fg:x="43" fg:w="1"/><text x="2.0365%" y="303.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::_{{closure}} (3 samples, 0.12%)</title><rect x="1.8280%" y="293" width="0.1246%" height="15" fill="rgb(247,138,52)" fg:x="44" fg:w="3"/><text x="2.0780%" y="303.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (2 samples, 0.08%)</title><rect x="1.8695%" y="277" width="0.0831%" height="15" fill="rgb(213,79,30)" fg:x="45" fg:w="2"/><text x="2.1195%" y="287.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::_{{closure}} (2 samples, 0.08%)</title><rect x="1.8695%" y="261" width="0.0831%" height="15" fill="rgb(246,177,23)" fg:x="45" fg:w="2"/><text x="2.1195%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`generic_array::impls::_&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::_{{closure}} (2 samples, 0.08%)</title><rect x="1.8695%" y="245" width="0.0831%" height="15" fill="rgb(230,62,27)" fg:x="45" fg:w="2"/><text x="2.1195%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;D as digest::digest::Digest&gt;::finalize (11 samples, 0.46%)</title><rect x="1.5372%" y="389" width="0.4570%" height="15" fill="rgb(216,154,8)" fg:x="37" fg:w="11"/><text x="1.7872%" y="399.50"></text></g><g><title>speed-0b1675bc7d978a4b`digest::FixedOutput::finalize_fixed (11 samples, 0.46%)</title><rect x="1.5372%" y="373" width="0.4570%" height="15" fill="rgb(244,35,45)" fg:x="37" fg:w="11"/><text x="1.7872%" y="383.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (4 samples, 0.17%)</title><rect x="1.8280%" y="357" width="0.1662%" height="15" fill="rgb(251,115,12)" fg:x="44" fg:w="4"/><text x="2.0780%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::for_each (4 samples, 0.17%)</title><rect x="1.8280%" y="341" width="0.1662%" height="15" fill="rgb(240,54,50)" fg:x="44" fg:w="4"/><text x="2.0780%" y="351.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.17%)</title><rect x="1.8280%" y="325" width="0.1662%" height="15" fill="rgb(233,84,52)" fg:x="44" fg:w="4"/><text x="2.0780%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::fold (4 samples, 0.17%)</title><rect x="1.8280%" y="309" width="0.1662%" height="15" fill="rgb(207,117,47)" fg:x="44" fg:w="4"/><text x="2.0780%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="1.9526%" y="293" width="0.0415%" height="15" fill="rgb(249,43,39)" fg:x="47" fg:w="1"/><text x="2.2026%" y="303.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="1.9526%" y="277" width="0.0415%" height="15" fill="rgb(209,38,44)" fg:x="47" fg:w="1"/><text x="2.2026%" y="287.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::_{{closure}} (1 samples, 0.04%)</title><rect x="2.0357%" y="277" width="0.0415%" height="15" fill="rgb(236,212,23)" fg:x="49" fg:w="1"/><text x="2.2857%" y="287.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1 samples, 0.04%)</title><rect x="2.0357%" y="261" width="0.0415%" height="15" fill="rgb(242,79,21)" fg:x="49" fg:w="1"/><text x="2.2857%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::_{{closure}} (1 samples, 0.04%)</title><rect x="2.0357%" y="245" width="0.0415%" height="15" fill="rgb(211,96,35)" fg:x="49" fg:w="1"/><text x="2.2857%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;D as digest::digest::Digest&gt;::new (3 samples, 0.12%)</title><rect x="1.9942%" y="389" width="0.1246%" height="15" fill="rgb(253,215,40)" fg:x="48" fg:w="3"/><text x="2.2442%" y="399.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as core::default::Default&gt;::default (3 samples, 0.12%)</title><rect x="1.9942%" y="373" width="0.1246%" height="15" fill="rgb(211,81,21)" fg:x="48" fg:w="3"/><text x="2.2442%" y="383.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;block_buffer::BlockBuffer&lt;BlockSize,Kind&gt; as core::default::Default&gt;::default (3 samples, 0.12%)</title><rect x="1.9942%" y="357" width="0.1246%" height="15" fill="rgb(208,190,38)" fg:x="48" fg:w="3"/><text x="2.2442%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (3 samples, 0.12%)</title><rect x="1.9942%" y="341" width="0.1246%" height="15" fill="rgb(235,213,38)" fg:x="48" fg:w="3"/><text x="2.2442%" y="351.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::for_each (3 samples, 0.12%)</title><rect x="1.9942%" y="325" width="0.1246%" height="15" fill="rgb(237,122,38)" fg:x="48" fg:w="3"/><text x="2.2442%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.12%)</title><rect x="1.9942%" y="309" width="0.1246%" height="15" fill="rgb(244,218,35)" fg:x="48" fg:w="3"/><text x="2.2442%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::fold (3 samples, 0.12%)</title><rect x="1.9942%" y="293" width="0.1246%" height="15" fill="rgb(240,68,47)" fg:x="48" fg:w="3"/><text x="2.2442%" y="303.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="2.0773%" y="277" width="0.0415%" height="15" fill="rgb(210,16,53)" fg:x="50" fg:w="1"/><text x="2.3273%" y="287.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="2.0773%" y="261" width="0.0415%" height="15" fill="rgb(235,124,12)" fg:x="50" fg:w="1"/><text x="2.3273%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="2.0773%" y="245" width="0.0415%" height="15" fill="rgb(224,169,11)" fg:x="50" fg:w="1"/><text x="2.3273%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (1 samples, 0.04%)</title><rect x="2.1188%" y="245" width="0.0415%" height="15" fill="rgb(250,166,2)" fg:x="51" fg:w="1"/><text x="2.3688%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T (1 samples, 0.04%)</title><rect x="2.1188%" y="229" width="0.0415%" height="15" fill="rgb(242,216,29)" fg:x="51" fg:w="1"/><text x="2.3688%" y="239.50"></text></g><g><title> N]&gt;::try_from (1 samples, 0.04%)</title><rect x="2.1188%" y="213" width="0.0415%" height="15" fill="rgb(230,116,27)" fg:x="51" fg:w="1"/><text x="2.3688%" y="223.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for &amp;[T (1 samples, 0.04%)</title><rect x="2.1188%" y="197" width="0.0415%" height="15" fill="rgb(228,99,48)" fg:x="51" fg:w="1"/><text x="2.3688%" y="207.50"></text></g><g><title> N]&gt;::try_from (1 samples, 0.04%)</title><rect x="2.1188%" y="181" width="0.0415%" height="15" fill="rgb(253,11,6)" fg:x="51" fg:w="1"/><text x="2.3688%" y="191.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::schedule (1 samples, 0.04%)</title><rect x="2.1604%" y="229" width="0.0415%" height="15" fill="rgb(247,143,39)" fg:x="52" fg:w="1"/><text x="2.4104%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;D as digest::digest::Digest&gt;::update (4 samples, 0.17%)</title><rect x="2.1188%" y="389" width="0.1662%" height="15" fill="rgb(236,97,10)" fg:x="51" fg:w="4"/><text x="2.3688%" y="399.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::Update&gt;::update (4 samples, 0.17%)</title><rect x="2.1188%" y="373" width="0.1662%" height="15" fill="rgb(233,208,19)" fg:x="51" fg:w="4"/><text x="2.3688%" y="383.50"></text></g><g><title>speed-0b1675bc7d978a4b`block_buffer::BlockBuffer&lt;BlockSize,Kind&gt;::digest_blocks (4 samples, 0.17%)</title><rect x="2.1188%" y="357" width="0.1662%" height="15" fill="rgb(216,164,2)" fg:x="51" fg:w="4"/><text x="2.3688%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::Update&gt;::update::_{{closure}} (4 samples, 0.17%)</title><rect x="2.1188%" y="341" width="0.1662%" height="15" fill="rgb(220,129,5)" fg:x="51" fg:w="4"/><text x="2.3688%" y="351.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::UpdateCore&gt;::update_blocks (4 samples, 0.17%)</title><rect x="2.1188%" y="325" width="0.1662%" height="15" fill="rgb(242,17,10)" fg:x="51" fg:w="4"/><text x="2.3688%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;sha2::core_api::Sha256VarCore as digest::core_api::UpdateCore&gt;::update_blocks (4 samples, 0.17%)</title><rect x="2.1188%" y="309" width="0.1662%" height="15" fill="rgb(242,107,0)" fg:x="51" fg:w="4"/><text x="2.3688%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::compress256 (4 samples, 0.17%)</title><rect x="2.1188%" y="293" width="0.1662%" height="15" fill="rgb(251,28,31)" fg:x="51" fg:w="4"/><text x="2.3688%" y="303.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::x86::compress (4 samples, 0.17%)</title><rect x="2.1188%" y="277" width="0.1662%" height="15" fill="rgb(233,223,10)" fg:x="51" fg:w="4"/><text x="2.3688%" y="287.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::compress (4 samples, 0.17%)</title><rect x="2.1188%" y="261" width="0.1662%" height="15" fill="rgb(215,21,27)" fg:x="51" fg:w="4"/><text x="2.3688%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::sha256_digest_block_u32 (3 samples, 0.12%)</title><rect x="2.1604%" y="245" width="0.1246%" height="15" fill="rgb(232,23,21)" fg:x="52" fg:w="3"/><text x="2.4104%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::sha256_digest_round_x2 (2 samples, 0.08%)</title><rect x="2.2019%" y="229" width="0.0831%" height="15" fill="rgb(244,5,23)" fg:x="53" fg:w="2"/><text x="2.4519%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="2.2850%" y="149" width="0.0415%" height="15" fill="rgb(226,81,46)" fg:x="55" fg:w="1"/><text x="2.5350%" y="159.50"></text></g><g><title>speed-0b1675bc7d978a4b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.04%)</title><rect x="2.2850%" y="133" width="0.0415%" height="15" fill="rgb(247,70,30)" fg:x="55" fg:w="1"/><text x="2.5350%" y="143.50"></text></g><g><title>speed-0b1675bc7d978a4b`alloc::raw_vec::finish_grow (1 samples, 0.04%)</title><rect x="2.2850%" y="117" width="0.0415%" height="15" fill="rgb(212,68,19)" fg:x="55" fg:w="1"/><text x="2.5350%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.04%)</title><rect x="2.2850%" y="101" width="0.0415%" height="15" fill="rgb(240,187,13)" fg:x="55" fg:w="1"/><text x="2.5350%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.04%)</title><rect x="2.2850%" y="85" width="0.0415%" height="15" fill="rgb(223,113,26)" fg:x="55" fg:w="1"/><text x="2.5350%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.04%)</title><rect x="2.2850%" y="69" width="0.0415%" height="15" fill="rgb(206,192,2)" fg:x="55" fg:w="1"/><text x="2.5350%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.04%)</title><rect x="2.2850%" y="53" width="0.0415%" height="15" fill="rgb(241,108,4)" fg:x="55" fg:w="1"/><text x="2.5350%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.04%)</title><rect x="2.2850%" y="37" width="0.0415%" height="15" fill="rgb(247,173,49)" fg:x="55" fg:w="1"/><text x="2.5350%" y="47.50"></text></g><g><title>speed-0b1675bc7d978a4b`bft_json_crdt::list_crdt::ListCRDT&lt;T&gt;::apply (54 samples, 2.24%)</title><rect x="0.1246%" y="437" width="2.2435%" height="15" fill="rgb(224,114,35)" fg:x="3" fg:w="54"/><text x="0.3746%" y="447.50">s..</text></g><g><title>speed-0b1675bc7d978a4b`bft_json_crdt::op::Op&lt;T&gt;::valid_hash (21 samples, 0.87%)</title><rect x="1.4956%" y="421" width="0.8725%" height="15" fill="rgb(245,159,27)" fg:x="36" fg:w="21"/><text x="1.7456%" y="431.50"></text></g><g><title>speed-0b1675bc7d978a4b`bft_json_crdt::op::Op&lt;T&gt;::hash (21 samples, 0.87%)</title><rect x="1.4956%" y="405" width="0.8725%" height="15" fill="rgb(245,172,44)" fg:x="36" fg:w="21"/><text x="1.7456%" y="415.50"></text></g><g><title>speed-0b1675bc7d978a4b`alloc::fmt::format (2 samples, 0.08%)</title><rect x="2.2850%" y="389" width="0.0831%" height="15" fill="rgb(236,23,11)" fg:x="55" fg:w="2"/><text x="2.5350%" y="399.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::option::Option&lt;T&gt;::map_or_else (2 samples, 0.08%)</title><rect x="2.2850%" y="373" width="0.0831%" height="15" fill="rgb(205,117,38)" fg:x="55" fg:w="2"/><text x="2.5350%" y="383.50"></text></g><g><title>speed-0b1675bc7d978a4b`alloc::fmt::format::_{{closure}} (2 samples, 0.08%)</title><rect x="2.2850%" y="357" width="0.0831%" height="15" fill="rgb(237,72,25)" fg:x="55" fg:w="2"/><text x="2.5350%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`alloc::fmt::format::format_inner (2 samples, 0.08%)</title><rect x="2.2850%" y="341" width="0.0831%" height="15" fill="rgb(244,70,9)" fg:x="55" fg:w="2"/><text x="2.5350%" y="351.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::fmt::write (2 samples, 0.08%)</title><rect x="2.2850%" y="325" width="0.0831%" height="15" fill="rgb(217,125,39)" fg:x="55" fg:w="2"/><text x="2.5350%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::array::_&lt;impl core::fmt::Debug for [T (2 samples, 0.08%)</title><rect x="2.2850%" y="309" width="0.0831%" height="15" fill="rgb(235,36,10)" fg:x="55" fg:w="2"/><text x="2.5350%" y="319.50"></text></g><g><title> N]&gt;::fmt (2 samples, 0.08%)</title><rect x="2.2850%" y="293" width="0.0831%" height="15" fill="rgb(251,123,47)" fg:x="55" fg:w="2"/><text x="2.5350%" y="303.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;&amp;T as core::fmt::Debug&gt;::fmt (2 samples, 0.08%)</title><rect x="2.2850%" y="277" width="0.0831%" height="15" fill="rgb(221,13,13)" fg:x="55" fg:w="2"/><text x="2.5350%" y="287.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;[T] as core::fmt::Debug&gt;::fmt (2 samples, 0.08%)</title><rect x="2.2850%" y="261" width="0.0831%" height="15" fill="rgb(238,131,9)" fg:x="55" fg:w="2"/><text x="2.5350%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::fmt::builders::DebugList::entries (2 samples, 0.08%)</title><rect x="2.2850%" y="245" width="0.0831%" height="15" fill="rgb(211,50,8)" fg:x="55" fg:w="2"/><text x="2.5350%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::fmt::builders::DebugSet::entry (2 samples, 0.08%)</title><rect x="2.2850%" y="229" width="0.0831%" height="15" fill="rgb(245,182,24)" fg:x="55" fg:w="2"/><text x="2.5350%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::fmt::builders::DebugInner::entry (2 samples, 0.08%)</title><rect x="2.2850%" y="213" width="0.0831%" height="15" fill="rgb(242,14,37)" fg:x="55" fg:w="2"/><text x="2.5350%" y="223.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;&amp;T as core::fmt::Debug&gt;::fmt (2 samples, 0.08%)</title><rect x="2.2850%" y="197" width="0.0831%" height="15" fill="rgb(246,228,12)" fg:x="55" fg:w="2"/><text x="2.5350%" y="207.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::fmt::num::_&lt;impl core::fmt::Debug for u8&gt;::fmt (2 samples, 0.08%)</title><rect x="2.2850%" y="181" width="0.0831%" height="15" fill="rgb(213,55,15)" fg:x="55" fg:w="2"/><text x="2.5350%" y="191.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::fmt::num::imp::_&lt;impl core::fmt::Display for u8&gt;::fmt (2 samples, 0.08%)</title><rect x="2.2850%" y="165" width="0.0831%" height="15" fill="rgb(209,9,3)" fg:x="55" fg:w="2"/><text x="2.5350%" y="175.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::fmt::Formatter::pad_integral (1 samples, 0.04%)</title><rect x="2.3265%" y="149" width="0.0415%" height="15" fill="rgb(230,59,30)" fg:x="56" fg:w="1"/><text x="2.5765%" y="159.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::_{{closure}} (1 samples, 0.04%)</title><rect x="2.3681%" y="277" width="0.0415%" height="15" fill="rgb(209,121,21)" fg:x="57" fg:w="1"/><text x="2.6181%" y="287.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1 samples, 0.04%)</title><rect x="2.3681%" y="261" width="0.0415%" height="15" fill="rgb(220,109,13)" fg:x="57" fg:w="1"/><text x="2.6181%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::_{{closure}} (1 samples, 0.04%)</title><rect x="2.3681%" y="245" width="0.0415%" height="15" fill="rgb(232,18,1)" fg:x="57" fg:w="1"/><text x="2.6181%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (3 samples, 0.12%)</title><rect x="2.3681%" y="341" width="0.1246%" height="15" fill="rgb(215,41,42)" fg:x="57" fg:w="3"/><text x="2.6181%" y="351.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::for_each (3 samples, 0.12%)</title><rect x="2.3681%" y="325" width="0.1246%" height="15" fill="rgb(224,123,36)" fg:x="57" fg:w="3"/><text x="2.6181%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.12%)</title><rect x="2.3681%" y="309" width="0.1246%" height="15" fill="rgb(240,125,3)" fg:x="57" fg:w="3"/><text x="2.6181%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::fold (3 samples, 0.12%)</title><rect x="2.3681%" y="293" width="0.1246%" height="15" fill="rgb(205,98,50)" fg:x="57" fg:w="3"/><text x="2.6181%" y="303.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.08%)</title><rect x="2.4096%" y="277" width="0.0831%" height="15" fill="rgb(205,185,37)" fg:x="58" fg:w="2"/><text x="2.6596%" y="287.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="2.4512%" y="261" width="0.0415%" height="15" fill="rgb(238,207,15)" fg:x="59" fg:w="1"/><text x="2.7012%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="2.4512%" y="245" width="0.0415%" height="15" fill="rgb(213,199,42)" fg:x="59" fg:w="1"/><text x="2.7012%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::schedule (1 samples, 0.04%)</title><rect x="2.5343%" y="229" width="0.0415%" height="15" fill="rgb(235,201,11)" fg:x="61" fg:w="1"/><text x="2.7843%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::sha256msg1 (1 samples, 0.04%)</title><rect x="2.5343%" y="213" width="0.0415%" height="15" fill="rgb(207,46,11)" fg:x="61" fg:w="1"/><text x="2.7843%" y="223.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::sha256msg1::sigma0x4 (1 samples, 0.04%)</title><rect x="2.5343%" y="197" width="0.0415%" height="15" fill="rgb(241,35,35)" fg:x="61" fg:w="1"/><text x="2.7843%" y="207.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;D as digest::digest::Digest&gt;::finalize (9 samples, 0.37%)</title><rect x="2.3681%" y="405" width="0.3739%" height="15" fill="rgb(243,32,47)" fg:x="57" fg:w="9"/><text x="2.6181%" y="415.50"></text></g><g><title>speed-0b1675bc7d978a4b`digest::FixedOutput::finalize_fixed (9 samples, 0.37%)</title><rect x="2.3681%" y="389" width="0.3739%" height="15" fill="rgb(247,202,23)" fg:x="57" fg:w="9"/><text x="2.6181%" y="399.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::FixedOutput&gt;::finalize_into (9 samples, 0.37%)</title><rect x="2.3681%" y="373" width="0.3739%" height="15" fill="rgb(219,102,11)" fg:x="57" fg:w="9"/><text x="2.6181%" y="383.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (9 samples, 0.37%)</title><rect x="2.3681%" y="357" width="0.3739%" height="15" fill="rgb(243,110,44)" fg:x="57" fg:w="9"/><text x="2.6181%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;sha2::core_api::Sha256VarCore as digest::core_api::VariableOutputCore&gt;::finalize_variable_core (6 samples, 0.25%)</title><rect x="2.4927%" y="341" width="0.2493%" height="15" fill="rgb(222,74,54)" fg:x="60" fg:w="6"/><text x="2.7427%" y="351.50"></text></g><g><title>speed-0b1675bc7d978a4b`block_buffer::BlockBuffer&lt;BlockSize,block_buffer::Eager&gt;::len64_padding_be (6 samples, 0.25%)</title><rect x="2.4927%" y="325" width="0.2493%" height="15" fill="rgb(216,99,12)" fg:x="60" fg:w="6"/><text x="2.7427%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;sha2::core_api::Sha256VarCore as digest::core_api::VariableOutputCore&gt;::finalize_variable_core::_{{closure}} (6 samples, 0.25%)</title><rect x="2.4927%" y="309" width="0.2493%" height="15" fill="rgb(226,22,26)" fg:x="60" fg:w="6"/><text x="2.7427%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::compress256 (6 samples, 0.25%)</title><rect x="2.4927%" y="293" width="0.2493%" height="15" fill="rgb(217,163,10)" fg:x="60" fg:w="6"/><text x="2.7427%" y="303.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::x86::compress (6 samples, 0.25%)</title><rect x="2.4927%" y="277" width="0.2493%" height="15" fill="rgb(213,25,53)" fg:x="60" fg:w="6"/><text x="2.7427%" y="287.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::compress (6 samples, 0.25%)</title><rect x="2.4927%" y="261" width="0.2493%" height="15" fill="rgb(252,105,26)" fg:x="60" fg:w="6"/><text x="2.7427%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::sha256_digest_block_u32 (6 samples, 0.25%)</title><rect x="2.4927%" y="245" width="0.2493%" height="15" fill="rgb(220,39,43)" fg:x="60" fg:w="6"/><text x="2.7427%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::sha256_digest_round_x2 (4 samples, 0.17%)</title><rect x="2.5758%" y="229" width="0.1662%" height="15" fill="rgb(229,68,48)" fg:x="62" fg:w="4"/><text x="2.8258%" y="239.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (1 samples, 0.04%)</title><rect x="2.7420%" y="341" width="0.0415%" height="15" fill="rgb(252,8,32)" fg:x="66" fg:w="1"/><text x="2.9920%" y="351.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::_{{closure}} (4 samples, 0.17%)</title><rect x="2.8251%" y="293" width="0.1662%" height="15" fill="rgb(223,20,43)" fg:x="68" fg:w="4"/><text x="3.0751%" y="303.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (3 samples, 0.12%)</title><rect x="2.8666%" y="277" width="0.1246%" height="15" fill="rgb(229,81,49)" fg:x="69" fg:w="3"/><text x="3.1166%" y="287.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::_{{closure}} (2 samples, 0.08%)</title><rect x="2.9082%" y="261" width="0.0831%" height="15" fill="rgb(236,28,36)" fg:x="70" fg:w="2"/><text x="3.1582%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;D as digest::digest::Digest&gt;::new (7 samples, 0.29%)</title><rect x="2.7420%" y="405" width="0.2908%" height="15" fill="rgb(249,185,26)" fg:x="66" fg:w="7"/><text x="2.9920%" y="415.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as core::default::Default&gt;::default (7 samples, 0.29%)</title><rect x="2.7420%" y="389" width="0.2908%" height="15" fill="rgb(249,174,33)" fg:x="66" fg:w="7"/><text x="2.9920%" y="399.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;block_buffer::BlockBuffer&lt;BlockSize,Kind&gt; as core::default::Default&gt;::default (7 samples, 0.29%)</title><rect x="2.7420%" y="373" width="0.2908%" height="15" fill="rgb(233,201,37)" fg:x="66" fg:w="7"/><text x="2.9920%" y="383.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (7 samples, 0.29%)</title><rect x="2.7420%" y="357" width="0.2908%" height="15" fill="rgb(221,78,26)" fg:x="66" fg:w="7"/><text x="2.9920%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::for_each (6 samples, 0.25%)</title><rect x="2.7835%" y="341" width="0.2493%" height="15" fill="rgb(250,127,30)" fg:x="67" fg:w="6"/><text x="3.0335%" y="351.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.25%)</title><rect x="2.7835%" y="325" width="0.2493%" height="15" fill="rgb(230,49,44)" fg:x="67" fg:w="6"/><text x="3.0335%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::fold (6 samples, 0.25%)</title><rect x="2.7835%" y="309" width="0.2493%" height="15" fill="rgb(229,67,23)" fg:x="67" fg:w="6"/><text x="3.0335%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="2.9913%" y="293" width="0.0415%" height="15" fill="rgb(249,83,47)" fg:x="72" fg:w="1"/><text x="3.2413%" y="303.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="2.9913%" y="277" width="0.0415%" height="15" fill="rgb(215,43,3)" fg:x="72" fg:w="1"/><text x="3.2413%" y="287.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="2.9913%" y="261" width="0.0415%" height="15" fill="rgb(238,154,13)" fg:x="72" fg:w="1"/><text x="3.2413%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (1 samples, 0.04%)</title><rect x="3.0328%" y="261" width="0.0415%" height="15" fill="rgb(219,56,2)" fg:x="73" fg:w="1"/><text x="3.2828%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T (1 samples, 0.04%)</title><rect x="3.0328%" y="245" width="0.0415%" height="15" fill="rgb(233,0,4)" fg:x="73" fg:w="1"/><text x="3.2828%" y="255.50"></text></g><g><title> N]&gt;::try_from (1 samples, 0.04%)</title><rect x="3.0328%" y="229" width="0.0415%" height="15" fill="rgb(235,30,7)" fg:x="73" fg:w="1"/><text x="3.2828%" y="239.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (1 samples, 0.04%)</title><rect x="3.0744%" y="245" width="0.0415%" height="15" fill="rgb(250,79,13)" fg:x="74" fg:w="1"/><text x="3.3244%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::zip (2 samples, 0.08%)</title><rect x="3.0744%" y="261" width="0.0831%" height="15" fill="rgb(211,146,34)" fg:x="74" fg:w="2"/><text x="3.3244%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::adapters::zip::Zip&lt;A,B&gt;::new (1 samples, 0.04%)</title><rect x="3.1159%" y="245" width="0.0415%" height="15" fill="rgb(228,22,38)" fg:x="75" fg:w="1"/><text x="3.3659%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (1 samples, 0.04%)</title><rect x="3.1159%" y="229" width="0.0415%" height="15" fill="rgb(235,168,5)" fg:x="75" fg:w="1"/><text x="3.3659%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="3.1159%" y="213" width="0.0415%" height="15" fill="rgb(221,155,16)" fg:x="75" fg:w="1"/><text x="3.3659%" y="223.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::schedule (2 samples, 0.08%)</title><rect x="3.1990%" y="245" width="0.0831%" height="15" fill="rgb(215,215,53)" fg:x="77" fg:w="2"/><text x="3.4490%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::sha256msg1 (1 samples, 0.04%)</title><rect x="3.2405%" y="229" width="0.0415%" height="15" fill="rgb(223,4,10)" fg:x="78" fg:w="1"/><text x="3.4905%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;D as digest::digest::Digest&gt;::update (8 samples, 0.33%)</title><rect x="3.0328%" y="405" width="0.3324%" height="15" fill="rgb(234,103,6)" fg:x="73" fg:w="8"/><text x="3.2828%" y="415.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::Update&gt;::update (8 samples, 0.33%)</title><rect x="3.0328%" y="389" width="0.3324%" height="15" fill="rgb(227,97,0)" fg:x="73" fg:w="8"/><text x="3.2828%" y="399.50"></text></g><g><title>speed-0b1675bc7d978a4b`block_buffer::BlockBuffer&lt;BlockSize,Kind&gt;::digest_blocks (8 samples, 0.33%)</title><rect x="3.0328%" y="373" width="0.3324%" height="15" fill="rgb(234,150,53)" fg:x="73" fg:w="8"/><text x="3.2828%" y="383.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::Update&gt;::update::_{{closure}} (8 samples, 0.33%)</title><rect x="3.0328%" y="357" width="0.3324%" height="15" fill="rgb(228,201,54)" fg:x="73" fg:w="8"/><text x="3.2828%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::UpdateCore&gt;::update_blocks (8 samples, 0.33%)</title><rect x="3.0328%" y="341" width="0.3324%" height="15" fill="rgb(222,22,37)" fg:x="73" fg:w="8"/><text x="3.2828%" y="351.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;sha2::core_api::Sha256VarCore as digest::core_api::UpdateCore&gt;::update_blocks (8 samples, 0.33%)</title><rect x="3.0328%" y="325" width="0.3324%" height="15" fill="rgb(237,53,32)" fg:x="73" fg:w="8"/><text x="3.2828%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::compress256 (8 samples, 0.33%)</title><rect x="3.0328%" y="309" width="0.3324%" height="15" fill="rgb(233,25,53)" fg:x="73" fg:w="8"/><text x="3.2828%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::x86::compress (8 samples, 0.33%)</title><rect x="3.0328%" y="293" width="0.3324%" height="15" fill="rgb(210,40,34)" fg:x="73" fg:w="8"/><text x="3.2828%" y="303.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::compress (8 samples, 0.33%)</title><rect x="3.0328%" y="277" width="0.3324%" height="15" fill="rgb(241,220,44)" fg:x="73" fg:w="8"/><text x="3.2828%" y="287.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::sha256_digest_block_u32 (5 samples, 0.21%)</title><rect x="3.1575%" y="261" width="0.2077%" height="15" fill="rgb(235,28,35)" fg:x="76" fg:w="5"/><text x="3.4075%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::sha256_digest_round_x2 (2 samples, 0.08%)</title><rect x="3.2821%" y="245" width="0.0831%" height="15" fill="rgb(210,56,17)" fg:x="79" fg:w="2"/><text x="3.5321%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::fmt::Formatter::debug_lower_hex (1 samples, 0.04%)</title><rect x="3.4067%" y="181" width="0.0415%" height="15" fill="rgb(224,130,29)" fg:x="82" fg:w="1"/><text x="3.6567%" y="191.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::fmt::builders::DebugList::entries (3 samples, 0.12%)</title><rect x="3.3652%" y="261" width="0.1246%" height="15" fill="rgb(235,212,8)" fg:x="81" fg:w="3"/><text x="3.6152%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::fmt::builders::DebugSet::entry (2 samples, 0.08%)</title><rect x="3.4067%" y="245" width="0.0831%" height="15" fill="rgb(223,33,50)" fg:x="82" fg:w="2"/><text x="3.6567%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::fmt::builders::DebugInner::entry (2 samples, 0.08%)</title><rect x="3.4067%" y="229" width="0.0831%" height="15" fill="rgb(219,149,13)" fg:x="82" fg:w="2"/><text x="3.6567%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;&amp;T as core::fmt::Debug&gt;::fmt (2 samples, 0.08%)</title><rect x="3.4067%" y="213" width="0.0831%" height="15" fill="rgb(250,156,29)" fg:x="82" fg:w="2"/><text x="3.6567%" y="223.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::fmt::num::_&lt;impl core::fmt::Debug for u8&gt;::fmt (2 samples, 0.08%)</title><rect x="3.4067%" y="197" width="0.0831%" height="15" fill="rgb(216,193,19)" fg:x="82" fg:w="2"/><text x="3.6567%" y="207.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::fmt::num::imp::_&lt;impl core::fmt::Display for u8&gt;::fmt (1 samples, 0.04%)</title><rect x="3.4483%" y="181" width="0.0415%" height="15" fill="rgb(216,135,14)" fg:x="83" fg:w="1"/><text x="3.6983%" y="191.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="3.4483%" y="165" width="0.0415%" height="15" fill="rgb(241,47,5)" fg:x="83" fg:w="1"/><text x="3.6983%" y="175.50"></text></g><g><title>speed-0b1675bc7d978a4b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.04%)</title><rect x="3.4483%" y="149" width="0.0415%" height="15" fill="rgb(233,42,35)" fg:x="83" fg:w="1"/><text x="3.6983%" y="159.50"></text></g><g><title>speed-0b1675bc7d978a4b`alloc::raw_vec::finish_grow (1 samples, 0.04%)</title><rect x="3.4483%" y="133" width="0.0415%" height="15" fill="rgb(231,13,6)" fg:x="83" fg:w="1"/><text x="3.6983%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.04%)</title><rect x="3.4483%" y="117" width="0.0415%" height="15" fill="rgb(207,181,40)" fg:x="83" fg:w="1"/><text x="3.6983%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.04%)</title><rect x="3.4483%" y="101" width="0.0415%" height="15" fill="rgb(254,173,49)" fg:x="83" fg:w="1"/><text x="3.6983%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.04%)</title><rect x="3.4483%" y="85" width="0.0415%" height="15" fill="rgb(221,1,38)" fg:x="83" fg:w="1"/><text x="3.6983%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.04%)</title><rect x="3.4483%" y="69" width="0.0415%" height="15" fill="rgb(206,124,46)" fg:x="83" fg:w="1"/><text x="3.6983%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.04%)</title><rect x="3.4483%" y="53" width="0.0415%" height="15" fill="rgb(249,21,11)" fg:x="83" fg:w="1"/><text x="3.6983%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.04%)</title><rect x="3.4483%" y="37" width="0.0415%" height="15" fill="rgb(222,201,40)" fg:x="83" fg:w="1"/><text x="3.6983%" y="47.50"></text></g><g><title>speed-0b1675bc7d978a4b`speed::bench_insert_1_000_linear::_{{closure}} (82 samples, 3.41%)</title><rect x="0.1246%" y="533" width="3.4067%" height="15" fill="rgb(235,61,29)" fg:x="3" fg:w="82"/><text x="0.3746%" y="543.50">spe..</text></g><g><title>speed-0b1675bc7d978a4b`speed::bench_insert_1_000_linear (82 samples, 3.41%)</title><rect x="0.1246%" y="517" width="3.4067%" height="15" fill="rgb(219,207,3)" fg:x="3" fg:w="82"/><text x="0.3746%" y="527.50">spe..</text></g><g><title>speed-0b1675bc7d978a4b`test::bench::Bencher::iter (82 samples, 3.41%)</title><rect x="0.1246%" y="501" width="3.4067%" height="15" fill="rgb(222,56,46)" fg:x="3" fg:w="82"/><text x="0.3746%" y="511.50">spe..</text></g><g><title>speed-0b1675bc7d978a4b`test::bench::ns_iter_inner (82 samples, 3.41%)</title><rect x="0.1246%" y="485" width="3.4067%" height="15" fill="rgb(239,76,54)" fg:x="3" fg:w="82"/><text x="0.3746%" y="495.50">spe..</text></g><g><title>speed-0b1675bc7d978a4b`speed::bench_insert_1_000_linear::_{{closure}} (82 samples, 3.41%)</title><rect x="0.1246%" y="469" width="3.4067%" height="15" fill="rgb(231,124,27)" fg:x="3" fg:w="82"/><text x="0.3746%" y="479.50">spe..</text></g><g><title>speed-0b1675bc7d978a4b`bft_json_crdt::list_crdt::ListCRDT&lt;T&gt;::insert (82 samples, 3.41%)</title><rect x="0.1246%" y="453" width="3.4067%" height="15" fill="rgb(249,195,6)" fg:x="3" fg:w="82"/><text x="0.3746%" y="463.50">spe..</text></g><g><title>speed-0b1675bc7d978a4b`bft_json_crdt::op::Op&lt;T&gt;::new (28 samples, 1.16%)</title><rect x="2.3681%" y="437" width="1.1633%" height="15" fill="rgb(237,174,47)" fg:x="57" fg:w="28"/><text x="2.6181%" y="447.50"></text></g><g><title>speed-0b1675bc7d978a4b`bft_json_crdt::op::Op&lt;T&gt;::hash (28 samples, 1.16%)</title><rect x="2.3681%" y="421" width="1.1633%" height="15" fill="rgb(206,201,31)" fg:x="57" fg:w="28"/><text x="2.6181%" y="431.50"></text></g><g><title>speed-0b1675bc7d978a4b`alloc::fmt::format (4 samples, 0.17%)</title><rect x="3.3652%" y="405" width="0.1662%" height="15" fill="rgb(231,57,52)" fg:x="81" fg:w="4"/><text x="3.6152%" y="415.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::option::Option&lt;T&gt;::map_or_else (4 samples, 0.17%)</title><rect x="3.3652%" y="389" width="0.1662%" height="15" fill="rgb(248,177,22)" fg:x="81" fg:w="4"/><text x="3.6152%" y="399.50"></text></g><g><title>speed-0b1675bc7d978a4b`alloc::fmt::format::_{{closure}} (4 samples, 0.17%)</title><rect x="3.3652%" y="373" width="0.1662%" height="15" fill="rgb(215,211,37)" fg:x="81" fg:w="4"/><text x="3.6152%" y="383.50"></text></g><g><title>speed-0b1675bc7d978a4b`alloc::fmt::format::format_inner (4 samples, 0.17%)</title><rect x="3.3652%" y="357" width="0.1662%" height="15" fill="rgb(241,128,51)" fg:x="81" fg:w="4"/><text x="3.6152%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::fmt::write (4 samples, 0.17%)</title><rect x="3.3652%" y="341" width="0.1662%" height="15" fill="rgb(227,165,31)" fg:x="81" fg:w="4"/><text x="3.6152%" y="351.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::array::_&lt;impl core::fmt::Debug for [T (4 samples, 0.17%)</title><rect x="3.3652%" y="325" width="0.1662%" height="15" fill="rgb(228,167,24)" fg:x="81" fg:w="4"/><text x="3.6152%" y="335.50"></text></g><g><title> N]&gt;::fmt (4 samples, 0.17%)</title><rect x="3.3652%" y="309" width="0.1662%" height="15" fill="rgb(228,143,12)" fg:x="81" fg:w="4"/><text x="3.6152%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;&amp;T as core::fmt::Debug&gt;::fmt (4 samples, 0.17%)</title><rect x="3.3652%" y="293" width="0.1662%" height="15" fill="rgb(249,149,8)" fg:x="81" fg:w="4"/><text x="3.6152%" y="303.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;[T] as core::fmt::Debug&gt;::fmt (4 samples, 0.17%)</title><rect x="3.3652%" y="277" width="0.1662%" height="15" fill="rgb(243,35,44)" fg:x="81" fg:w="4"/><text x="3.6152%" y="287.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::fmt::builders::DebugSet::entry (1 samples, 0.04%)</title><rect x="3.4898%" y="261" width="0.0415%" height="15" fill="rgb(246,89,9)" fg:x="84" fg:w="1"/><text x="3.7398%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`bft_json_crdt::list_crdt::ListCRDT&lt;T&gt;::find (1 samples, 0.04%)</title><rect x="3.5314%" y="421" width="0.0415%" height="15" fill="rgb(233,213,13)" fg:x="85" fg:w="1"/><text x="3.7814%" y="431.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (1 samples, 0.04%)</title><rect x="3.5314%" y="405" width="0.0415%" height="15" fill="rgb(233,141,41)" fg:x="85" fg:w="1"/><text x="3.7814%" y="415.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="3.5314%" y="389" width="0.0415%" height="15" fill="rgb(239,167,4)" fg:x="85" fg:w="1"/><text x="3.7814%" y="399.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::const_ptr::_&lt;impl *const T&gt;::is_null (1 samples, 0.04%)</title><rect x="3.5314%" y="373" width="0.0415%" height="15" fill="rgb(209,217,16)" fg:x="85" fg:w="1"/><text x="3.7814%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="3.6145%" y="229" width="0.0415%" height="15" fill="rgb(219,88,35)" fg:x="87" fg:w="1"/><text x="3.8645%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (1 samples, 0.04%)</title><rect x="3.6560%" y="229" width="0.0415%" height="15" fill="rgb(220,193,23)" fg:x="88" fg:w="1"/><text x="3.9060%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T (1 samples, 0.04%)</title><rect x="3.6560%" y="213" width="0.0415%" height="15" fill="rgb(230,90,52)" fg:x="88" fg:w="1"/><text x="3.9060%" y="223.50"></text></g><g><title> N]&gt;::try_from (1 samples, 0.04%)</title><rect x="3.6560%" y="197" width="0.0415%" height="15" fill="rgb(252,106,19)" fg:x="88" fg:w="1"/><text x="3.9060%" y="207.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::result::Result&lt;T,E&gt;::map (1 samples, 0.04%)</title><rect x="3.6560%" y="181" width="0.0415%" height="15" fill="rgb(206,74,20)" fg:x="88" fg:w="1"/><text x="3.9060%" y="191.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::result::Result&lt;T,E&gt;::unwrap (1 samples, 0.04%)</title><rect x="3.6975%" y="229" width="0.0415%" height="15" fill="rgb(230,138,44)" fg:x="89" fg:w="1"/><text x="3.9475%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::FixedOutput&gt;::finalize_into (4 samples, 0.17%)</title><rect x="3.6145%" y="357" width="0.1662%" height="15" fill="rgb(235,182,43)" fg:x="87" fg:w="4"/><text x="3.8645%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (4 samples, 0.17%)</title><rect x="3.6145%" y="341" width="0.1662%" height="15" fill="rgb(242,16,51)" fg:x="87" fg:w="4"/><text x="3.8645%" y="351.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;sha2::core_api::Sha256VarCore as digest::core_api::VariableOutputCore&gt;::finalize_variable_core (4 samples, 0.17%)</title><rect x="3.6145%" y="325" width="0.1662%" height="15" fill="rgb(248,9,4)" fg:x="87" fg:w="4"/><text x="3.8645%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`block_buffer::BlockBuffer&lt;BlockSize,block_buffer::Eager&gt;::len64_padding_be (4 samples, 0.17%)</title><rect x="3.6145%" y="309" width="0.1662%" height="15" fill="rgb(210,31,22)" fg:x="87" fg:w="4"/><text x="3.8645%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;sha2::core_api::Sha256VarCore as digest::core_api::VariableOutputCore&gt;::finalize_variable_core::_{{closure}} (4 samples, 0.17%)</title><rect x="3.6145%" y="293" width="0.1662%" height="15" fill="rgb(239,54,39)" fg:x="87" fg:w="4"/><text x="3.8645%" y="303.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::compress256 (4 samples, 0.17%)</title><rect x="3.6145%" y="277" width="0.1662%" height="15" fill="rgb(230,99,41)" fg:x="87" fg:w="4"/><text x="3.8645%" y="287.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::x86::compress (4 samples, 0.17%)</title><rect x="3.6145%" y="261" width="0.1662%" height="15" fill="rgb(253,106,12)" fg:x="87" fg:w="4"/><text x="3.8645%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::compress (4 samples, 0.17%)</title><rect x="3.6145%" y="245" width="0.1662%" height="15" fill="rgb(213,46,41)" fg:x="87" fg:w="4"/><text x="3.8645%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::sha256_digest_block_u32 (1 samples, 0.04%)</title><rect x="3.7391%" y="229" width="0.0415%" height="15" fill="rgb(215,133,35)" fg:x="90" fg:w="1"/><text x="3.9891%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::schedule (1 samples, 0.04%)</title><rect x="3.7391%" y="213" width="0.0415%" height="15" fill="rgb(213,28,5)" fg:x="90" fg:w="1"/><text x="3.9891%" y="223.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::sha256msg1 (1 samples, 0.04%)</title><rect x="3.7391%" y="197" width="0.0415%" height="15" fill="rgb(215,77,49)" fg:x="90" fg:w="1"/><text x="3.9891%" y="207.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::sha256msg1::sigma0x4 (1 samples, 0.04%)</title><rect x="3.7391%" y="181" width="0.0415%" height="15" fill="rgb(248,100,22)" fg:x="90" fg:w="1"/><text x="3.9891%" y="191.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::write (1 samples, 0.04%)</title><rect x="3.8222%" y="245" width="0.0415%" height="15" fill="rgb(208,67,9)" fg:x="92" fg:w="1"/><text x="4.0722%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;D as digest::digest::Digest&gt;::finalize (7 samples, 0.29%)</title><rect x="3.6145%" y="389" width="0.2908%" height="15" fill="rgb(219,133,21)" fg:x="87" fg:w="7"/><text x="3.8645%" y="399.50"></text></g><g><title>speed-0b1675bc7d978a4b`digest::FixedOutput::finalize_fixed (7 samples, 0.29%)</title><rect x="3.6145%" y="373" width="0.2908%" height="15" fill="rgb(246,46,29)" fg:x="87" fg:w="7"/><text x="3.8645%" y="383.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (3 samples, 0.12%)</title><rect x="3.7806%" y="357" width="0.1246%" height="15" fill="rgb(246,185,52)" fg:x="91" fg:w="3"/><text x="4.0306%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::for_each (3 samples, 0.12%)</title><rect x="3.7806%" y="341" width="0.1246%" height="15" fill="rgb(252,136,11)" fg:x="91" fg:w="3"/><text x="4.0306%" y="351.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.12%)</title><rect x="3.7806%" y="325" width="0.1246%" height="15" fill="rgb(219,138,53)" fg:x="91" fg:w="3"/><text x="4.0306%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::fold (3 samples, 0.12%)</title><rect x="3.7806%" y="309" width="0.1246%" height="15" fill="rgb(211,51,23)" fg:x="91" fg:w="3"/><text x="4.0306%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::_{{closure}} (3 samples, 0.12%)</title><rect x="3.7806%" y="293" width="0.1246%" height="15" fill="rgb(247,221,28)" fg:x="91" fg:w="3"/><text x="4.0306%" y="303.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (3 samples, 0.12%)</title><rect x="3.7806%" y="277" width="0.1246%" height="15" fill="rgb(251,222,45)" fg:x="91" fg:w="3"/><text x="4.0306%" y="287.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::_{{closure}} (2 samples, 0.08%)</title><rect x="3.8222%" y="261" width="0.0831%" height="15" fill="rgb(217,162,53)" fg:x="92" fg:w="2"/><text x="4.0722%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`generic_array::impls::_&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::_{{closure}} (1 samples, 0.04%)</title><rect x="3.8637%" y="245" width="0.0415%" height="15" fill="rgb(229,93,14)" fg:x="93" fg:w="1"/><text x="4.1137%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="3.9468%" y="277" width="0.0415%" height="15" fill="rgb(209,67,49)" fg:x="95" fg:w="1"/><text x="4.1968%" y="287.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="3.9468%" y="261" width="0.0415%" height="15" fill="rgb(213,87,29)" fg:x="95" fg:w="1"/><text x="4.1968%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;D as digest::digest::Digest&gt;::new (3 samples, 0.12%)</title><rect x="3.9053%" y="389" width="0.1246%" height="15" fill="rgb(205,151,52)" fg:x="94" fg:w="3"/><text x="4.1553%" y="399.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as core::default::Default&gt;::default (3 samples, 0.12%)</title><rect x="3.9053%" y="373" width="0.1246%" height="15" fill="rgb(253,215,39)" fg:x="94" fg:w="3"/><text x="4.1553%" y="383.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;block_buffer::BlockBuffer&lt;BlockSize,Kind&gt; as core::default::Default&gt;::default (3 samples, 0.12%)</title><rect x="3.9053%" y="357" width="0.1246%" height="15" fill="rgb(221,220,41)" fg:x="94" fg:w="3"/><text x="4.1553%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (3 samples, 0.12%)</title><rect x="3.9053%" y="341" width="0.1246%" height="15" fill="rgb(218,133,21)" fg:x="94" fg:w="3"/><text x="4.1553%" y="351.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::for_each (3 samples, 0.12%)</title><rect x="3.9053%" y="325" width="0.1246%" height="15" fill="rgb(221,193,43)" fg:x="94" fg:w="3"/><text x="4.1553%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.12%)</title><rect x="3.9053%" y="309" width="0.1246%" height="15" fill="rgb(240,128,52)" fg:x="94" fg:w="3"/><text x="4.1553%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::fold (3 samples, 0.12%)</title><rect x="3.9053%" y="293" width="0.1246%" height="15" fill="rgb(253,114,12)" fg:x="94" fg:w="3"/><text x="4.1553%" y="303.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="3.9884%" y="277" width="0.0415%" height="15" fill="rgb(215,223,47)" fg:x="96" fg:w="1"/><text x="4.2384%" y="287.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;D as digest::digest::Digest&gt;::update (2 samples, 0.08%)</title><rect x="4.0299%" y="389" width="0.0831%" height="15" fill="rgb(248,225,23)" fg:x="97" fg:w="2"/><text x="4.2799%" y="399.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::Update&gt;::update (2 samples, 0.08%)</title><rect x="4.0299%" y="373" width="0.0831%" height="15" fill="rgb(250,108,0)" fg:x="97" fg:w="2"/><text x="4.2799%" y="383.50"></text></g><g><title>speed-0b1675bc7d978a4b`block_buffer::BlockBuffer&lt;BlockSize,Kind&gt;::digest_blocks (2 samples, 0.08%)</title><rect x="4.0299%" y="357" width="0.0831%" height="15" fill="rgb(228,208,7)" fg:x="97" fg:w="2"/><text x="4.2799%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::Update&gt;::update::_{{closure}} (2 samples, 0.08%)</title><rect x="4.0299%" y="341" width="0.0831%" height="15" fill="rgb(244,45,10)" fg:x="97" fg:w="2"/><text x="4.2799%" y="351.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::UpdateCore&gt;::update_blocks (2 samples, 0.08%)</title><rect x="4.0299%" y="325" width="0.0831%" height="15" fill="rgb(207,125,25)" fg:x="97" fg:w="2"/><text x="4.2799%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;sha2::core_api::Sha256VarCore as digest::core_api::UpdateCore&gt;::update_blocks (2 samples, 0.08%)</title><rect x="4.0299%" y="309" width="0.0831%" height="15" fill="rgb(210,195,18)" fg:x="97" fg:w="2"/><text x="4.2799%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::compress256 (2 samples, 0.08%)</title><rect x="4.0299%" y="293" width="0.0831%" height="15" fill="rgb(249,80,12)" fg:x="97" fg:w="2"/><text x="4.2799%" y="303.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::x86::compress (2 samples, 0.08%)</title><rect x="4.0299%" y="277" width="0.0831%" height="15" fill="rgb(221,65,9)" fg:x="97" fg:w="2"/><text x="4.2799%" y="287.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::compress (1 samples, 0.04%)</title><rect x="4.0715%" y="261" width="0.0415%" height="15" fill="rgb(235,49,36)" fg:x="98" fg:w="1"/><text x="4.3215%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::sha256_digest_block_u32 (1 samples, 0.04%)</title><rect x="4.0715%" y="245" width="0.0415%" height="15" fill="rgb(225,32,20)" fg:x="98" fg:w="1"/><text x="4.3215%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`alloc::fmt::format (1 samples, 0.04%)</title><rect x="4.1130%" y="389" width="0.0415%" height="15" fill="rgb(215,141,46)" fg:x="99" fg:w="1"/><text x="4.3630%" y="399.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::option::Option&lt;T&gt;::map_or_else (1 samples, 0.04%)</title><rect x="4.1130%" y="373" width="0.0415%" height="15" fill="rgb(250,160,47)" fg:x="99" fg:w="1"/><text x="4.3630%" y="383.50"></text></g><g><title>speed-0b1675bc7d978a4b`alloc::fmt::format::_{{closure}} (1 samples, 0.04%)</title><rect x="4.1130%" y="357" width="0.0415%" height="15" fill="rgb(216,222,40)" fg:x="99" fg:w="1"/><text x="4.3630%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`alloc::fmt::format::format_inner (1 samples, 0.04%)</title><rect x="4.1130%" y="341" width="0.0415%" height="15" fill="rgb(234,217,39)" fg:x="99" fg:w="1"/><text x="4.3630%" y="351.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::fmt::write (1 samples, 0.04%)</title><rect x="4.1130%" y="325" width="0.0415%" height="15" fill="rgb(207,178,40)" fg:x="99" fg:w="1"/><text x="4.3630%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::array::_&lt;impl core::fmt::Debug for [T (1 samples, 0.04%)</title><rect x="4.1130%" y="309" width="0.0415%" height="15" fill="rgb(221,136,13)" fg:x="99" fg:w="1"/><text x="4.3630%" y="319.50"></text></g><g><title> N]&gt;::fmt (1 samples, 0.04%)</title><rect x="4.1130%" y="293" width="0.0415%" height="15" fill="rgb(249,199,10)" fg:x="99" fg:w="1"/><text x="4.3630%" y="303.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.04%)</title><rect x="4.1130%" y="277" width="0.0415%" height="15" fill="rgb(249,222,13)" fg:x="99" fg:w="1"/><text x="4.3630%" y="287.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;[T] as core::fmt::Debug&gt;::fmt (1 samples, 0.04%)</title><rect x="4.1130%" y="261" width="0.0415%" height="15" fill="rgb(244,185,38)" fg:x="99" fg:w="1"/><text x="4.3630%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::fmt::builders::DebugList::entries (1 samples, 0.04%)</title><rect x="4.1130%" y="245" width="0.0415%" height="15" fill="rgb(236,202,9)" fg:x="99" fg:w="1"/><text x="4.3630%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::fmt::builders::DebugSet::entry (1 samples, 0.04%)</title><rect x="4.1130%" y="229" width="0.0415%" height="15" fill="rgb(250,229,37)" fg:x="99" fg:w="1"/><text x="4.3630%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::fmt::builders::DebugInner::entry (1 samples, 0.04%)</title><rect x="4.1130%" y="213" width="0.0415%" height="15" fill="rgb(206,174,23)" fg:x="99" fg:w="1"/><text x="4.3630%" y="223.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.04%)</title><rect x="4.1130%" y="197" width="0.0415%" height="15" fill="rgb(211,33,43)" fg:x="99" fg:w="1"/><text x="4.3630%" y="207.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::fmt::num::_&lt;impl core::fmt::Debug for u8&gt;::fmt (1 samples, 0.04%)</title><rect x="4.1130%" y="181" width="0.0415%" height="15" fill="rgb(245,58,50)" fg:x="99" fg:w="1"/><text x="4.3630%" y="191.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::fmt::num::imp::_&lt;impl core::fmt::Display for u8&gt;::fmt (1 samples, 0.04%)</title><rect x="4.1130%" y="165" width="0.0415%" height="15" fill="rgb(244,68,36)" fg:x="99" fg:w="1"/><text x="4.3630%" y="175.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="4.1130%" y="149" width="0.0415%" height="15" fill="rgb(232,229,15)" fg:x="99" fg:w="1"/><text x="4.3630%" y="159.50"></text></g><g><title>speed-0b1675bc7d978a4b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.04%)</title><rect x="4.1130%" y="133" width="0.0415%" height="15" fill="rgb(254,30,23)" fg:x="99" fg:w="1"/><text x="4.3630%" y="143.50"></text></g><g><title>speed-0b1675bc7d978a4b`alloc::raw_vec::finish_grow (1 samples, 0.04%)</title><rect x="4.1130%" y="117" width="0.0415%" height="15" fill="rgb(235,160,14)" fg:x="99" fg:w="1"/><text x="4.3630%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.04%)</title><rect x="4.1130%" y="101" width="0.0415%" height="15" fill="rgb(212,155,44)" fg:x="99" fg:w="1"/><text x="4.3630%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.04%)</title><rect x="4.1130%" y="85" width="0.0415%" height="15" fill="rgb(226,2,50)" fg:x="99" fg:w="1"/><text x="4.3630%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.04%)</title><rect x="4.1130%" y="69" width="0.0415%" height="15" fill="rgb(234,177,6)" fg:x="99" fg:w="1"/><text x="4.3630%" y="79.50"></text></g><g><title>speed-0b1675bc7d978a4b`bft_json_crdt::list_crdt::ListCRDT&lt;T&gt;::apply (16 samples, 0.66%)</title><rect x="3.5314%" y="437" width="0.6647%" height="15" fill="rgb(217,24,9)" fg:x="85" fg:w="16"/><text x="3.7814%" y="447.50"></text></g><g><title>speed-0b1675bc7d978a4b`bft_json_crdt::op::Op&lt;T&gt;::valid_hash (15 samples, 0.62%)</title><rect x="3.5729%" y="421" width="0.6232%" height="15" fill="rgb(220,13,46)" fg:x="86" fg:w="15"/><text x="3.8229%" y="431.50"></text></g><g><title>speed-0b1675bc7d978a4b`bft_json_crdt::op::Op&lt;T&gt;::hash (15 samples, 0.62%)</title><rect x="3.5729%" y="405" width="0.6232%" height="15" fill="rgb(239,221,27)" fg:x="86" fg:w="15"/><text x="3.8229%" y="415.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::array::_&lt;impl core::default::Default for [T (1 samples, 0.04%)</title><rect x="4.1545%" y="389" width="0.0415%" height="15" fill="rgb(222,198,25)" fg:x="100" fg:w="1"/><text x="4.4045%" y="399.50"></text></g><g><title> 32]&gt;::default (1 samples, 0.04%)</title><rect x="4.1545%" y="373" width="0.0415%" height="15" fill="rgb(211,99,13)" fg:x="100" fg:w="1"/><text x="4.4045%" y="383.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;u8 as core::default::Default&gt;::default (1 samples, 0.04%)</title><rect x="4.1545%" y="357" width="0.0415%" height="15" fill="rgb(232,111,31)" fg:x="100" fg:w="1"/><text x="4.4045%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.04%)</title><rect x="4.1961%" y="341" width="0.0415%" height="15" fill="rgb(245,82,37)" fg:x="101" fg:w="1"/><text x="4.4461%" y="351.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::for_each (1 samples, 0.04%)</title><rect x="4.1961%" y="325" width="0.0415%" height="15" fill="rgb(227,149,46)" fg:x="101" fg:w="1"/><text x="4.4461%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.04%)</title><rect x="4.1961%" y="309" width="0.0415%" height="15" fill="rgb(218,36,50)" fg:x="101" fg:w="1"/><text x="4.4461%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::fold (1 samples, 0.04%)</title><rect x="4.1961%" y="293" width="0.0415%" height="15" fill="rgb(226,80,48)" fg:x="101" fg:w="1"/><text x="4.4461%" y="303.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::_{{closure}} (1 samples, 0.04%)</title><rect x="4.1961%" y="277" width="0.0415%" height="15" fill="rgb(238,224,15)" fg:x="101" fg:w="1"/><text x="4.4461%" y="287.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1 samples, 0.04%)</title><rect x="4.1961%" y="261" width="0.0415%" height="15" fill="rgb(241,136,10)" fg:x="101" fg:w="1"/><text x="4.4461%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::_{{closure}} (1 samples, 0.04%)</title><rect x="4.1961%" y="245" width="0.0415%" height="15" fill="rgb(208,32,45)" fg:x="101" fg:w="1"/><text x="4.4461%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::sha256msg1 (1 samples, 0.04%)</title><rect x="4.3207%" y="213" width="0.0415%" height="15" fill="rgb(207,135,9)" fg:x="104" fg:w="1"/><text x="4.5707%" y="223.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::sha256msg1::sigma0x4 (1 samples, 0.04%)</title><rect x="4.3207%" y="197" width="0.0415%" height="15" fill="rgb(206,86,44)" fg:x="104" fg:w="1"/><text x="4.5707%" y="207.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::schedule (2 samples, 0.08%)</title><rect x="4.3207%" y="229" width="0.0831%" height="15" fill="rgb(245,177,15)" fg:x="104" fg:w="2"/><text x="4.5707%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::sha256msg2 (1 samples, 0.04%)</title><rect x="4.3623%" y="213" width="0.0415%" height="15" fill="rgb(206,64,50)" fg:x="105" fg:w="1"/><text x="4.6123%" y="223.50"></text></g><g><title>speed-0b1675bc7d978a4b`block_buffer::BlockBuffer&lt;BlockSize,block_buffer::Eager&gt;::len64_padding_be (7 samples, 0.29%)</title><rect x="4.2376%" y="325" width="0.2908%" height="15" fill="rgb(234,36,40)" fg:x="102" fg:w="7"/><text x="4.4876%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;sha2::core_api::Sha256VarCore as digest::core_api::VariableOutputCore&gt;::finalize_variable_core::_{{closure}} (6 samples, 0.25%)</title><rect x="4.2792%" y="309" width="0.2493%" height="15" fill="rgb(213,64,8)" fg:x="103" fg:w="6"/><text x="4.5292%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::compress256 (6 samples, 0.25%)</title><rect x="4.2792%" y="293" width="0.2493%" height="15" fill="rgb(210,75,36)" fg:x="103" fg:w="6"/><text x="4.5292%" y="303.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::x86::compress (6 samples, 0.25%)</title><rect x="4.2792%" y="277" width="0.2493%" height="15" fill="rgb(229,88,21)" fg:x="103" fg:w="6"/><text x="4.5292%" y="287.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::compress (6 samples, 0.25%)</title><rect x="4.2792%" y="261" width="0.2493%" height="15" fill="rgb(252,204,47)" fg:x="103" fg:w="6"/><text x="4.5292%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::sha256_digest_block_u32 (6 samples, 0.25%)</title><rect x="4.2792%" y="245" width="0.2493%" height="15" fill="rgb(208,77,27)" fg:x="103" fg:w="6"/><text x="4.5292%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::sha256_digest_round_x2 (3 samples, 0.12%)</title><rect x="4.4038%" y="229" width="0.1246%" height="15" fill="rgb(221,76,26)" fg:x="106" fg:w="3"/><text x="4.6538%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::FixedOutput&gt;::finalize_into (9 samples, 0.37%)</title><rect x="4.1961%" y="373" width="0.3739%" height="15" fill="rgb(225,139,18)" fg:x="101" fg:w="9"/><text x="4.4461%" y="383.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (9 samples, 0.37%)</title><rect x="4.1961%" y="357" width="0.3739%" height="15" fill="rgb(230,137,11)" fg:x="101" fg:w="9"/><text x="4.4461%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;sha2::core_api::Sha256VarCore as digest::core_api::VariableOutputCore&gt;::finalize_variable_core (8 samples, 0.33%)</title><rect x="4.2376%" y="341" width="0.3324%" height="15" fill="rgb(212,28,1)" fg:x="102" fg:w="8"/><text x="4.4876%" y="351.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::zip (1 samples, 0.04%)</title><rect x="4.5285%" y="325" width="0.0415%" height="15" fill="rgb(248,164,17)" fg:x="109" fg:w="1"/><text x="4.7785%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::adapters::zip::Zip&lt;A,B&gt;::new (1 samples, 0.04%)</title><rect x="4.5285%" y="309" width="0.0415%" height="15" fill="rgb(222,171,42)" fg:x="109" fg:w="1"/><text x="4.7785%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="4.5700%" y="309" width="0.0415%" height="15" fill="rgb(243,84,45)" fg:x="110" fg:w="1"/><text x="4.8200%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;D as digest::digest::Digest&gt;::finalize (11 samples, 0.46%)</title><rect x="4.1961%" y="405" width="0.4570%" height="15" fill="rgb(252,49,23)" fg:x="101" fg:w="11"/><text x="4.4461%" y="415.50"></text></g><g><title>speed-0b1675bc7d978a4b`digest::FixedOutput::finalize_fixed (11 samples, 0.46%)</title><rect x="4.1961%" y="389" width="0.4570%" height="15" fill="rgb(215,19,7)" fg:x="101" fg:w="11"/><text x="4.4461%" y="399.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (2 samples, 0.08%)</title><rect x="4.5700%" y="373" width="0.0831%" height="15" fill="rgb(238,81,41)" fg:x="110" fg:w="2"/><text x="4.8200%" y="383.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::for_each (2 samples, 0.08%)</title><rect x="4.5700%" y="357" width="0.0831%" height="15" fill="rgb(210,199,37)" fg:x="110" fg:w="2"/><text x="4.8200%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.08%)</title><rect x="4.5700%" y="341" width="0.0831%" height="15" fill="rgb(244,192,49)" fg:x="110" fg:w="2"/><text x="4.8200%" y="351.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::fold (2 samples, 0.08%)</title><rect x="4.5700%" y="325" width="0.0831%" height="15" fill="rgb(226,211,11)" fg:x="110" fg:w="2"/><text x="4.8200%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="4.6115%" y="309" width="0.0415%" height="15" fill="rgb(236,162,54)" fg:x="111" fg:w="1"/><text x="4.8615%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="4.6531%" y="309" width="0.0415%" height="15" fill="rgb(220,229,9)" fg:x="112" fg:w="1"/><text x="4.9031%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;D as digest::digest::Digest&gt;::new (3 samples, 0.12%)</title><rect x="4.6531%" y="405" width="0.1246%" height="15" fill="rgb(250,87,22)" fg:x="112" fg:w="3"/><text x="4.9031%" y="415.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as core::default::Default&gt;::default (3 samples, 0.12%)</title><rect x="4.6531%" y="389" width="0.1246%" height="15" fill="rgb(239,43,17)" fg:x="112" fg:w="3"/><text x="4.9031%" y="399.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;block_buffer::BlockBuffer&lt;BlockSize,Kind&gt; as core::default::Default&gt;::default (3 samples, 0.12%)</title><rect x="4.6531%" y="373" width="0.1246%" height="15" fill="rgb(231,177,25)" fg:x="112" fg:w="3"/><text x="4.9031%" y="383.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (3 samples, 0.12%)</title><rect x="4.6531%" y="357" width="0.1246%" height="15" fill="rgb(219,179,1)" fg:x="112" fg:w="3"/><text x="4.9031%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::for_each (3 samples, 0.12%)</title><rect x="4.6531%" y="341" width="0.1246%" height="15" fill="rgb(238,219,53)" fg:x="112" fg:w="3"/><text x="4.9031%" y="351.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.12%)</title><rect x="4.6531%" y="325" width="0.1246%" height="15" fill="rgb(232,167,36)" fg:x="112" fg:w="3"/><text x="4.9031%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::fold (2 samples, 0.08%)</title><rect x="4.6946%" y="309" width="0.0831%" height="15" fill="rgb(244,19,51)" fg:x="113" fg:w="2"/><text x="4.9446%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::_{{closure}} (2 samples, 0.08%)</title><rect x="4.6946%" y="293" width="0.0831%" height="15" fill="rgb(224,6,22)" fg:x="113" fg:w="2"/><text x="4.9446%" y="303.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (2 samples, 0.08%)</title><rect x="4.6946%" y="277" width="0.0831%" height="15" fill="rgb(224,145,5)" fg:x="113" fg:w="2"/><text x="4.9446%" y="287.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::_{{closure}} (2 samples, 0.08%)</title><rect x="4.6946%" y="261" width="0.0831%" height="15" fill="rgb(234,130,49)" fg:x="113" fg:w="2"/><text x="4.9446%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (3 samples, 0.12%)</title><rect x="4.8193%" y="261" width="0.1246%" height="15" fill="rgb(254,6,2)" fg:x="116" fg:w="3"/><text x="5.0693%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T (3 samples, 0.12%)</title><rect x="4.8193%" y="245" width="0.1246%" height="15" fill="rgb(208,96,46)" fg:x="116" fg:w="3"/><text x="5.0693%" y="255.50"></text></g><g><title> N]&gt;::try_from (3 samples, 0.12%)</title><rect x="4.8193%" y="229" width="0.1246%" height="15" fill="rgb(239,3,39)" fg:x="116" fg:w="3"/><text x="5.0693%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::result::Result&lt;T,E&gt;::map (2 samples, 0.08%)</title><rect x="4.8608%" y="213" width="0.0831%" height="15" fill="rgb(233,210,1)" fg:x="117" fg:w="2"/><text x="5.1108%" y="223.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::schedule (4 samples, 0.17%)</title><rect x="4.9439%" y="245" width="0.1662%" height="15" fill="rgb(244,137,37)" fg:x="119" fg:w="4"/><text x="5.1939%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::sha256msg2 (2 samples, 0.08%)</title><rect x="5.0270%" y="229" width="0.0831%" height="15" fill="rgb(240,136,2)" fg:x="121" fg:w="2"/><text x="5.2770%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;D as digest::digest::Digest&gt;::update (9 samples, 0.37%)</title><rect x="4.7777%" y="405" width="0.3739%" height="15" fill="rgb(239,18,37)" fg:x="115" fg:w="9"/><text x="5.0277%" y="415.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::Update&gt;::update (9 samples, 0.37%)</title><rect x="4.7777%" y="389" width="0.3739%" height="15" fill="rgb(218,185,22)" fg:x="115" fg:w="9"/><text x="5.0277%" y="399.50"></text></g><g><title>speed-0b1675bc7d978a4b`block_buffer::BlockBuffer&lt;BlockSize,Kind&gt;::digest_blocks (9 samples, 0.37%)</title><rect x="4.7777%" y="373" width="0.3739%" height="15" fill="rgb(225,218,4)" fg:x="115" fg:w="9"/><text x="5.0277%" y="383.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::Update&gt;::update::_{{closure}} (9 samples, 0.37%)</title><rect x="4.7777%" y="357" width="0.3739%" height="15" fill="rgb(230,182,32)" fg:x="115" fg:w="9"/><text x="5.0277%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::UpdateCore&gt;::update_blocks (9 samples, 0.37%)</title><rect x="4.7777%" y="341" width="0.3739%" height="15" fill="rgb(242,56,43)" fg:x="115" fg:w="9"/><text x="5.0277%" y="351.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;sha2::core_api::Sha256VarCore as digest::core_api::UpdateCore&gt;::update_blocks (9 samples, 0.37%)</title><rect x="4.7777%" y="325" width="0.3739%" height="15" fill="rgb(233,99,24)" fg:x="115" fg:w="9"/><text x="5.0277%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::compress256 (9 samples, 0.37%)</title><rect x="4.7777%" y="309" width="0.3739%" height="15" fill="rgb(234,209,42)" fg:x="115" fg:w="9"/><text x="5.0277%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::x86::compress (9 samples, 0.37%)</title><rect x="4.7777%" y="293" width="0.3739%" height="15" fill="rgb(227,7,12)" fg:x="115" fg:w="9"/><text x="5.0277%" y="303.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::compress (9 samples, 0.37%)</title><rect x="4.7777%" y="277" width="0.3739%" height="15" fill="rgb(245,203,43)" fg:x="115" fg:w="9"/><text x="5.0277%" y="287.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::sha256_digest_block_u32 (5 samples, 0.21%)</title><rect x="4.9439%" y="261" width="0.2077%" height="15" fill="rgb(238,205,33)" fg:x="119" fg:w="5"/><text x="5.1939%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::sha256_digest_round_x2 (1 samples, 0.04%)</title><rect x="5.1101%" y="245" width="0.0415%" height="15" fill="rgb(231,56,7)" fg:x="123" fg:w="1"/><text x="5.3601%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="5.1516%" y="245" width="0.0415%" height="15" fill="rgb(244,186,29)" fg:x="124" fg:w="1"/><text x="5.4016%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="5.1516%" y="229" width="0.0415%" height="15" fill="rgb(234,111,31)" fg:x="124" fg:w="1"/><text x="5.4016%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="5.1516%" y="213" width="0.0415%" height="15" fill="rgb(241,149,10)" fg:x="124" fg:w="1"/><text x="5.4016%" y="223.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.04%)</title><rect x="5.1932%" y="213" width="0.0415%" height="15" fill="rgb(249,206,44)" fg:x="125" fg:w="1"/><text x="5.4432%" y="223.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::fmt::num::_&lt;impl core::fmt::Debug for u8&gt;::fmt (1 samples, 0.04%)</title><rect x="5.1932%" y="197" width="0.0415%" height="15" fill="rgb(251,153,30)" fg:x="125" fg:w="1"/><text x="5.4432%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.04%)</title><rect x="5.2347%" y="165" width="0.0415%" height="15" fill="rgb(239,152,38)" fg:x="126" fg:w="1"/><text x="5.4847%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.04%)</title><rect x="5.2347%" y="149" width="0.0415%" height="15" fill="rgb(249,139,47)" fg:x="126" fg:w="1"/><text x="5.4847%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.04%)</title><rect x="5.2347%" y="133" width="0.0415%" height="15" fill="rgb(244,64,35)" fg:x="126" fg:w="1"/><text x="5.4847%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.04%)</title><rect x="5.2347%" y="117" width="0.0415%" height="15" fill="rgb(216,46,15)" fg:x="126" fg:w="1"/><text x="5.4847%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.04%)</title><rect x="5.2347%" y="101" width="0.0415%" height="15" fill="rgb(250,74,19)" fg:x="126" fg:w="1"/><text x="5.4847%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.04%)</title><rect x="5.2347%" y="85" width="0.0415%" height="15" fill="rgb(249,42,33)" fg:x="126" fg:w="1"/><text x="5.4847%" y="95.50"></text></g><g><title>speed-0b1675bc7d978a4b`speed::bench_insert_1_000_root::_{{closure}} (43 samples, 1.79%)</title><rect x="3.5314%" y="533" width="1.7865%" height="15" fill="rgb(242,149,17)" fg:x="85" fg:w="43"/><text x="3.7814%" y="543.50">s..</text></g><g><title>speed-0b1675bc7d978a4b`speed::bench_insert_1_000_root (43 samples, 1.79%)</title><rect x="3.5314%" y="517" width="1.7865%" height="15" fill="rgb(244,29,21)" fg:x="85" fg:w="43"/><text x="3.7814%" y="527.50">s..</text></g><g><title>speed-0b1675bc7d978a4b`test::bench::Bencher::iter (43 samples, 1.79%)</title><rect x="3.5314%" y="501" width="1.7865%" height="15" fill="rgb(220,130,37)" fg:x="85" fg:w="43"/><text x="3.7814%" y="511.50">s..</text></g><g><title>speed-0b1675bc7d978a4b`test::bench::ns_iter_inner (43 samples, 1.79%)</title><rect x="3.5314%" y="485" width="1.7865%" height="15" fill="rgb(211,67,2)" fg:x="85" fg:w="43"/><text x="3.7814%" y="495.50">s..</text></g><g><title>speed-0b1675bc7d978a4b`speed::bench_insert_1_000_root::_{{closure}} (43 samples, 1.79%)</title><rect x="3.5314%" y="469" width="1.7865%" height="15" fill="rgb(235,68,52)" fg:x="85" fg:w="43"/><text x="3.7814%" y="479.50">s..</text></g><g><title>speed-0b1675bc7d978a4b`bft_json_crdt::list_crdt::ListCRDT&lt;T&gt;::insert (43 samples, 1.79%)</title><rect x="3.5314%" y="453" width="1.7865%" height="15" fill="rgb(246,142,3)" fg:x="85" fg:w="43"/><text x="3.7814%" y="463.50">s..</text></g><g><title>speed-0b1675bc7d978a4b`bft_json_crdt::op::Op&lt;T&gt;::new (27 samples, 1.12%)</title><rect x="4.1961%" y="437" width="1.1217%" height="15" fill="rgb(241,25,7)" fg:x="101" fg:w="27"/><text x="4.4461%" y="447.50"></text></g><g><title>speed-0b1675bc7d978a4b`bft_json_crdt::op::Op&lt;T&gt;::hash (27 samples, 1.12%)</title><rect x="4.1961%" y="421" width="1.1217%" height="15" fill="rgb(242,119,39)" fg:x="101" fg:w="27"/><text x="4.4461%" y="431.50"></text></g><g><title>speed-0b1675bc7d978a4b`alloc::fmt::format (4 samples, 0.17%)</title><rect x="5.1516%" y="405" width="0.1662%" height="15" fill="rgb(241,98,45)" fg:x="124" fg:w="4"/><text x="5.4016%" y="415.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::option::Option&lt;T&gt;::map_or_else (4 samples, 0.17%)</title><rect x="5.1516%" y="389" width="0.1662%" height="15" fill="rgb(254,28,30)" fg:x="124" fg:w="4"/><text x="5.4016%" y="399.50"></text></g><g><title>speed-0b1675bc7d978a4b`alloc::fmt::format::_{{closure}} (4 samples, 0.17%)</title><rect x="5.1516%" y="373" width="0.1662%" height="15" fill="rgb(241,142,54)" fg:x="124" fg:w="4"/><text x="5.4016%" y="383.50"></text></g><g><title>speed-0b1675bc7d978a4b`alloc::fmt::format::format_inner (4 samples, 0.17%)</title><rect x="5.1516%" y="357" width="0.1662%" height="15" fill="rgb(222,85,15)" fg:x="124" fg:w="4"/><text x="5.4016%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::fmt::write (4 samples, 0.17%)</title><rect x="5.1516%" y="341" width="0.1662%" height="15" fill="rgb(210,85,47)" fg:x="124" fg:w="4"/><text x="5.4016%" y="351.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::array::_&lt;impl core::fmt::Debug for [T (4 samples, 0.17%)</title><rect x="5.1516%" y="325" width="0.1662%" height="15" fill="rgb(224,206,25)" fg:x="124" fg:w="4"/><text x="5.4016%" y="335.50"></text></g><g><title> N]&gt;::fmt (4 samples, 0.17%)</title><rect x="5.1516%" y="309" width="0.1662%" height="15" fill="rgb(243,201,19)" fg:x="124" fg:w="4"/><text x="5.4016%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;&amp;T as core::fmt::Debug&gt;::fmt (4 samples, 0.17%)</title><rect x="5.1516%" y="293" width="0.1662%" height="15" fill="rgb(236,59,4)" fg:x="124" fg:w="4"/><text x="5.4016%" y="303.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;[T] as core::fmt::Debug&gt;::fmt (4 samples, 0.17%)</title><rect x="5.1516%" y="277" width="0.1662%" height="15" fill="rgb(254,179,45)" fg:x="124" fg:w="4"/><text x="5.4016%" y="287.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::fmt::builders::DebugList::entries (4 samples, 0.17%)</title><rect x="5.1516%" y="261" width="0.1662%" height="15" fill="rgb(226,14,10)" fg:x="124" fg:w="4"/><text x="5.4016%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::fmt::builders::DebugSet::entry (3 samples, 0.12%)</title><rect x="5.1932%" y="245" width="0.1246%" height="15" fill="rgb(244,27,41)" fg:x="125" fg:w="3"/><text x="5.4432%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::fmt::builders::DebugInner::entry (3 samples, 0.12%)</title><rect x="5.1932%" y="229" width="0.1246%" height="15" fill="rgb(235,35,32)" fg:x="125" fg:w="3"/><text x="5.4432%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.08%)</title><rect x="5.2347%" y="213" width="0.0831%" height="15" fill="rgb(218,68,31)" fg:x="126" fg:w="2"/><text x="5.4847%" y="223.50"></text></g><g><title>speed-0b1675bc7d978a4b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.08%)</title><rect x="5.2347%" y="197" width="0.0831%" height="15" fill="rgb(207,120,37)" fg:x="126" fg:w="2"/><text x="5.4847%" y="207.50"></text></g><g><title>speed-0b1675bc7d978a4b`alloc::raw_vec::finish_grow (2 samples, 0.08%)</title><rect x="5.2347%" y="181" width="0.0831%" height="15" fill="rgb(227,98,0)" fg:x="126" fg:w="2"/><text x="5.4847%" y="191.50"></text></g><g><title>speed-0b1675bc7d978a4b`__rdl_realloc (1 samples, 0.04%)</title><rect x="5.2763%" y="165" width="0.0415%" height="15" fill="rgb(207,7,3)" fg:x="127" fg:w="1"/><text x="5.5263%" y="175.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (3 samples, 0.12%)</title><rect x="5.4840%" y="437" width="0.1246%" height="15" fill="rgb(206,98,19)" fg:x="132" fg:w="3"/><text x="5.7340%" y="447.50"></text></g><g><title>speed-0b1675bc7d978a4b`alloc::vec::Vec&lt;T,A&gt;::len (4 samples, 0.17%)</title><rect x="5.6086%" y="437" width="0.1662%" height="15" fill="rgb(217,5,26)" fg:x="135" fg:w="4"/><text x="5.8586%" y="447.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="5.9826%" y="421" width="0.0415%" height="15" fill="rgb(235,190,38)" fg:x="144" fg:w="1"/><text x="6.2326%" y="431.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="5.9826%" y="405" width="0.0415%" height="15" fill="rgb(247,86,24)" fg:x="144" fg:w="1"/><text x="6.2326%" y="415.50"></text></g><g><title>speed-0b1675bc7d978a4b`bft_json_crdt::list_crdt::ListCRDT&lt;T&gt;::find (12 samples, 0.50%)</title><rect x="5.7748%" y="437" width="0.4985%" height="15" fill="rgb(205,101,16)" fg:x="139" fg:w="12"/><text x="6.0248%" y="447.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (6 samples, 0.25%)</title><rect x="6.0241%" y="421" width="0.2493%" height="15" fill="rgb(246,168,33)" fg:x="145" fg:w="6"/><text x="6.2741%" y="431.50"></text></g><g><title>speed-0b1675bc7d978a4b`bft_json_crdt::list_crdt::ListCRDT&lt;T&gt;::find::_{{closure}} (4 samples, 0.17%)</title><rect x="6.1072%" y="405" width="0.1662%" height="15" fill="rgb(231,114,1)" fg:x="147" fg:w="4"/><text x="6.3572%" y="415.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::array::equality::_&lt;impl core::cmp::PartialEq&lt;[B (4 samples, 0.17%)</title><rect x="6.1072%" y="389" width="0.1662%" height="15" fill="rgb(207,184,53)" fg:x="147" fg:w="4"/><text x="6.3572%" y="399.50"></text></g><g><title> N]&gt; for [A (4 samples, 0.17%)</title><rect x="6.1072%" y="373" width="0.1662%" height="15" fill="rgb(224,95,51)" fg:x="147" fg:w="4"/><text x="6.3572%" y="383.50"></text></g><g><title> N]&gt;::eq (4 samples, 0.17%)</title><rect x="6.1072%" y="357" width="0.1662%" height="15" fill="rgb(212,188,45)" fg:x="147" fg:w="4"/><text x="6.3572%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (4 samples, 0.17%)</title><rect x="6.1072%" y="341" width="0.1662%" height="15" fill="rgb(223,154,38)" fg:x="147" fg:w="4"/><text x="6.3572%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (3 samples, 0.12%)</title><rect x="6.1487%" y="325" width="0.1246%" height="15" fill="rgb(251,22,52)" fg:x="148" fg:w="3"/><text x="6.3987%" y="335.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (1 samples, 0.04%)</title><rect x="11.0096%" y="421" width="0.0415%" height="15" fill="rgb(229,209,22)" fg:x="265" fg:w="1"/><text x="11.2596%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="11.0511%" y="421" width="0.0415%" height="15" fill="rgb(234,138,34)" fg:x="266" fg:w="1"/><text x="11.3011%" y="431.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (1 samples, 0.04%)</title><rect x="11.0926%" y="421" width="0.0415%" height="15" fill="rgb(212,95,11)" fg:x="267" fg:w="1"/><text x="11.3426%" y="431.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (4 samples, 0.17%)</title><rect x="11.1342%" y="421" width="0.1662%" height="15" fill="rgb(240,179,47)" fg:x="268" fg:w="4"/><text x="11.3842%" y="431.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (91 samples, 3.78%)</title><rect x="12.0482%" y="405" width="3.7806%" height="15" fill="rgb(240,163,11)" fg:x="290" fg:w="91"/><text x="12.2982%" y="415.50">spee..</text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (68 samples, 2.83%)</title><rect x="13.0037%" y="389" width="2.8251%" height="15" fill="rgb(236,37,12)" fg:x="313" fg:w="68"/><text x="13.2537%" y="399.50">sp..</text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (33 samples, 1.37%)</title><rect x="14.4578%" y="373" width="1.3710%" height="15" fill="rgb(232,164,16)" fg:x="348" fg:w="33"/><text x="14.7078%" y="383.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (7 samples, 0.29%)</title><rect x="15.8288%" y="405" width="0.2908%" height="15" fill="rgb(244,205,15)" fg:x="381" fg:w="7"/><text x="16.0788%" y="415.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (119 samples, 4.94%)</title><rect x="11.3004%" y="421" width="4.9439%" height="15" fill="rgb(223,117,47)" fg:x="272" fg:w="119"/><text x="11.5504%" y="431.50">speed-..</text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (3 samples, 0.12%)</title><rect x="16.1197%" y="405" width="0.1246%" height="15" fill="rgb(244,107,35)" fg:x="388" fg:w="3"/><text x="16.3697%" y="415.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (2 samples, 0.08%)</title><rect x="16.2443%" y="421" width="0.0831%" height="15" fill="rgb(205,140,8)" fg:x="391" fg:w="2"/><text x="16.4943%" y="431.50"></text></g><g><title>speed-0b1675bc7d978a4b`DYLD-STUB$$memcpy (1 samples, 0.04%)</title><rect x="16.3274%" y="421" width="0.0415%" height="15" fill="rgb(228,84,46)" fg:x="393" fg:w="1"/><text x="16.5774%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (36 samples, 1.50%)</title><rect x="16.4105%" y="405" width="1.4956%" height="15" fill="rgb(254,188,9)" fg:x="395" fg:w="36"/><text x="16.6605%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="17.9061%" y="245" width="0.0415%" height="15" fill="rgb(206,112,54)" fg:x="431" fg:w="1"/><text x="18.1561%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`large_malloc (1 samples, 0.04%)</title><rect x="17.9061%" y="229" width="0.0415%" height="15" fill="rgb(216,84,49)" fg:x="431" fg:w="1"/><text x="18.1561%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`mvm_allocate_pages (1 samples, 0.04%)</title><rect x="17.9061%" y="213" width="0.0415%" height="15" fill="rgb(214,194,35)" fg:x="431" fg:w="1"/><text x="18.1561%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_map_trap (1 samples, 0.04%)</title><rect x="17.9061%" y="197" width="0.0415%" height="15" fill="rgb(249,28,3)" fg:x="431" fg:w="1"/><text x="18.1561%" y="207.50"></text></g><g><title>speed-0b1675bc7d978a4b`alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.08%)</title><rect x="17.9061%" y="405" width="0.0831%" height="15" fill="rgb(222,56,52)" fg:x="431" fg:w="2"/><text x="18.1561%" y="415.50"></text></g><g><title>speed-0b1675bc7d978a4b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.08%)</title><rect x="17.9061%" y="389" width="0.0831%" height="15" fill="rgb(245,217,50)" fg:x="431" fg:w="2"/><text x="18.1561%" y="399.50"></text></g><g><title>speed-0b1675bc7d978a4b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.08%)</title><rect x="17.9061%" y="373" width="0.0831%" height="15" fill="rgb(213,201,24)" fg:x="431" fg:w="2"/><text x="18.1561%" y="383.50"></text></g><g><title>speed-0b1675bc7d978a4b`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.08%)</title><rect x="17.9061%" y="357" width="0.0831%" height="15" fill="rgb(248,116,28)" fg:x="431" fg:w="2"/><text x="18.1561%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`alloc::raw_vec::finish_grow (2 samples, 0.08%)</title><rect x="17.9061%" y="341" width="0.0831%" height="15" fill="rgb(219,72,43)" fg:x="431" fg:w="2"/><text x="18.1561%" y="351.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.08%)</title><rect x="17.9061%" y="325" width="0.0831%" height="15" fill="rgb(209,138,14)" fg:x="431" fg:w="2"/><text x="18.1561%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`alloc::alloc::Global::grow_impl (2 samples, 0.08%)</title><rect x="17.9061%" y="309" width="0.0831%" height="15" fill="rgb(222,18,33)" fg:x="431" fg:w="2"/><text x="18.1561%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`realloc (2 samples, 0.08%)</title><rect x="17.9061%" y="293" width="0.0831%" height="15" fill="rgb(213,199,7)" fg:x="431" fg:w="2"/><text x="18.1561%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (2 samples, 0.08%)</title><rect x="17.9061%" y="277" width="0.0831%" height="15" fill="rgb(250,110,10)" fg:x="431" fg:w="2"/><text x="18.1561%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (2 samples, 0.08%)</title><rect x="17.9061%" y="261" width="0.0831%" height="15" fill="rgb(248,123,6)" fg:x="431" fg:w="2"/><text x="18.1561%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="17.9477%" y="245" width="0.0415%" height="15" fill="rgb(206,91,31)" fg:x="432" fg:w="1"/><text x="18.1977%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`alloc::vec::Vec&lt;T,A&gt;::insert (40 samples, 1.66%)</title><rect x="16.3689%" y="421" width="1.6618%" height="15" fill="rgb(211,154,13)" fg:x="394" fg:w="40"/><text x="16.6189%" y="431.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="17.9892%" y="405" width="0.0415%" height="15" fill="rgb(225,148,7)" fg:x="433" fg:w="1"/><text x="18.2392%" y="415.50"></text></g><g><title>speed-0b1675bc7d978a4b`alloc::vec::Vec&lt;T,A&gt;::len (3 samples, 0.12%)</title><rect x="18.0307%" y="421" width="0.1246%" height="15" fill="rgb(220,160,43)" fg:x="434" fg:w="3"/><text x="18.2807%" y="431.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (90 samples, 3.74%)</title><rect x="18.6124%" y="405" width="3.7391%" height="15" fill="rgb(213,52,39)" fg:x="448" fg:w="90"/><text x="18.8624%" y="415.50">spee..</text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (68 samples, 2.83%)</title><rect x="19.5264%" y="389" width="2.8251%" height="15" fill="rgb(243,137,7)" fg:x="470" fg:w="68"/><text x="19.7764%" y="399.50">sp..</text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (25 samples, 1.04%)</title><rect x="21.3128%" y="373" width="1.0386%" height="15" fill="rgb(230,79,13)" fg:x="513" fg:w="25"/><text x="21.5628%" y="383.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.12%)</title><rect x="22.3515%" y="405" width="0.1246%" height="15" fill="rgb(247,105,23)" fg:x="538" fg:w="3"/><text x="22.6015%" y="415.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::const_ptr::_&lt;impl *const T&gt;::is_null (38 samples, 1.58%)</title><rect x="27.5862%" y="373" width="1.5787%" height="15" fill="rgb(223,179,41)" fg:x="664" fg:w="38"/><text x="27.8362%" y="383.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (103 samples, 4.28%)</title><rect x="26.4645%" y="389" width="4.2792%" height="15" fill="rgb(218,9,34)" fg:x="637" fg:w="103"/><text x="26.7145%" y="399.50">speed..</text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (38 samples, 1.58%)</title><rect x="29.1649%" y="373" width="1.5787%" height="15" fill="rgb(222,106,8)" fg:x="702" fg:w="38"/><text x="29.4149%" y="383.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (16 samples, 0.66%)</title><rect x="30.0789%" y="357" width="0.6647%" height="15" fill="rgb(211,220,0)" fg:x="724" fg:w="16"/><text x="30.3289%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (1 samples, 0.04%)</title><rect x="31.3253%" y="373" width="0.0415%" height="15" fill="rgb(229,52,16)" fg:x="754" fg:w="1"/><text x="31.5753%" y="383.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memcmp (5 samples, 0.21%)</title><rect x="31.8238%" y="325" width="0.2077%" height="15" fill="rgb(212,155,18)" fg:x="766" fg:w="5"/><text x="32.0738%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (8 samples, 0.33%)</title><rect x="32.0316%" y="325" width="0.3324%" height="15" fill="rgb(242,21,14)" fg:x="771" fg:w="8"/><text x="32.2816%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`bft_json_crdt::list_crdt::ListCRDT&lt;T&gt;::find::_{{closure}} (87 samples, 3.61%)</title><rect x="30.7437%" y="389" width="3.6145%" height="15" fill="rgb(222,19,48)" fg:x="740" fg:w="87"/><text x="30.9937%" y="399.50">spee..</text></g><g><title>speed-0b1675bc7d978a4b`core::array::equality::_&lt;impl core::cmp::PartialEq&lt;[B (72 samples, 2.99%)</title><rect x="31.3668%" y="373" width="2.9913%" height="15" fill="rgb(232,45,27)" fg:x="755" fg:w="72"/><text x="31.6168%" y="383.50">spe..</text></g><g><title> N]&gt; for [A (72 samples, 2.99%)</title><rect x="31.3668%" y="357" width="2.9913%" height="15" fill="rgb(249,103,42)" fg:x="755" fg:w="72"/><text x="31.6168%" y="367.50"> N]..</text></g><g><title> N]&gt;::eq (72 samples, 2.99%)</title><rect x="31.3668%" y="341" width="2.9913%" height="15" fill="rgb(246,81,33)" fg:x="755" fg:w="72"/><text x="31.6168%" y="351.50"> N]..</text></g><g><title>speed-0b1675bc7d978a4b`&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (48 samples, 1.99%)</title><rect x="32.3639%" y="325" width="1.9942%" height="15" fill="rgb(252,33,42)" fg:x="779" fg:w="48"/><text x="32.6139%" y="335.50">s..</text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (21 samples, 0.87%)</title><rect x="33.4857%" y="309" width="0.8725%" height="15" fill="rgb(209,212,41)" fg:x="806" fg:w="21"/><text x="33.7357%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::array::equality::_&lt;impl core::cmp::PartialEq&lt;[B (2 samples, 0.08%)</title><rect x="34.3581%" y="389" width="0.0831%" height="15" fill="rgb(207,154,6)" fg:x="827" fg:w="2"/><text x="34.6081%" y="399.50"></text></g><g><title> N]&gt; for [A (2 samples, 0.08%)</title><rect x="34.3581%" y="373" width="0.0831%" height="15" fill="rgb(223,64,47)" fg:x="827" fg:w="2"/><text x="34.6081%" y="383.50"></text></g><g><title> N]&gt;::eq (2 samples, 0.08%)</title><rect x="34.3581%" y="357" width="0.0831%" height="15" fill="rgb(211,161,38)" fg:x="827" fg:w="2"/><text x="34.6081%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::const_ptr::_&lt;impl *const T&gt;::is_null (1 samples, 0.04%)</title><rect x="34.4412%" y="389" width="0.0415%" height="15" fill="rgb(219,138,40)" fg:x="829" fg:w="1"/><text x="34.6912%" y="399.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (293 samples, 12.17%)</title><rect x="22.4761%" y="405" width="12.1728%" height="15" fill="rgb(241,228,46)" fg:x="541" fg:w="293"/><text x="22.7261%" y="415.50">speed-0b1675bc7d97..</text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (4 samples, 0.17%)</title><rect x="34.4828%" y="389" width="0.1662%" height="15" fill="rgb(223,209,38)" fg:x="830" fg:w="4"/><text x="34.7328%" y="399.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (4 samples, 0.17%)</title><rect x="34.6489%" y="405" width="0.1662%" height="15" fill="rgb(236,164,45)" fg:x="834" fg:w="4"/><text x="34.8989%" y="415.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::const_ptr::_&lt;impl *const T&gt;::is_null (1 samples, 0.04%)</title><rect x="34.8982%" y="389" width="0.0415%" height="15" fill="rgb(231,15,5)" fg:x="840" fg:w="1"/><text x="35.1482%" y="399.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::slice::_&lt;impl [T]&gt;::iter (93 samples, 3.86%)</title><rect x="34.8151%" y="405" width="3.8637%" height="15" fill="rgb(252,35,15)" fg:x="838" fg:w="93"/><text x="35.0651%" y="415.50">spee..</text></g><g><title>speed-0b1675bc7d978a4b`core::slice::iter::Iter&lt;T&gt;::new (90 samples, 3.74%)</title><rect x="34.9398%" y="389" width="3.7391%" height="15" fill="rgb(248,181,18)" fg:x="841" fg:w="90"/><text x="35.1898%" y="399.50">spee..</text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::const_ptr::_&lt;impl *const T&gt;::is_null (71 samples, 2.95%)</title><rect x="35.7291%" y="373" width="2.9497%" height="15" fill="rgb(233,39,42)" fg:x="860" fg:w="71"/><text x="35.9791%" y="383.50">sp..</text></g><g><title>speed-0b1675bc7d978a4b`bft_json_crdt::list_crdt::ListCRDT&lt;T&gt;::find (497 samples, 20.65%)</title><rect x="18.1554%" y="421" width="20.6481%" height="15" fill="rgb(238,110,33)" fg:x="437" fg:w="497"/><text x="18.4054%" y="431.50">speed-0b1675bc7d978a4b`bft_json_..</text></g><g><title>speed-0b1675bc7d978a4b`core::slice::iter::Iter&lt;T&gt;::new (3 samples, 0.12%)</title><rect x="38.6789%" y="405" width="0.1246%" height="15" fill="rgb(233,195,10)" fg:x="931" fg:w="3"/><text x="38.9289%" y="415.50"></text></g><g><title>speed-0b1675bc7d978a4b`bft_json_crdt::op::Op&lt;T&gt;::author (2 samples, 0.08%)</title><rect x="38.8035%" y="421" width="0.0831%" height="15" fill="rgb(254,105,3)" fg:x="934" fg:w="2"/><text x="39.0535%" y="431.50"></text></g><g><title>speed-0b1675bc7d978a4b`bft_json_crdt::op::Op&lt;T&gt;::sequence_num (6 samples, 0.25%)</title><rect x="38.8866%" y="421" width="0.2493%" height="15" fill="rgb(221,225,9)" fg:x="936" fg:w="6"/><text x="39.1366%" y="431.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memcmp (5 samples, 0.21%)</title><rect x="39.4682%" y="373" width="0.2077%" height="15" fill="rgb(224,227,45)" fg:x="950" fg:w="5"/><text x="39.7182%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (12 samples, 0.50%)</title><rect x="39.6759%" y="373" width="0.4985%" height="15" fill="rgb(229,198,43)" fg:x="955" fg:w="12"/><text x="39.9259%" y="383.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::array::equality::_&lt;impl core::cmp::PartialEq&lt;[B (76 samples, 3.16%)</title><rect x="39.1359%" y="421" width="3.1575%" height="15" fill="rgb(206,209,35)" fg:x="942" fg:w="76"/><text x="39.3859%" y="431.50">spe..</text></g><g><title> N]&gt; for [A (76 samples, 3.16%)</title><rect x="39.1359%" y="405" width="3.1575%" height="15" fill="rgb(245,195,53)" fg:x="942" fg:w="76"/><text x="39.3859%" y="415.50"> N]..</text></g><g><title> N]&gt;::eq (76 samples, 3.16%)</title><rect x="39.1359%" y="389" width="3.1575%" height="15" fill="rgb(240,92,26)" fg:x="942" fg:w="76"/><text x="39.3859%" y="399.50"> N]..</text></g><g><title>speed-0b1675bc7d978a4b`&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (51 samples, 2.12%)</title><rect x="40.1745%" y="373" width="2.1188%" height="15" fill="rgb(207,40,23)" fg:x="967" fg:w="51"/><text x="40.4245%" y="383.50">s..</text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (20 samples, 0.83%)</title><rect x="41.4624%" y="357" width="0.8309%" height="15" fill="rgb(223,111,35)" fg:x="998" fg:w="20"/><text x="41.7124%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::cmp::impls::_&lt;impl core::cmp::Ord for u64&gt;::cmp (15 samples, 0.62%)</title><rect x="42.2933%" y="421" width="0.6232%" height="15" fill="rgb(229,147,28)" fg:x="1018" fg:w="15"/><text x="42.5433%" y="431.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::cmp::impls::_&lt;impl core::cmp::Ord for usize&gt;::cmp (11 samples, 0.46%)</title><rect x="42.9165%" y="421" width="0.4570%" height="15" fill="rgb(211,29,28)" fg:x="1033" fg:w="11"/><text x="43.1665%" y="431.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::option::Option&lt;T&gt;::unwrap (6 samples, 0.25%)</title><rect x="43.3735%" y="421" width="0.2493%" height="15" fill="rgb(228,72,33)" fg:x="1044" fg:w="6"/><text x="43.6235%" y="431.50"></text></g><g><title>speed-0b1675bc7d978a4b`bft_json_crdt::list_crdt::ListCRDT&lt;T&gt;::integrate (900 samples, 37.39%)</title><rect x="6.2734%" y="437" width="37.3909%" height="15" fill="rgb(205,214,31)" fg:x="151" fg:w="900"/><text x="6.5234%" y="447.50">speed-0b1675bc7d978a4b`bft_json_crdt::list_crdt::ListCRDT&lt;T&gt;:..</text></g><g><title>speed-0b1675bc7d978a4b`core::slice::_&lt;impl [T]&gt;::iter (1 samples, 0.04%)</title><rect x="43.6228%" y="421" width="0.0415%" height="15" fill="rgb(224,111,15)" fg:x="1050" fg:w="1"/><text x="43.8728%" y="431.50"></text></g><g><title>speed-0b1675bc7d978a4b`bft_json_crdt::op::Op&lt;T&gt;::author (1 samples, 0.04%)</title><rect x="43.6643%" y="437" width="0.0415%" height="15" fill="rgb(253,21,26)" fg:x="1051" fg:w="1"/><text x="43.9143%" y="447.50"></text></g><g><title>speed-0b1675bc7d978a4b`bft_json_crdt::op::Op&lt;T&gt;::sequence_num (6 samples, 0.25%)</title><rect x="43.7059%" y="437" width="0.2493%" height="15" fill="rgb(245,139,43)" fg:x="1052" fg:w="6"/><text x="43.9559%" y="447.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;u8 as core::default::Default&gt;::default (2 samples, 0.08%)</title><rect x="44.6199%" y="229" width="0.0831%" height="15" fill="rgb(252,170,7)" fg:x="1074" fg:w="2"/><text x="44.8699%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::write (5 samples, 0.21%)</title><rect x="44.7029%" y="229" width="0.2077%" height="15" fill="rgb(231,118,14)" fg:x="1076" fg:w="5"/><text x="44.9529%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::_{{closure}} (22 samples, 0.91%)</title><rect x="44.3290%" y="245" width="0.9140%" height="15" fill="rgb(238,83,0)" fg:x="1067" fg:w="22"/><text x="44.5790%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`generic_array::impls::_&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::_{{closure}} (8 samples, 0.33%)</title><rect x="44.9107%" y="229" width="0.3324%" height="15" fill="rgb(221,39,39)" fg:x="1081" fg:w="8"/><text x="45.1607%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::write (1 samples, 0.04%)</title><rect x="45.2430%" y="245" width="0.0415%" height="15" fill="rgb(222,119,46)" fg:x="1089" fg:w="1"/><text x="45.4930%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::_{{closure}} (26 samples, 1.08%)</title><rect x="44.2459%" y="277" width="1.0802%" height="15" fill="rgb(222,165,49)" fg:x="1065" fg:w="26"/><text x="44.4959%" y="287.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (26 samples, 1.08%)</title><rect x="44.2459%" y="261" width="1.0802%" height="15" fill="rgb(219,113,52)" fg:x="1065" fg:w="26"/><text x="44.4959%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`generic_array::impls::_&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::_{{closure}} (1 samples, 0.04%)</title><rect x="45.2846%" y="245" width="0.0415%" height="15" fill="rgb(214,7,15)" fg:x="1090" fg:w="1"/><text x="45.5346%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::for_each (49 samples, 2.04%)</title><rect x="44.0798%" y="325" width="2.0357%" height="15" fill="rgb(235,32,4)" fg:x="1061" fg:w="49"/><text x="44.3298%" y="335.50">s..</text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (49 samples, 2.04%)</title><rect x="44.0798%" y="309" width="2.0357%" height="15" fill="rgb(238,90,54)" fg:x="1061" fg:w="49"/><text x="44.3298%" y="319.50">s..</text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::fold (49 samples, 2.04%)</title><rect x="44.0798%" y="293" width="2.0357%" height="15" fill="rgb(213,208,19)" fg:x="1061" fg:w="49"/><text x="44.3298%" y="303.50">s..</text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.79%)</title><rect x="45.3261%" y="277" width="0.7894%" height="15" fill="rgb(233,156,4)" fg:x="1091" fg:w="19"/><text x="45.5761%" y="287.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (12 samples, 0.50%)</title><rect x="45.6170%" y="261" width="0.4985%" height="15" fill="rgb(207,194,5)" fg:x="1098" fg:w="12"/><text x="45.8670%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (6 samples, 0.25%)</title><rect x="45.8662%" y="245" width="0.2493%" height="15" fill="rgb(206,111,30)" fg:x="1104" fg:w="6"/><text x="46.1162%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`generic_array::ArrayBuilder&lt;T,N&gt;::iter_position (3 samples, 0.12%)</title><rect x="46.1155%" y="325" width="0.1246%" height="15" fill="rgb(243,70,54)" fg:x="1110" fg:w="3"/><text x="46.3655%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::slice::_&lt;impl [T]&gt;::iter_mut (2 samples, 0.08%)</title><rect x="46.1570%" y="309" width="0.0831%" height="15" fill="rgb(242,28,8)" fg:x="1111" fg:w="2"/><text x="46.4070%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::slice::iter::IterMut&lt;T&gt;::new (2 samples, 0.08%)</title><rect x="46.1570%" y="293" width="0.0831%" height="15" fill="rgb(219,106,18)" fg:x="1111" fg:w="2"/><text x="46.4070%" y="303.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (2 samples, 0.08%)</title><rect x="46.1570%" y="277" width="0.0831%" height="15" fill="rgb(244,222,10)" fg:x="1111" fg:w="2"/><text x="46.4070%" y="287.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="46.1986%" y="261" width="0.0415%" height="15" fill="rgb(236,179,52)" fg:x="1112" fg:w="1"/><text x="46.4486%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (53 samples, 2.20%)</title><rect x="44.0798%" y="341" width="2.2019%" height="15" fill="rgb(213,23,39)" fg:x="1061" fg:w="53"/><text x="44.3298%" y="351.50">s..</text></g><g><title>speed-0b1675bc7d978a4b`generic_array::ArrayBuilder&lt;T,N&gt;::new (1 samples, 0.04%)</title><rect x="46.2401%" y="325" width="0.0415%" height="15" fill="rgb(238,48,10)" fg:x="1113" fg:w="1"/><text x="46.4901%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.17%)</title><rect x="46.3232%" y="325" width="0.1662%" height="15" fill="rgb(251,196,23)" fg:x="1115" fg:w="4"/><text x="46.5732%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (2 samples, 0.08%)</title><rect x="46.4063%" y="309" width="0.0831%" height="15" fill="rgb(250,152,24)" fg:x="1117" fg:w="2"/><text x="46.6563%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::slice::iter::ChunksExactMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (2 samples, 0.08%)</title><rect x="46.4063%" y="293" width="0.0831%" height="15" fill="rgb(209,150,17)" fg:x="1117" fg:w="2"/><text x="46.6563%" y="303.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="46.4894%" y="325" width="0.0415%" height="15" fill="rgb(234,202,34)" fg:x="1119" fg:w="1"/><text x="46.7394%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.29%)</title><rect x="46.6556%" y="309" width="0.2908%" height="15" fill="rgb(253,148,53)" fg:x="1123" fg:w="7"/><text x="46.9056%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (6 samples, 0.25%)</title><rect x="46.6971%" y="293" width="0.2493%" height="15" fill="rgb(218,129,16)" fg:x="1124" fg:w="6"/><text x="46.9471%" y="303.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (3 samples, 0.12%)</title><rect x="46.8218%" y="277" width="0.1246%" height="15" fill="rgb(216,85,19)" fg:x="1127" fg:w="3"/><text x="47.0718%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.08%)</title><rect x="46.9880%" y="293" width="0.0831%" height="15" fill="rgb(235,228,7)" fg:x="1131" fg:w="2"/><text x="47.2380%" y="303.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::adapters::enumerate::Enumerate&lt;I&gt;::new (1 samples, 0.04%)</title><rect x="47.0710%" y="293" width="0.0415%" height="15" fill="rgb(245,175,0)" fg:x="1133" fg:w="1"/><text x="47.3210%" y="303.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::_{{closure}} (2 samples, 0.08%)</title><rect x="47.1541%" y="261" width="0.0831%" height="15" fill="rgb(208,168,36)" fg:x="1135" fg:w="2"/><text x="47.4041%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.12%)</title><rect x="47.2372%" y="261" width="0.1246%" height="15" fill="rgb(246,171,24)" fg:x="1137" fg:w="3"/><text x="47.4872%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::_{{closure}} (1 samples, 0.04%)</title><rect x="48.2343%" y="229" width="0.0415%" height="15" fill="rgb(215,142,24)" fg:x="1161" fg:w="1"/><text x="48.4843%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::write (5 samples, 0.21%)</title><rect x="48.9821%" y="197" width="0.2077%" height="15" fill="rgb(250,187,7)" fg:x="1179" fg:w="5"/><text x="49.2321%" y="207.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::_{{closure}} (28 samples, 1.16%)</title><rect x="48.4420%" y="213" width="1.1633%" height="15" fill="rgb(228,66,33)" fg:x="1166" fg:w="28"/><text x="48.6920%" y="223.50"></text></g><g><title>speed-0b1675bc7d978a4b`generic_array::impls::_&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::_{{closure}} (10 samples, 0.42%)</title><rect x="49.1899%" y="197" width="0.4155%" height="15" fill="rgb(234,215,21)" fg:x="1184" fg:w="10"/><text x="49.4399%" y="207.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;u8 as core::default::Default&gt;::default (1 samples, 0.04%)</title><rect x="49.5638%" y="181" width="0.0415%" height="15" fill="rgb(222,191,20)" fg:x="1193" fg:w="1"/><text x="49.8138%" y="191.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::write (1 samples, 0.04%)</title><rect x="49.6053%" y="213" width="0.0415%" height="15" fill="rgb(245,79,54)" fg:x="1194" fg:w="1"/><text x="49.8553%" y="223.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::_{{closure}} (47 samples, 1.95%)</title><rect x="47.7358%" y="245" width="1.9526%" height="15" fill="rgb(240,10,37)" fg:x="1149" fg:w="47"/><text x="47.9858%" y="255.50">s..</text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (34 samples, 1.41%)</title><rect x="48.2759%" y="229" width="1.4125%" height="15" fill="rgb(214,192,32)" fg:x="1162" fg:w="34"/><text x="48.5259%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`generic_array::impls::_&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::_{{closure}} (1 samples, 0.04%)</title><rect x="49.6469%" y="213" width="0.0415%" height="15" fill="rgb(209,36,54)" fg:x="1195" fg:w="1"/><text x="49.8969%" y="223.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (67 samples, 2.78%)</title><rect x="49.6884%" y="245" width="2.7835%" height="15" fill="rgb(220,10,11)" fg:x="1196" fg:w="67"/><text x="49.9384%" y="255.50">sp..</text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (46 samples, 1.91%)</title><rect x="50.5609%" y="229" width="1.9111%" height="15" fill="rgb(221,106,17)" fg:x="1217" fg:w="46"/><text x="50.8109%" y="239.50">s..</text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (17 samples, 0.71%)</title><rect x="51.7657%" y="213" width="0.7063%" height="15" fill="rgb(251,142,44)" fg:x="1246" fg:w="17"/><text x="52.0157%" y="223.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::for_each (130 samples, 5.40%)</title><rect x="47.1126%" y="293" width="5.4009%" height="15" fill="rgb(238,13,15)" fg:x="1134" fg:w="130"/><text x="47.3626%" y="303.50">speed-0..</text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (130 samples, 5.40%)</title><rect x="47.1126%" y="277" width="5.4009%" height="15" fill="rgb(208,107,27)" fg:x="1134" fg:w="130"/><text x="47.3626%" y="287.50">speed-0..</text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::fold (124 samples, 5.15%)</title><rect x="47.3619%" y="261" width="5.1516%" height="15" fill="rgb(205,136,37)" fg:x="1140" fg:w="124"/><text x="47.6119%" y="271.50">speed-..</text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="52.4720%" y="245" width="0.0415%" height="15" fill="rgb(250,205,27)" fg:x="1263" fg:w="1"/><text x="52.7220%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::read (1 samples, 0.04%)</title><rect x="52.5135%" y="293" width="0.0415%" height="15" fill="rgb(210,80,43)" fg:x="1264" fg:w="1"/><text x="52.7635%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="52.6797%" y="277" width="0.0415%" height="15" fill="rgb(247,160,36)" fg:x="1268" fg:w="1"/><text x="52.9297%" y="287.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (145 samples, 6.02%)</title><rect x="46.9464%" y="309" width="6.0241%" height="15" fill="rgb(234,13,49)" fg:x="1130" fg:w="145"/><text x="47.1964%" y="319.50">speed-0b..</text></g><g><title>speed-0b1675bc7d978a4b`generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (10 samples, 0.42%)</title><rect x="52.5550%" y="293" width="0.4155%" height="15" fill="rgb(234,122,0)" fg:x="1265" fg:w="10"/><text x="52.8050%" y="303.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::read (6 samples, 0.25%)</title><rect x="52.7212%" y="277" width="0.2493%" height="15" fill="rgb(207,146,38)" fg:x="1269" fg:w="6"/><text x="52.9712%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (5 samples, 0.21%)</title><rect x="52.7628%" y="261" width="0.2077%" height="15" fill="rgb(207,177,25)" fg:x="1270" fg:w="5"/><text x="53.0128%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::array::from_ref (1 samples, 0.04%)</title><rect x="53.0120%" y="293" width="0.0415%" height="15" fill="rgb(211,178,42)" fg:x="1276" fg:w="1"/><text x="53.2620%" y="303.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::slice::raw::from_ref (1 samples, 0.04%)</title><rect x="53.0536%" y="293" width="0.0415%" height="15" fill="rgb(230,69,54)" fg:x="1277" fg:w="1"/><text x="53.3036%" y="303.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::array::from_ref (1 samples, 0.04%)</title><rect x="53.0536%" y="277" width="0.0415%" height="15" fill="rgb(214,135,41)" fg:x="1277" fg:w="1"/><text x="53.3036%" y="287.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (1 samples, 0.04%)</title><rect x="53.6352%" y="245" width="0.0415%" height="15" fill="rgb(237,67,25)" fg:x="1291" fg:w="1"/><text x="53.8852%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (4 samples, 0.17%)</title><rect x="53.6768%" y="245" width="0.1662%" height="15" fill="rgb(222,189,50)" fg:x="1292" fg:w="4"/><text x="53.9268%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.17%)</title><rect x="53.8430%" y="245" width="0.1662%" height="15" fill="rgb(245,148,34)" fg:x="1296" fg:w="4"/><text x="54.0930%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for &amp;[T (4 samples, 0.17%)</title><rect x="54.8816%" y="197" width="0.1662%" height="15" fill="rgb(222,29,6)" fg:x="1321" fg:w="4"/><text x="55.1316%" y="207.50"></text></g><g><title> N]&gt;::try_from (4 samples, 0.17%)</title><rect x="54.8816%" y="181" width="0.1662%" height="15" fill="rgb(221,189,43)" fg:x="1321" fg:w="4"/><text x="55.1316%" y="191.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T (1 samples, 0.04%)</title><rect x="55.0478%" y="197" width="0.0415%" height="15" fill="rgb(207,36,27)" fg:x="1325" fg:w="1"/><text x="55.2978%" y="207.50"></text></g><g><title> N]&gt;::try_from::_{{closure}} (1 samples, 0.04%)</title><rect x="55.0478%" y="181" width="0.0415%" height="15" fill="rgb(217,90,24)" fg:x="1325" fg:w="1"/><text x="55.2978%" y="191.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (50 samples, 2.08%)</title><rect x="54.0091%" y="245" width="2.0773%" height="15" fill="rgb(224,66,35)" fg:x="1300" fg:w="50"/><text x="54.2591%" y="255.50">s..</text></g><g><title>speed-0b1675bc7d978a4b`core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T (44 samples, 1.83%)</title><rect x="54.2584%" y="229" width="1.8280%" height="15" fill="rgb(221,13,50)" fg:x="1306" fg:w="44"/><text x="54.5084%" y="239.50">s..</text></g><g><title> N]&gt;::try_from (44 samples, 1.83%)</title><rect x="54.2584%" y="213" width="1.8280%" height="15" fill="rgb(236,68,49)" fg:x="1306" fg:w="44"/><text x="54.5084%" y="223.50"> ..</text></g><g><title>speed-0b1675bc7d978a4b`core::result::Result&lt;T,E&gt;::map (24 samples, 1.00%)</title><rect x="55.0893%" y="197" width="0.9971%" height="15" fill="rgb(229,146,28)" fg:x="1326" fg:w="24"/><text x="55.3393%" y="207.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T (7 samples, 0.29%)</title><rect x="55.7956%" y="181" width="0.2908%" height="15" fill="rgb(225,31,38)" fg:x="1343" fg:w="7"/><text x="56.0456%" y="191.50"></text></g><g><title> N]&gt;::try_from::_{{closure}} (7 samples, 0.29%)</title><rect x="55.7956%" y="165" width="0.2908%" height="15" fill="rgb(250,208,3)" fg:x="1343" fg:w="7"/><text x="56.0456%" y="175.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::slice::iter::ChunksExact&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (4 samples, 0.17%)</title><rect x="56.3357%" y="213" width="0.1662%" height="15" fill="rgb(246,54,23)" fg:x="1356" fg:w="4"/><text x="56.5857%" y="223.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (9 samples, 0.37%)</title><rect x="56.1695%" y="229" width="0.3739%" height="15" fill="rgb(243,76,11)" fg:x="1352" fg:w="9"/><text x="56.4195%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (1 samples, 0.04%)</title><rect x="56.5019%" y="213" width="0.0415%" height="15" fill="rgb(245,21,50)" fg:x="1360" fg:w="1"/><text x="56.7519%" y="223.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.58%)</title><rect x="56.0864%" y="245" width="0.5816%" height="15" fill="rgb(228,9,43)" fg:x="1350" fg:w="14"/><text x="56.3364%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (3 samples, 0.12%)</title><rect x="56.5434%" y="229" width="0.1246%" height="15" fill="rgb(208,100,47)" fg:x="1361" fg:w="3"/><text x="56.7934%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::const_ptr::_&lt;impl *const T&gt;::is_null (1 samples, 0.04%)</title><rect x="56.6681%" y="229" width="0.0415%" height="15" fill="rgb(232,26,8)" fg:x="1364" fg:w="1"/><text x="56.9181%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.17%)</title><rect x="56.6681%" y="245" width="0.1662%" height="15" fill="rgb(216,166,38)" fg:x="1364" fg:w="4"/><text x="56.9181%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (3 samples, 0.12%)</title><rect x="56.7096%" y="229" width="0.1246%" height="15" fill="rgb(251,202,51)" fg:x="1365" fg:w="3"/><text x="56.9596%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="56.7927%" y="213" width="0.0415%" height="15" fill="rgb(254,216,34)" fg:x="1367" fg:w="1"/><text x="57.0427%" y="223.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (3 samples, 0.12%)</title><rect x="56.8342%" y="229" width="0.1246%" height="15" fill="rgb(251,32,27)" fg:x="1368" fg:w="3"/><text x="57.0842%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.12%)</title><rect x="56.8342%" y="213" width="0.1246%" height="15" fill="rgb(208,127,28)" fg:x="1368" fg:w="3"/><text x="57.0842%" y="223.50"></text></g><g><title>speed-0b1675bc7d978a4b`DYLD-STUB$$memcpy (1 samples, 0.04%)</title><rect x="56.9589%" y="229" width="0.0415%" height="15" fill="rgb(224,137,22)" fg:x="1371" fg:w="1"/><text x="57.2089%" y="239.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (1 samples, 0.04%)</title><rect x="57.0420%" y="213" width="0.0415%" height="15" fill="rgb(254,70,32)" fg:x="1373" fg:w="1"/><text x="57.2920%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="57.1666%" y="197" width="0.0415%" height="15" fill="rgb(229,75,37)" fg:x="1376" fg:w="1"/><text x="57.4166%" y="207.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (4 samples, 0.17%)</title><rect x="57.0835%" y="213" width="0.1662%" height="15" fill="rgb(252,64,23)" fg:x="1374" fg:w="4"/><text x="57.3335%" y="223.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size (1 samples, 0.04%)</title><rect x="57.2081%" y="197" width="0.0415%" height="15" fill="rgb(232,162,48)" fg:x="1377" fg:w="1"/><text x="57.4581%" y="207.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.04%)</title><rect x="57.2081%" y="181" width="0.0415%" height="15" fill="rgb(246,160,12)" fg:x="1377" fg:w="1"/><text x="57.4581%" y="191.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::zip (11 samples, 0.46%)</title><rect x="56.8342%" y="245" width="0.4570%" height="15" fill="rgb(247,166,0)" fg:x="1368" fg:w="11"/><text x="57.0842%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::adapters::zip::Zip&lt;A,B&gt;::new (7 samples, 0.29%)</title><rect x="57.0004%" y="229" width="0.2908%" height="15" fill="rgb(249,219,21)" fg:x="1372" fg:w="7"/><text x="57.2504%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::cmp::Ord::min (1 samples, 0.04%)</title><rect x="57.2497%" y="213" width="0.0415%" height="15" fill="rgb(205,209,3)" fg:x="1378" fg:w="1"/><text x="57.4997%" y="223.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::num::_&lt;impl u32&gt;::from_be_bytes (10 samples, 0.42%)</title><rect x="57.2912%" y="245" width="0.4155%" height="15" fill="rgb(243,44,1)" fg:x="1379" fg:w="10"/><text x="57.5412%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::result::Result&lt;T,E&gt;::unwrap (5 samples, 0.21%)</title><rect x="57.7067%" y="245" width="0.2077%" height="15" fill="rgb(206,159,16)" fg:x="1389" fg:w="5"/><text x="57.9567%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::slice::_&lt;impl [T]&gt;::chunks_exact (4 samples, 0.17%)</title><rect x="57.9144%" y="245" width="0.1662%" height="15" fill="rgb(244,77,30)" fg:x="1394" fg:w="4"/><text x="58.1644%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::slice::iter::ChunksExact&lt;T&gt;::new (4 samples, 0.17%)</title><rect x="57.9144%" y="229" width="0.1662%" height="15" fill="rgb(218,69,12)" fg:x="1394" fg:w="4"/><text x="58.1644%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::slice::_&lt;impl [T]&gt;::split_at_unchecked (3 samples, 0.12%)</title><rect x="57.9560%" y="213" width="0.1246%" height="15" fill="rgb(212,87,7)" fg:x="1395" fg:w="3"/><text x="58.2060%" y="223.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::slice::_&lt;impl [T]&gt;::iter_mut (2 samples, 0.08%)</title><rect x="58.0806%" y="245" width="0.0831%" height="15" fill="rgb(245,114,25)" fg:x="1398" fg:w="2"/><text x="58.3306%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::slice::iter::IterMut&lt;T&gt;::new (2 samples, 0.08%)</title><rect x="58.0806%" y="229" width="0.0831%" height="15" fill="rgb(210,61,42)" fg:x="1398" fg:w="2"/><text x="58.3306%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="58.1221%" y="213" width="0.0415%" height="15" fill="rgb(211,52,33)" fg:x="1399" fg:w="1"/><text x="58.3721%" y="223.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::slice::iter::_&lt;impl core::iter::traits::collect::IntoIterator for &amp;[T]&gt;::into_iter (5 samples, 0.21%)</title><rect x="58.1637%" y="245" width="0.2077%" height="15" fill="rgb(234,58,33)" fg:x="1400" fg:w="5"/><text x="58.4137%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::slice::iter::Iter&lt;T&gt;::new (5 samples, 0.21%)</title><rect x="58.1637%" y="229" width="0.2077%" height="15" fill="rgb(220,115,36)" fg:x="1400" fg:w="5"/><text x="58.4137%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::const_ptr::_&lt;impl *const T&gt;::is_null (4 samples, 0.17%)</title><rect x="58.2052%" y="213" width="0.1662%" height="15" fill="rgb(243,153,54)" fg:x="1401" fg:w="4"/><text x="58.4552%" y="223.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::schedule (1 samples, 0.04%)</title><rect x="58.3714%" y="245" width="0.0415%" height="15" fill="rgb(251,47,18)" fg:x="1405" fg:w="1"/><text x="58.6214%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (12 samples, 0.50%)</title><rect x="60.4487%" y="229" width="0.4985%" height="15" fill="rgb(242,102,42)" fg:x="1455" fg:w="12"/><text x="60.6987%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`__rust_probestack (1 samples, 0.04%)</title><rect x="60.9472%" y="229" width="0.0415%" height="15" fill="rgb(234,31,38)" fg:x="1467" fg:w="1"/><text x="61.1972%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::sha256load (5 samples, 0.21%)</title><rect x="61.7366%" y="213" width="0.2077%" height="15" fill="rgb(221,117,51)" fg:x="1486" fg:w="5"/><text x="61.9866%" y="223.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::sha256load (4 samples, 0.17%)</title><rect x="62.1936%" y="197" width="0.1662%" height="15" fill="rgb(212,20,18)" fg:x="1497" fg:w="4"/><text x="62.4436%" y="207.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::sha256msg1 (40 samples, 1.66%)</title><rect x="61.9443%" y="213" width="1.6618%" height="15" fill="rgb(245,133,36)" fg:x="1491" fg:w="40"/><text x="62.1943%" y="223.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::sha256msg1::sigma0x4 (30 samples, 1.25%)</title><rect x="62.3598%" y="197" width="1.2464%" height="15" fill="rgb(212,6,19)" fg:x="1501" fg:w="30"/><text x="62.6098%" y="207.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::schedule (88 samples, 3.66%)</title><rect x="60.9888%" y="229" width="3.6560%" height="15" fill="rgb(218,1,36)" fg:x="1468" fg:w="88"/><text x="61.2388%" y="239.50">spee..</text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::sha256msg2 (25 samples, 1.04%)</title><rect x="63.6061%" y="213" width="1.0386%" height="15" fill="rgb(246,84,54)" fg:x="1531" fg:w="25"/><text x="63.8561%" y="223.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::sha256_digest_round_x2 (109 samples, 4.53%)</title><rect x="64.6448%" y="229" width="4.5285%" height="15" fill="rgb(242,110,6)" fg:x="1556" fg:w="109"/><text x="64.8948%" y="239.50">speed..</text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::sha256_digest_block_u32 (260 samples, 10.80%)</title><rect x="58.4130%" y="245" width="10.8018%" height="15" fill="rgb(214,47,5)" fg:x="1406" fg:w="260"/><text x="58.6630%" y="255.50">speed-0b1675bc7d..</text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::sha256load (1 samples, 0.04%)</title><rect x="69.1732%" y="229" width="0.0415%" height="15" fill="rgb(218,159,25)" fg:x="1665" fg:w="1"/><text x="69.4232%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;sha2::core_api::Sha256VarCore as digest::core_api::VariableOutputCore&gt;::finalize_variable_core::_{{closure}} (392 samples, 16.29%)</title><rect x="52.9705%" y="309" width="16.2858%" height="15" fill="rgb(215,211,28)" fg:x="1275" fg:w="392"/><text x="53.2205%" y="319.50">speed-0b1675bc7d978a4b`&lt;s..</text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::compress256 (389 samples, 16.16%)</title><rect x="53.0951%" y="293" width="16.1612%" height="15" fill="rgb(238,59,32)" fg:x="1278" fg:w="389"/><text x="53.3451%" y="303.50">speed-0b1675bc7d978a4b`sh..</text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::x86::compress (387 samples, 16.08%)</title><rect x="53.1782%" y="277" width="16.0781%" height="15" fill="rgb(226,82,3)" fg:x="1280" fg:w="387"/><text x="53.4282%" y="287.50">speed-0b1675bc7d978a4b`sh..</text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::compress (387 samples, 16.08%)</title><rect x="53.1782%" y="261" width="16.0781%" height="15" fill="rgb(240,164,32)" fg:x="1280" fg:w="387"/><text x="53.4282%" y="271.50">speed-0b1675bc7d978a4b`sh..</text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::sha256swap (1 samples, 0.04%)</title><rect x="69.2148%" y="245" width="0.0415%" height="15" fill="rgb(232,46,7)" fg:x="1666" fg:w="1"/><text x="69.4648%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`block_buffer::BlockBuffer&lt;BlockSize,block_buffer::Eager&gt;::len64_padding_be (551 samples, 22.89%)</title><rect x="46.5310%" y="325" width="22.8916%" height="15" fill="rgb(229,129,53)" fg:x="1120" fg:w="551"/><text x="46.7810%" y="335.50">speed-0b1675bc7d978a4b`block_buffer:..</text></g><g><title>speed-0b1675bc7d978a4b`core::slice::index::_&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (4 samples, 0.17%)</title><rect x="69.2563%" y="309" width="0.1662%" height="15" fill="rgb(234,188,29)" fg:x="1667" fg:w="4"/><text x="69.5063%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (4 samples, 0.17%)</title><rect x="69.2563%" y="293" width="0.1662%" height="15" fill="rgb(246,141,4)" fg:x="1667" fg:w="4"/><text x="69.5063%" y="303.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (3 samples, 0.12%)</title><rect x="69.2979%" y="277" width="0.1246%" height="15" fill="rgb(229,23,39)" fg:x="1668" fg:w="3"/><text x="69.5479%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="69.4641%" y="293" width="0.0415%" height="15" fill="rgb(206,12,3)" fg:x="1672" fg:w="1"/><text x="69.7141%" y="303.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::zip (3 samples, 0.12%)</title><rect x="69.4225%" y="325" width="0.1246%" height="15" fill="rgb(252,226,20)" fg:x="1671" fg:w="3"/><text x="69.6725%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::adapters::zip::Zip&lt;A,B&gt;::new (3 samples, 0.12%)</title><rect x="69.4225%" y="309" width="0.1246%" height="15" fill="rgb(216,123,35)" fg:x="1671" fg:w="3"/><text x="69.6725%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (1 samples, 0.04%)</title><rect x="69.5056%" y="293" width="0.0415%" height="15" fill="rgb(212,68,40)" fg:x="1673" fg:w="1"/><text x="69.7556%" y="303.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size (1 samples, 0.04%)</title><rect x="69.5056%" y="277" width="0.0415%" height="15" fill="rgb(254,125,32)" fg:x="1673" fg:w="1"/><text x="69.7556%" y="287.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::slice::iter::ChunksExactMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.04%)</title><rect x="69.5056%" y="261" width="0.0415%" height="15" fill="rgb(253,97,22)" fg:x="1673" fg:w="1"/><text x="69.7556%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::num::_&lt;impl u32&gt;::to_be_bytes (2 samples, 0.08%)</title><rect x="69.5472%" y="325" width="0.0831%" height="15" fill="rgb(241,101,14)" fg:x="1674" fg:w="2"/><text x="69.7972%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::slice::_&lt;impl [T]&gt;::chunks_exact_mut (1 samples, 0.04%)</title><rect x="69.6302%" y="325" width="0.0415%" height="15" fill="rgb(238,103,29)" fg:x="1676" fg:w="1"/><text x="69.8802%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::slice::iter::ChunksExactMut&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="69.6302%" y="309" width="0.0415%" height="15" fill="rgb(233,195,47)" fg:x="1676" fg:w="1"/><text x="69.8802%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::slice::_&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.04%)</title><rect x="69.6718%" y="325" width="0.0415%" height="15" fill="rgb(246,218,30)" fg:x="1677" fg:w="1"/><text x="69.9218%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="69.6718%" y="309" width="0.0415%" height="15" fill="rgb(219,145,47)" fg:x="1677" fg:w="1"/><text x="69.9218%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::slice::_&lt;impl [T]&gt;::iter (1 samples, 0.04%)</title><rect x="69.7133%" y="325" width="0.0415%" height="15" fill="rgb(243,12,26)" fg:x="1678" fg:w="1"/><text x="69.9633%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="69.7133%" y="309" width="0.0415%" height="15" fill="rgb(214,87,16)" fg:x="1678" fg:w="1"/><text x="69.9633%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::const_ptr::_&lt;impl *const T&gt;::is_null (1 samples, 0.04%)</title><rect x="69.7133%" y="293" width="0.0415%" height="15" fill="rgb(208,99,42)" fg:x="1678" fg:w="1"/><text x="69.9633%" y="303.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;sha2::core_api::Sha256VarCore as digest::core_api::VariableOutputCore&gt;::finalize_variable_core (566 samples, 23.51%)</title><rect x="46.2817%" y="341" width="23.5147%" height="15" fill="rgb(253,99,2)" fg:x="1114" fg:w="566"/><text x="46.5317%" y="351.50">speed-0b1675bc7d978a4b`&lt;sha2::core_ap..</text></g><g><title>speed-0b1675bc7d978a4b`core::slice::_&lt;impl [T]&gt;::len (1 samples, 0.04%)</title><rect x="69.7549%" y="325" width="0.0415%" height="15" fill="rgb(220,168,23)" fg:x="1679" fg:w="1"/><text x="70.0049%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::slice::_&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.04%)</title><rect x="69.7964%" y="341" width="0.0415%" height="15" fill="rgb(242,38,24)" fg:x="1680" fg:w="1"/><text x="70.0464%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="69.7964%" y="325" width="0.0415%" height="15" fill="rgb(225,182,9)" fg:x="1680" fg:w="1"/><text x="70.0464%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::slice::_&lt;impl [T]&gt;::len (1 samples, 0.04%)</title><rect x="69.8380%" y="341" width="0.0415%" height="15" fill="rgb(243,178,37)" fg:x="1681" fg:w="1"/><text x="70.0880%" y="351.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::FixedOutput&gt;::finalize_into (624 samples, 25.92%)</title><rect x="44.0382%" y="373" width="25.9244%" height="15" fill="rgb(232,139,19)" fg:x="1060" fg:w="624"/><text x="44.2882%" y="383.50">speed-0b1675bc7d978a4b`&lt;digest::core_api:..</text></g><g><title>speed-0b1675bc7d978a4b`&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (624 samples, 25.92%)</title><rect x="44.0382%" y="357" width="25.9244%" height="15" fill="rgb(225,201,24)" fg:x="1060" fg:w="624"/><text x="44.2882%" y="367.50">speed-0b1675bc7d978a4b`&lt;digest::core_api:..</text></g><g><title>speed-0b1675bc7d978a4b`core::slice::index::_&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.08%)</title><rect x="69.8795%" y="341" width="0.0831%" height="15" fill="rgb(221,47,46)" fg:x="1682" fg:w="2"/><text x="70.1295%" y="351.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.04%)</title><rect x="69.9211%" y="325" width="0.0415%" height="15" fill="rgb(249,23,13)" fg:x="1683" fg:w="1"/><text x="70.1711%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;u8 as core::default::Default&gt;::default (1 samples, 0.04%)</title><rect x="70.8351%" y="261" width="0.0415%" height="15" fill="rgb(219,9,5)" fg:x="1705" fg:w="1"/><text x="71.0851%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::write (1 samples, 0.04%)</title><rect x="70.8766%" y="261" width="0.0415%" height="15" fill="rgb(254,171,16)" fg:x="1706" fg:w="1"/><text x="71.1266%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::_{{closure}} (24 samples, 1.00%)</title><rect x="70.1288%" y="309" width="0.9971%" height="15" fill="rgb(230,171,20)" fg:x="1688" fg:w="24"/><text x="70.3788%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (18 samples, 0.75%)</title><rect x="70.3781%" y="293" width="0.7478%" height="15" fill="rgb(210,71,41)" fg:x="1694" fg:w="18"/><text x="70.6281%" y="303.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::_{{closure}} (17 samples, 0.71%)</title><rect x="70.4196%" y="277" width="0.7063%" height="15" fill="rgb(206,173,20)" fg:x="1695" fg:w="17"/><text x="70.6696%" y="287.50"></text></g><g><title>speed-0b1675bc7d978a4b`generic_array::impls::_&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::_{{closure}} (5 samples, 0.21%)</title><rect x="70.9182%" y="261" width="0.2077%" height="15" fill="rgb(233,88,34)" fg:x="1707" fg:w="5"/><text x="71.1682%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 1.16%)</title><rect x="71.1259%" y="309" width="1.1633%" height="15" fill="rgb(223,209,46)" fg:x="1712" fg:w="28"/><text x="71.3759%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (20 samples, 0.83%)</title><rect x="71.4582%" y="293" width="0.8309%" height="15" fill="rgb(250,43,18)" fg:x="1720" fg:w="20"/><text x="71.7082%" y="303.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (6 samples, 0.25%)</title><rect x="72.0399%" y="277" width="0.2493%" height="15" fill="rgb(208,13,10)" fg:x="1734" fg:w="6"/><text x="72.2899%" y="287.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1 samples, 0.04%)</title><rect x="72.2892%" y="309" width="0.0415%" height="15" fill="rgb(212,200,36)" fg:x="1740" fg:w="1"/><text x="72.5392%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::for_each (58 samples, 2.41%)</title><rect x="69.9626%" y="357" width="2.4096%" height="15" fill="rgb(225,90,30)" fg:x="1684" fg:w="58"/><text x="70.2126%" y="367.50">sp..</text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (58 samples, 2.41%)</title><rect x="69.9626%" y="341" width="2.4096%" height="15" fill="rgb(236,182,39)" fg:x="1684" fg:w="58"/><text x="70.2126%" y="351.50">sp..</text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::fold (58 samples, 2.41%)</title><rect x="69.9626%" y="325" width="2.4096%" height="15" fill="rgb(212,144,35)" fg:x="1684" fg:w="58"/><text x="70.2126%" y="335.50">sp..</text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="72.3307%" y="309" width="0.0415%" height="15" fill="rgb(228,63,44)" fg:x="1741" fg:w="1"/><text x="72.5807%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`generic_array::ArrayBuilder&lt;T,N&gt;::iter_position (2 samples, 0.08%)</title><rect x="72.3722%" y="357" width="0.0831%" height="15" fill="rgb(228,109,6)" fg:x="1742" fg:w="2"/><text x="72.6222%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::slice::raw::from_raw_parts_mut (2 samples, 0.08%)</title><rect x="72.3722%" y="341" width="0.0831%" height="15" fill="rgb(238,117,24)" fg:x="1742" fg:w="2"/><text x="72.6222%" y="351.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;D as digest::digest::Digest&gt;::finalize (685 samples, 28.46%)</title><rect x="44.0382%" y="405" width="28.4587%" height="15" fill="rgb(242,26,26)" fg:x="1060" fg:w="685"/><text x="44.2882%" y="415.50">speed-0b1675bc7d978a4b`&lt;D as digest::digest::D..</text></g><g><title>speed-0b1675bc7d978a4b`digest::FixedOutput::finalize_fixed (685 samples, 28.46%)</title><rect x="44.0382%" y="389" width="28.4587%" height="15" fill="rgb(221,92,48)" fg:x="1060" fg:w="685"/><text x="44.2882%" y="399.50">speed-0b1675bc7d978a4b`digest::FixedOutput::fi..</text></g><g><title>speed-0b1675bc7d978a4b`&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (61 samples, 2.53%)</title><rect x="69.9626%" y="373" width="2.5343%" height="15" fill="rgb(209,209,32)" fg:x="1684" fg:w="61"/><text x="70.2126%" y="383.50">sp..</text></g><g><title>speed-0b1675bc7d978a4b`generic_array::ArrayBuilder&lt;T,N&gt;::new (1 samples, 0.04%)</title><rect x="72.4553%" y="357" width="0.0415%" height="15" fill="rgb(221,70,22)" fg:x="1744" fg:w="1"/><text x="72.7053%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;block_buffer::BlockBuffer&lt;BlockSize,Kind&gt; as core::default::Default&gt;::default (1 samples, 0.04%)</title><rect x="72.4969%" y="389" width="0.0415%" height="15" fill="rgb(248,145,5)" fg:x="1745" fg:w="1"/><text x="72.7469%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="72.5800%" y="357" width="0.0415%" height="15" fill="rgb(226,116,26)" fg:x="1747" fg:w="1"/><text x="72.8300%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::adapters::enumerate::Enumerate&lt;I&gt;::new (1 samples, 0.04%)</title><rect x="72.6215%" y="341" width="0.0415%" height="15" fill="rgb(244,5,17)" fg:x="1748" fg:w="1"/><text x="72.8715%" y="351.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::_{{closure}} (4 samples, 0.17%)</title><rect x="72.6631%" y="309" width="0.1662%" height="15" fill="rgb(252,159,33)" fg:x="1749" fg:w="4"/><text x="72.9131%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.17%)</title><rect x="72.8292%" y="309" width="0.1662%" height="15" fill="rgb(206,71,0)" fg:x="1753" fg:w="4"/><text x="73.0792%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;u8 as core::default::Default&gt;::default (1 samples, 0.04%)</title><rect x="74.8650%" y="245" width="0.0415%" height="15" fill="rgb(233,118,54)" fg:x="1802" fg:w="1"/><text x="75.1150%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::write (3 samples, 0.12%)</title><rect x="74.9065%" y="245" width="0.1246%" height="15" fill="rgb(234,83,48)" fg:x="1803" fg:w="3"/><text x="75.1565%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::_{{closure}} (40 samples, 1.66%)</title><rect x="73.8263%" y="261" width="1.6618%" height="15" fill="rgb(228,3,54)" fg:x="1777" fg:w="40"/><text x="74.0763%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`generic_array::impls::_&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::_{{closure}} (11 samples, 0.46%)</title><rect x="75.0312%" y="245" width="0.4570%" height="15" fill="rgb(226,155,13)" fg:x="1806" fg:w="11"/><text x="75.2812%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::_{{closure}} (57 samples, 2.37%)</title><rect x="73.2447%" y="293" width="2.3681%" height="15" fill="rgb(241,28,37)" fg:x="1763" fg:w="57"/><text x="73.4947%" y="303.50">sp..</text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (46 samples, 1.91%)</title><rect x="73.7017%" y="277" width="1.9111%" height="15" fill="rgb(233,93,10)" fg:x="1774" fg:w="46"/><text x="73.9517%" y="287.50">s..</text></g><g><title>speed-0b1675bc7d978a4b`generic_array::impls::_&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::_{{closure}} (3 samples, 0.12%)</title><rect x="75.4882%" y="261" width="0.1246%" height="15" fill="rgb(225,113,19)" fg:x="1817" fg:w="3"/><text x="75.7382%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="76.3191%" y="277" width="0.0415%" height="15" fill="rgb(241,2,18)" fg:x="1837" fg:w="1"/><text x="76.5691%" y="287.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (67 samples, 2.78%)</title><rect x="75.6128%" y="293" width="2.7835%" height="15" fill="rgb(228,207,21)" fg:x="1820" fg:w="67"/><text x="75.8628%" y="303.50">sp..</text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (49 samples, 2.04%)</title><rect x="76.3606%" y="277" width="2.0357%" height="15" fill="rgb(213,211,35)" fg:x="1838" fg:w="49"/><text x="76.6106%" y="287.50">s..</text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (18 samples, 0.75%)</title><rect x="77.6485%" y="261" width="0.7478%" height="15" fill="rgb(209,83,10)" fg:x="1869" fg:w="18"/><text x="77.8985%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::for_each (140 samples, 5.82%)</title><rect x="72.6631%" y="341" width="5.8164%" height="15" fill="rgb(209,164,1)" fg:x="1749" fg:w="140"/><text x="72.9131%" y="351.50">speed-0..</text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (140 samples, 5.82%)</title><rect x="72.6631%" y="325" width="5.8164%" height="15" fill="rgb(213,184,43)" fg:x="1749" fg:w="140"/><text x="72.9131%" y="335.50">speed-0..</text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::fold (132 samples, 5.48%)</title><rect x="72.9954%" y="309" width="5.4840%" height="15" fill="rgb(231,61,34)" fg:x="1757" fg:w="132"/><text x="73.2454%" y="319.50">speed-0..</text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (2 samples, 0.08%)</title><rect x="78.3963%" y="293" width="0.0831%" height="15" fill="rgb(235,75,3)" fg:x="1887" fg:w="2"/><text x="78.6463%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.08%)</title><rect x="78.4794%" y="325" width="0.0831%" height="15" fill="rgb(220,106,47)" fg:x="1889" fg:w="2"/><text x="78.7294%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;block_buffer::BlockBuffer&lt;BlockSize,Kind&gt; as core::default::Default&gt;::default (149 samples, 6.19%)</title><rect x="72.5384%" y="373" width="6.1903%" height="15" fill="rgb(210,196,33)" fg:x="1746" fg:w="149"/><text x="72.7884%" y="383.50">speed-0b..</text></g><g><title>speed-0b1675bc7d978a4b`&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (147 samples, 6.11%)</title><rect x="72.6215%" y="357" width="6.1072%" height="15" fill="rgb(229,154,42)" fg:x="1748" fg:w="147"/><text x="72.8715%" y="367.50">speed-0b..</text></g><g><title>speed-0b1675bc7d978a4b`generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (6 samples, 0.25%)</title><rect x="78.4794%" y="341" width="0.2493%" height="15" fill="rgb(228,114,26)" fg:x="1889" fg:w="6"/><text x="78.7294%" y="351.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::read (4 samples, 0.17%)</title><rect x="78.5625%" y="325" width="0.1662%" height="15" fill="rgb(208,144,1)" fg:x="1891" fg:w="4"/><text x="78.8125%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.12%)</title><rect x="78.6041%" y="309" width="0.1246%" height="15" fill="rgb(239,112,37)" fg:x="1892" fg:w="3"/><text x="78.8541%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;sha2::core_api::Sha256VarCore as digest::core_api::VariableOutputCore&gt;::new (1 samples, 0.04%)</title><rect x="78.7287%" y="357" width="0.0415%" height="15" fill="rgb(210,96,50)" fg:x="1895" fg:w="1"/><text x="78.9787%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;D as digest::digest::Digest&gt;::new (152 samples, 6.31%)</title><rect x="72.4969%" y="405" width="6.3149%" height="15" fill="rgb(222,178,2)" fg:x="1745" fg:w="152"/><text x="72.7469%" y="415.50">speed-0b..</text></g><g><title>speed-0b1675bc7d978a4b`&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as core::default::Default&gt;::default (151 samples, 6.27%)</title><rect x="72.5384%" y="389" width="6.2734%" height="15" fill="rgb(226,74,18)" fg:x="1746" fg:w="151"/><text x="72.7884%" y="399.50">speed-0b..</text></g><g><title>speed-0b1675bc7d978a4b`&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as core::default::Default&gt;::default (2 samples, 0.08%)</title><rect x="78.7287%" y="373" width="0.0831%" height="15" fill="rgb(225,67,54)" fg:x="1895" fg:w="2"/><text x="78.9787%" y="383.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::result::Result&lt;T,E&gt;::unwrap (1 samples, 0.04%)</title><rect x="78.7703%" y="357" width="0.0415%" height="15" fill="rgb(251,92,32)" fg:x="1896" fg:w="1"/><text x="79.0203%" y="367.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (1 samples, 0.04%)</title><rect x="78.9364%" y="357" width="0.0415%" height="15" fill="rgb(228,149,22)" fg:x="1900" fg:w="1"/><text x="79.1864%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="78.9780%" y="357" width="0.0415%" height="15" fill="rgb(243,54,13)" fg:x="1901" fg:w="1"/><text x="79.2280%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::slice::_&lt;impl [T]&gt;::as_ptr (1 samples, 0.04%)</title><rect x="79.0611%" y="309" width="0.0415%" height="15" fill="rgb(243,180,28)" fg:x="1903" fg:w="1"/><text x="79.3111%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::result::Result&lt;T,E&gt;::unwrap (1 samples, 0.04%)</title><rect x="79.1026%" y="277" width="0.0415%" height="15" fill="rgb(208,167,24)" fg:x="1904" fg:w="1"/><text x="79.3526%" y="287.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::slice::iter::_&lt;impl core::iter::traits::collect::IntoIterator for &amp;[T]&gt;::into_iter (1 samples, 0.04%)</title><rect x="79.1442%" y="277" width="0.0415%" height="15" fill="rgb(245,73,45)" fg:x="1905" fg:w="1"/><text x="79.3942%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (5 samples, 0.21%)</title><rect x="79.6843%" y="261" width="0.2077%" height="15" fill="rgb(237,203,48)" fg:x="1918" fg:w="5"/><text x="79.9343%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for &amp;[T (2 samples, 0.08%)</title><rect x="80.0997%" y="245" width="0.0831%" height="15" fill="rgb(211,197,16)" fg:x="1928" fg:w="2"/><text x="80.3497%" y="255.50"></text></g><g><title> N]&gt;::try_from (2 samples, 0.08%)</title><rect x="80.0997%" y="229" width="0.0831%" height="15" fill="rgb(243,99,51)" fg:x="1928" fg:w="2"/><text x="80.3497%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for &amp;[T (1 samples, 0.04%)</title><rect x="80.3905%" y="213" width="0.0415%" height="15" fill="rgb(215,123,29)" fg:x="1935" fg:w="1"/><text x="80.6405%" y="223.50"></text></g><g><title> N]&gt;::try_from (1 samples, 0.04%)</title><rect x="80.3905%" y="197" width="0.0415%" height="15" fill="rgb(239,186,37)" fg:x="1935" fg:w="1"/><text x="80.6405%" y="207.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (21 samples, 0.87%)</title><rect x="79.8920%" y="261" width="0.8725%" height="15" fill="rgb(252,136,39)" fg:x="1923" fg:w="21"/><text x="80.1420%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T (14 samples, 0.58%)</title><rect x="80.1828%" y="245" width="0.5816%" height="15" fill="rgb(223,213,32)" fg:x="1930" fg:w="14"/><text x="80.4328%" y="255.50"></text></g><g><title> N]&gt;::try_from (14 samples, 0.58%)</title><rect x="80.1828%" y="229" width="0.5816%" height="15" fill="rgb(233,115,5)" fg:x="1930" fg:w="14"/><text x="80.4328%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::result::Result&lt;T,E&gt;::map (8 samples, 0.33%)</title><rect x="80.4321%" y="213" width="0.3324%" height="15" fill="rgb(207,226,44)" fg:x="1936" fg:w="8"/><text x="80.6821%" y="223.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T (1 samples, 0.04%)</title><rect x="80.7229%" y="197" width="0.0415%" height="15" fill="rgb(208,126,0)" fg:x="1943" fg:w="1"/><text x="80.9729%" y="207.50"></text></g><g><title> N]&gt;::try_from::_{{closure}} (1 samples, 0.04%)</title><rect x="80.7229%" y="181" width="0.0415%" height="15" fill="rgb(244,66,21)" fg:x="1943" fg:w="1"/><text x="80.9729%" y="191.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::slice::iter::ChunksExact&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (3 samples, 0.12%)</title><rect x="80.9722%" y="229" width="0.1246%" height="15" fill="rgb(222,97,12)" fg:x="1949" fg:w="3"/><text x="81.2222%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (10 samples, 0.42%)</title><rect x="80.8060%" y="245" width="0.4155%" height="15" fill="rgb(219,213,19)" fg:x="1945" fg:w="10"/><text x="81.0560%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (3 samples, 0.12%)</title><rect x="81.0968%" y="229" width="0.1246%" height="15" fill="rgb(252,169,30)" fg:x="1952" fg:w="3"/><text x="81.3468%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.50%)</title><rect x="80.7644%" y="261" width="0.4985%" height="15" fill="rgb(206,32,51)" fg:x="1944" fg:w="12"/><text x="81.0144%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::slice::iter::ChunksExact&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (1 samples, 0.04%)</title><rect x="81.2214%" y="245" width="0.0415%" height="15" fill="rgb(250,172,42)" fg:x="1955" fg:w="1"/><text x="81.4714%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::const_ptr::_&lt;impl *const T&gt;::is_null (2 samples, 0.08%)</title><rect x="81.2630%" y="245" width="0.0831%" height="15" fill="rgb(209,34,43)" fg:x="1956" fg:w="2"/><text x="81.5130%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.17%)</title><rect x="81.2630%" y="261" width="0.1662%" height="15" fill="rgb(223,11,35)" fg:x="1956" fg:w="4"/><text x="81.5130%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (2 samples, 0.08%)</title><rect x="81.3461%" y="245" width="0.0831%" height="15" fill="rgb(251,219,26)" fg:x="1958" fg:w="2"/><text x="81.5961%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="81.3876%" y="229" width="0.0415%" height="15" fill="rgb(231,119,3)" fg:x="1959" fg:w="1"/><text x="81.6376%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="81.5123%" y="245" width="0.0415%" height="15" fill="rgb(216,97,11)" fg:x="1962" fg:w="1"/><text x="81.7623%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.04%)</title><rect x="81.5538%" y="245" width="0.0415%" height="15" fill="rgb(223,59,9)" fg:x="1963" fg:w="1"/><text x="81.8038%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="81.5538%" y="229" width="0.0415%" height="15" fill="rgb(233,93,31)" fg:x="1963" fg:w="1"/><text x="81.8038%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::zip (7 samples, 0.29%)</title><rect x="81.4292%" y="261" width="0.2908%" height="15" fill="rgb(239,81,33)" fg:x="1960" fg:w="7"/><text x="81.6792%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::adapters::zip::Zip&lt;A,B&gt;::new (3 samples, 0.12%)</title><rect x="81.5953%" y="245" width="0.1246%" height="15" fill="rgb(213,120,34)" fg:x="1964" fg:w="3"/><text x="81.8453%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (3 samples, 0.12%)</title><rect x="81.5953%" y="229" width="0.1246%" height="15" fill="rgb(243,49,53)" fg:x="1964" fg:w="3"/><text x="81.8453%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size (1 samples, 0.04%)</title><rect x="81.6784%" y="213" width="0.0415%" height="15" fill="rgb(247,216,33)" fg:x="1966" fg:w="1"/><text x="81.9284%" y="223.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.04%)</title><rect x="81.6784%" y="197" width="0.0415%" height="15" fill="rgb(226,26,14)" fg:x="1966" fg:w="1"/><text x="81.9284%" y="207.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::num::_&lt;impl u32&gt;::from_be_bytes (7 samples, 0.29%)</title><rect x="81.7200%" y="261" width="0.2908%" height="15" fill="rgb(215,49,53)" fg:x="1967" fg:w="7"/><text x="81.9700%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::const_ptr::_&lt;impl *const T&gt;::is_null (1 samples, 0.04%)</title><rect x="82.0108%" y="261" width="0.0415%" height="15" fill="rgb(245,162,40)" fg:x="1974" fg:w="1"/><text x="82.2608%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::result::Result&lt;T,E&gt;::unwrap (3 samples, 0.12%)</title><rect x="82.0523%" y="261" width="0.1246%" height="15" fill="rgb(229,68,17)" fg:x="1975" fg:w="3"/><text x="82.3023%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::slice::_&lt;impl [T]&gt;::chunks_exact (5 samples, 0.21%)</title><rect x="82.1770%" y="261" width="0.2077%" height="15" fill="rgb(213,182,10)" fg:x="1978" fg:w="5"/><text x="82.4270%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::slice::iter::ChunksExact&lt;T&gt;::new (4 samples, 0.17%)</title><rect x="82.2185%" y="245" width="0.1662%" height="15" fill="rgb(245,125,30)" fg:x="1979" fg:w="4"/><text x="82.4685%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::slice::_&lt;impl [T]&gt;::split_at_unchecked (3 samples, 0.12%)</title><rect x="82.2601%" y="229" width="0.1246%" height="15" fill="rgb(232,202,2)" fg:x="1980" fg:w="3"/><text x="82.5101%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::slice::_&lt;impl [T]&gt;::iter_mut (1 samples, 0.04%)</title><rect x="82.3847%" y="261" width="0.0415%" height="15" fill="rgb(237,140,51)" fg:x="1983" fg:w="1"/><text x="82.6347%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::slice::iter::IterMut&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="82.3847%" y="245" width="0.0415%" height="15" fill="rgb(236,157,25)" fg:x="1983" fg:w="1"/><text x="82.6347%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::slice::iter::_&lt;impl core::iter::traits::collect::IntoIterator for &amp;[T]&gt;::into_iter (1 samples, 0.04%)</title><rect x="82.4263%" y="261" width="0.0415%" height="15" fill="rgb(219,209,0)" fg:x="1984" fg:w="1"/><text x="82.6763%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="82.4263%" y="245" width="0.0415%" height="15" fill="rgb(240,116,54)" fg:x="1984" fg:w="1"/><text x="82.6763%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::const_ptr::_&lt;impl *const T&gt;::is_null (1 samples, 0.04%)</title><rect x="82.4263%" y="229" width="0.0415%" height="15" fill="rgb(216,10,36)" fg:x="1984" fg:w="1"/><text x="82.6763%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (5 samples, 0.21%)</title><rect x="83.6726%" y="245" width="0.2077%" height="15" fill="rgb(222,72,44)" fg:x="2014" fg:w="5"/><text x="83.9226%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::sha256load (1 samples, 0.04%)</title><rect x="84.2127%" y="229" width="0.0415%" height="15" fill="rgb(232,159,9)" fg:x="2027" fg:w="1"/><text x="84.4627%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::sha256load (1 samples, 0.04%)</title><rect x="84.5035%" y="213" width="0.0415%" height="15" fill="rgb(210,39,32)" fg:x="2034" fg:w="1"/><text x="84.7535%" y="223.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::sha256msg1 (32 samples, 1.33%)</title><rect x="84.2543%" y="229" width="1.3295%" height="15" fill="rgb(216,194,45)" fg:x="2028" fg:w="32"/><text x="84.5043%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::sha256msg1::sigma0x4 (25 samples, 1.04%)</title><rect x="84.5451%" y="213" width="1.0386%" height="15" fill="rgb(218,18,35)" fg:x="2035" fg:w="25"/><text x="84.7951%" y="223.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::schedule (54 samples, 2.24%)</title><rect x="83.8803%" y="245" width="2.2435%" height="15" fill="rgb(207,83,51)" fg:x="2019" fg:w="54"/><text x="84.1303%" y="255.50">s..</text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::sha256msg2 (13 samples, 0.54%)</title><rect x="85.5837%" y="229" width="0.5401%" height="15" fill="rgb(225,63,43)" fg:x="2060" fg:w="13"/><text x="85.8337%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::compress (228 samples, 9.47%)</title><rect x="79.1857%" y="277" width="9.4724%" height="15" fill="rgb(207,57,36)" fg:x="1906" fg:w="228"/><text x="79.4357%" y="287.50">speed-0b1675bc..</text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::sha256_digest_block_u32 (149 samples, 6.19%)</title><rect x="82.4678%" y="261" width="6.1903%" height="15" fill="rgb(216,99,33)" fg:x="1985" fg:w="149"/><text x="82.7178%" y="271.50">speed-0b..</text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::sha256_digest_round_x2 (61 samples, 2.53%)</title><rect x="86.1238%" y="245" width="2.5343%" height="15" fill="rgb(225,42,16)" fg:x="2073" fg:w="61"/><text x="86.3738%" y="255.50">sp..</text></g><g><title>speed-0b1675bc7d978a4b`&lt;D as digest::digest::Digest&gt;::update (238 samples, 9.89%)</title><rect x="78.8118%" y="405" width="9.8878%" height="15" fill="rgb(220,201,45)" fg:x="1897" fg:w="238"/><text x="79.0618%" y="415.50">speed-0b1675bc..</text></g><g><title>speed-0b1675bc7d978a4b`&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::Update&gt;::update (238 samples, 9.89%)</title><rect x="78.8118%" y="389" width="9.8878%" height="15" fill="rgb(225,33,4)" fg:x="1897" fg:w="238"/><text x="79.0618%" y="399.50">speed-0b1675bc..</text></g><g><title>speed-0b1675bc7d978a4b`block_buffer::BlockBuffer&lt;BlockSize,Kind&gt;::digest_blocks (238 samples, 9.89%)</title><rect x="78.8118%" y="373" width="9.8878%" height="15" fill="rgb(224,33,50)" fg:x="1897" fg:w="238"/><text x="79.0618%" y="383.50">speed-0b1675bc..</text></g><g><title>speed-0b1675bc7d978a4b`&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::Update&gt;::update::_{{closure}} (233 samples, 9.68%)</title><rect x="79.0195%" y="357" width="9.6801%" height="15" fill="rgb(246,198,51)" fg:x="1902" fg:w="233"/><text x="79.2695%" y="367.50">speed-0b1675bc..</text></g><g><title>speed-0b1675bc7d978a4b`&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::UpdateCore&gt;::update_blocks (233 samples, 9.68%)</title><rect x="79.0195%" y="341" width="9.6801%" height="15" fill="rgb(205,22,4)" fg:x="1902" fg:w="233"/><text x="79.2695%" y="351.50">speed-0b1675bc..</text></g><g><title>speed-0b1675bc7d978a4b`&lt;sha2::core_api::Sha256VarCore as digest::core_api::UpdateCore&gt;::update_blocks (233 samples, 9.68%)</title><rect x="79.0195%" y="325" width="9.6801%" height="15" fill="rgb(206,3,8)" fg:x="1902" fg:w="233"/><text x="79.2695%" y="335.50">speed-0b1675bc..</text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::compress256 (231 samples, 9.60%)</title><rect x="79.1026%" y="309" width="9.5970%" height="15" fill="rgb(251,23,15)" fg:x="1904" fg:w="231"/><text x="79.3526%" y="319.50">speed-0b1675bc..</text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::x86::compress (231 samples, 9.60%)</title><rect x="79.1026%" y="293" width="9.5970%" height="15" fill="rgb(252,88,28)" fg:x="1904" fg:w="231"/><text x="79.3526%" y="303.50">speed-0b1675bc..</text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::x86::shani_cpuid::get (1 samples, 0.04%)</title><rect x="88.6581%" y="277" width="0.0415%" height="15" fill="rgb(212,127,14)" fg:x="2134" fg:w="1"/><text x="88.9081%" y="287.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::x86::shani_cpuid::init_get (1 samples, 0.04%)</title><rect x="88.6581%" y="261" width="0.0415%" height="15" fill="rgb(247,145,37)" fg:x="2134" fg:w="1"/><text x="88.9081%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::fmt::Arguments::as_str (1 samples, 0.04%)</title><rect x="88.6996%" y="389" width="0.0415%" height="15" fill="rgb(209,117,53)" fg:x="2135" fg:w="1"/><text x="88.9496%" y="399.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::fmt::num::_&lt;impl core::fmt::Debug for u64&gt;::fmt (1 samples, 0.04%)</title><rect x="88.7827%" y="341" width="0.0415%" height="15" fill="rgb(212,90,42)" fg:x="2137" fg:w="1"/><text x="89.0327%" y="351.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.08%)</title><rect x="88.8658%" y="325" width="0.0831%" height="15" fill="rgb(218,164,37)" fg:x="2139" fg:w="2"/><text x="89.1158%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (6 samples, 0.25%)</title><rect x="89.0320%" y="245" width="0.2493%" height="15" fill="rgb(246,65,34)" fg:x="2143" fg:w="6"/><text x="89.2820%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.25%)</title><rect x="89.0320%" y="229" width="0.2493%" height="15" fill="rgb(231,100,33)" fg:x="2143" fg:w="6"/><text x="89.2820%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`alloc::raw_vec::finish_grow (6 samples, 0.25%)</title><rect x="89.0320%" y="213" width="0.2493%" height="15" fill="rgb(228,126,14)" fg:x="2143" fg:w="6"/><text x="89.2820%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.25%)</title><rect x="89.0320%" y="197" width="0.2493%" height="15" fill="rgb(215,173,21)" fg:x="2143" fg:w="6"/><text x="89.2820%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.21%)</title><rect x="89.0735%" y="181" width="0.2077%" height="15" fill="rgb(210,6,40)" fg:x="2144" fg:w="5"/><text x="89.3235%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (5 samples, 0.21%)</title><rect x="89.0735%" y="165" width="0.2077%" height="15" fill="rgb(212,48,18)" fg:x="2144" fg:w="5"/><text x="89.3235%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.12%)</title><rect x="89.1566%" y="149" width="0.1246%" height="15" fill="rgb(230,214,11)" fg:x="2146" fg:w="3"/><text x="89.4066%" y="159.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::fmt::Formatter::debug_list (7 samples, 0.29%)</title><rect x="89.0320%" y="261" width="0.2908%" height="15" fill="rgb(254,105,39)" fg:x="2143" fg:w="7"/><text x="89.2820%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.04%)</title><rect x="89.2813%" y="245" width="0.0415%" height="15" fill="rgb(245,158,5)" fg:x="2149" fg:w="1"/><text x="89.5313%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::const_ptr::_&lt;impl *const T&gt;::is_null (13 samples, 0.54%)</title><rect x="89.7383%" y="229" width="0.5401%" height="15" fill="rgb(249,208,11)" fg:x="2160" fg:w="13"/><text x="89.9883%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 1.41%)</title><rect x="89.4474%" y="245" width="1.4125%" height="15" fill="rgb(210,39,28)" fg:x="2153" fg:w="34"/><text x="89.6974%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (14 samples, 0.58%)</title><rect x="90.2784%" y="229" width="0.5816%" height="15" fill="rgb(211,56,53)" fg:x="2173" fg:w="14"/><text x="90.5284%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (7 samples, 0.29%)</title><rect x="90.5692%" y="213" width="0.2908%" height="15" fill="rgb(226,201,30)" fg:x="2180" fg:w="7"/><text x="90.8192%" y="223.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;&amp;T as core::fmt::Debug&gt;::fmt (4 samples, 0.17%)</title><rect x="90.9015%" y="229" width="0.1662%" height="15" fill="rgb(239,101,34)" fg:x="2188" fg:w="4"/><text x="91.1515%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.08%)</title><rect x="91.0677%" y="229" width="0.0831%" height="15" fill="rgb(226,209,5)" fg:x="2192" fg:w="2"/><text x="91.3177%" y="239.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (1 samples, 0.04%)</title><rect x="91.4832%" y="213" width="0.0415%" height="15" fill="rgb(250,105,47)" fg:x="2202" fg:w="1"/><text x="91.7332%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.08%)</title><rect x="91.5247%" y="213" width="0.0831%" height="15" fill="rgb(230,72,3)" fg:x="2203" fg:w="2"/><text x="91.7747%" y="223.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::fmt::Formatter::debug_lower_hex (1 samples, 0.04%)</title><rect x="92.2310%" y="181" width="0.0415%" height="15" fill="rgb(232,218,39)" fg:x="2220" fg:w="1"/><text x="92.4810%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.12%)</title><rect x="92.4387%" y="149" width="0.1246%" height="15" fill="rgb(248,166,6)" fg:x="2225" fg:w="3"/><text x="92.6887%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (2 samples, 0.08%)</title><rect x="92.5634%" y="69" width="0.0831%" height="15" fill="rgb(247,89,20)" fg:x="2228" fg:w="2"/><text x="92.8134%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.21%)</title><rect x="92.6464%" y="69" width="0.2077%" height="15" fill="rgb(248,130,54)" fg:x="2230" fg:w="5"/><text x="92.8964%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (4 samples, 0.17%)</title><rect x="92.6880%" y="53" width="0.1662%" height="15" fill="rgb(234,196,4)" fg:x="2231" fg:w="4"/><text x="92.9380%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (2 samples, 0.08%)</title><rect x="92.7711%" y="37" width="0.0831%" height="15" fill="rgb(250,143,31)" fg:x="2233" fg:w="2"/><text x="93.0211%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (8 samples, 0.33%)</title><rect x="92.5634%" y="101" width="0.3324%" height="15" fill="rgb(211,110,34)" fg:x="2228" fg:w="8"/><text x="92.8134%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (8 samples, 0.33%)</title><rect x="92.5634%" y="85" width="0.3324%" height="15" fill="rgb(215,124,48)" fg:x="2228" fg:w="8"/><text x="92.8134%" y="95.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="92.8542%" y="69" width="0.0415%" height="15" fill="rgb(216,46,13)" fg:x="2235" fg:w="1"/><text x="93.1042%" y="79.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::fmt::num::_&lt;impl core::fmt::Debug for u8&gt;::fmt (29 samples, 1.20%)</title><rect x="91.7740%" y="197" width="1.2048%" height="15" fill="rgb(205,184,25)" fg:x="2209" fg:w="29"/><text x="92.0240%" y="207.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::fmt::num::imp::_&lt;impl core::fmt::Display for u8&gt;::fmt (17 samples, 0.71%)</title><rect x="92.2725%" y="181" width="0.7063%" height="15" fill="rgb(228,1,10)" fg:x="2221" fg:w="17"/><text x="92.5225%" y="191.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (15 samples, 0.62%)</title><rect x="92.3556%" y="165" width="0.6232%" height="15" fill="rgb(213,116,27)" fg:x="2223" fg:w="15"/><text x="92.6056%" y="175.50"></text></g><g><title>speed-0b1675bc7d978a4b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (10 samples, 0.42%)</title><rect x="92.5634%" y="149" width="0.4155%" height="15" fill="rgb(241,95,50)" fg:x="2228" fg:w="10"/><text x="92.8134%" y="159.50"></text></g><g><title>speed-0b1675bc7d978a4b`alloc::raw_vec::finish_grow (10 samples, 0.42%)</title><rect x="92.5634%" y="133" width="0.4155%" height="15" fill="rgb(238,48,32)" fg:x="2228" fg:w="10"/><text x="92.8134%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`realloc (10 samples, 0.42%)</title><rect x="92.5634%" y="117" width="0.4155%" height="15" fill="rgb(235,113,49)" fg:x="2228" fg:w="10"/><text x="92.8134%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (2 samples, 0.08%)</title><rect x="92.8957%" y="101" width="0.0831%" height="15" fill="rgb(205,127,43)" fg:x="2236" fg:w="2"/><text x="93.1457%" y="111.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;&amp;T as core::fmt::Debug&gt;::fmt (35 samples, 1.45%)</title><rect x="91.6078%" y="213" width="1.4541%" height="15" fill="rgb(250,162,2)" fg:x="2205" fg:w="35"/><text x="91.8578%" y="223.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::fmt::num::imp::_&lt;impl core::fmt::Display for u8&gt;::fmt (2 samples, 0.08%)</title><rect x="92.9788%" y="197" width="0.0831%" height="15" fill="rgb(220,13,41)" fg:x="2238" fg:w="2"/><text x="93.2288%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (6 samples, 0.25%)</title><rect x="93.1450%" y="197" width="0.2493%" height="15" fill="rgb(249,221,25)" fg:x="2242" fg:w="6"/><text x="93.3950%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.04%)</title><rect x="93.3943%" y="181" width="0.0415%" height="15" fill="rgb(215,208,19)" fg:x="2248" fg:w="1"/><text x="93.6443%" y="191.50"></text></g><g><title>speed-0b1675bc7d978a4b`__rdl_realloc (1 samples, 0.04%)</title><rect x="93.4358%" y="181" width="0.0415%" height="15" fill="rgb(236,175,2)" fg:x="2249" fg:w="1"/><text x="93.6858%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.04%)</title><rect x="93.4774%" y="133" width="0.0415%" height="15" fill="rgb(241,52,2)" fg:x="2250" fg:w="1"/><text x="93.7274%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (3 samples, 0.12%)</title><rect x="93.5189%" y="133" width="0.1246%" height="15" fill="rgb(248,140,14)" fg:x="2251" fg:w="3"/><text x="93.7689%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.08%)</title><rect x="93.6851%" y="117" width="0.0831%" height="15" fill="rgb(253,22,42)" fg:x="2255" fg:w="2"/><text x="93.9351%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2 samples, 0.08%)</title><rect x="93.6851%" y="101" width="0.0831%" height="15" fill="rgb(234,61,47)" fg:x="2255" fg:w="2"/><text x="93.9351%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.04%)</title><rect x="93.7682%" y="117" width="0.0415%" height="15" fill="rgb(208,226,15)" fg:x="2257" fg:w="1"/><text x="94.0182%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (5 samples, 0.21%)</title><rect x="93.6435%" y="133" width="0.2077%" height="15" fill="rgb(217,221,4)" fg:x="2254" fg:w="5"/><text x="93.8935%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="93.8097%" y="117" width="0.0415%" height="15" fill="rgb(212,174,34)" fg:x="2258" fg:w="1"/><text x="94.0597%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (10 samples, 0.42%)</title><rect x="93.4774%" y="149" width="0.4155%" height="15" fill="rgb(253,83,4)" fg:x="2250" fg:w="10"/><text x="93.7274%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="93.8513%" y="133" width="0.0415%" height="15" fill="rgb(250,195,49)" fg:x="2259" fg:w="1"/><text x="94.1013%" y="143.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (22 samples, 0.91%)</title><rect x="93.0619%" y="213" width="0.9140%" height="15" fill="rgb(241,192,25)" fg:x="2240" fg:w="22"/><text x="93.3119%" y="223.50"></text></g><g><title>speed-0b1675bc7d978a4b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (14 samples, 0.58%)</title><rect x="93.3943%" y="197" width="0.5816%" height="15" fill="rgb(208,124,10)" fg:x="2248" fg:w="14"/><text x="93.6443%" y="207.50"></text></g><g><title>speed-0b1675bc7d978a4b`alloc::raw_vec::finish_grow (12 samples, 0.50%)</title><rect x="93.4774%" y="181" width="0.4985%" height="15" fill="rgb(222,33,0)" fg:x="2250" fg:w="12"/><text x="93.7274%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`realloc (12 samples, 0.50%)</title><rect x="93.4774%" y="165" width="0.4985%" height="15" fill="rgb(234,209,28)" fg:x="2250" fg:w="12"/><text x="93.7274%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (2 samples, 0.08%)</title><rect x="93.8928%" y="149" width="0.0831%" height="15" fill="rgb(224,11,23)" fg:x="2260" fg:w="2"/><text x="94.1428%" y="159.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::array::_&lt;impl core::fmt::Debug for [T (122 samples, 5.07%)</title><rect x="88.9489%" y="325" width="5.0686%" height="15" fill="rgb(232,99,1)" fg:x="2141" fg:w="122"/><text x="89.1989%" y="335.50">speed-..</text></g><g><title> N]&gt;::fmt (122 samples, 5.07%)</title><rect x="88.9489%" y="309" width="5.0686%" height="15" fill="rgb(237,95,45)" fg:x="2141" fg:w="122"/><text x="89.1989%" y="319.50"> N]&gt;::..</text></g><g><title>speed-0b1675bc7d978a4b`&lt;&amp;T as core::fmt::Debug&gt;::fmt (120 samples, 4.99%)</title><rect x="89.0320%" y="293" width="4.9855%" height="15" fill="rgb(208,109,11)" fg:x="2143" fg:w="120"/><text x="89.2820%" y="303.50">speed-..</text></g><g><title>speed-0b1675bc7d978a4b`&lt;[T] as core::fmt::Debug&gt;::fmt (120 samples, 4.99%)</title><rect x="89.0320%" y="277" width="4.9855%" height="15" fill="rgb(216,190,48)" fg:x="2143" fg:w="120"/><text x="89.2820%" y="287.50">speed-..</text></g><g><title>speed-0b1675bc7d978a4b`core::fmt::builders::DebugList::entries (113 samples, 4.69%)</title><rect x="89.3228%" y="261" width="4.6946%" height="15" fill="rgb(251,171,36)" fg:x="2150" fg:w="113"/><text x="89.5728%" y="271.50">speed..</text></g><g><title>speed-0b1675bc7d978a4b`core::fmt::builders::DebugSet::entry (76 samples, 3.16%)</title><rect x="90.8600%" y="245" width="3.1575%" height="15" fill="rgb(230,62,22)" fg:x="2187" fg:w="76"/><text x="91.1100%" y="255.50">spe..</text></g><g><title>speed-0b1675bc7d978a4b`core::fmt::builders::DebugInner::entry (69 samples, 2.87%)</title><rect x="91.1508%" y="229" width="2.8666%" height="15" fill="rgb(225,114,35)" fg:x="2194" fg:w="69"/><text x="91.4008%" y="239.50">sp..</text></g><g><title>speed-0b1675bc7d978a4b`core::fmt::num::_&lt;impl core::fmt::Debug for u8&gt;::fmt (1 samples, 0.04%)</title><rect x="93.9759%" y="213" width="0.0415%" height="15" fill="rgb(215,118,42)" fg:x="2262" fg:w="1"/><text x="94.2259%" y="223.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="94.0590%" y="293" width="0.0415%" height="15" fill="rgb(243,119,21)" fg:x="2264" fg:w="1"/><text x="94.3090%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="94.0590%" y="277" width="0.0415%" height="15" fill="rgb(252,177,53)" fg:x="2264" fg:w="1"/><text x="94.3090%" y="287.50"></text></g><g><title>speed-0b1675bc7d978a4b`alloc::fmt::format (131 samples, 5.44%)</title><rect x="88.6996%" y="405" width="5.4425%" height="15" fill="rgb(237,209,29)" fg:x="2135" fg:w="131"/><text x="88.9496%" y="415.50">speed-0..</text></g><g><title>speed-0b1675bc7d978a4b`core::option::Option&lt;T&gt;::map_or_else (130 samples, 5.40%)</title><rect x="88.7412%" y="389" width="5.4009%" height="15" fill="rgb(212,65,23)" fg:x="2136" fg:w="130"/><text x="88.9912%" y="399.50">speed-0..</text></g><g><title>speed-0b1675bc7d978a4b`alloc::fmt::format::_{{closure}} (130 samples, 5.40%)</title><rect x="88.7412%" y="373" width="5.4009%" height="15" fill="rgb(230,222,46)" fg:x="2136" fg:w="130"/><text x="88.9912%" y="383.50">speed-0..</text></g><g><title>speed-0b1675bc7d978a4b`alloc::fmt::format::format_inner (130 samples, 5.40%)</title><rect x="88.7412%" y="357" width="5.4009%" height="15" fill="rgb(215,135,32)" fg:x="2136" fg:w="130"/><text x="88.9912%" y="367.50">speed-0..</text></g><g><title>speed-0b1675bc7d978a4b`core::fmt::write (128 samples, 5.32%)</title><rect x="88.8243%" y="341" width="5.3178%" height="15" fill="rgb(246,101,22)" fg:x="2138" fg:w="128"/><text x="89.0743%" y="351.50">speed-0..</text></g><g><title>speed-0b1675bc7d978a4b`core::fmt::num::_&lt;impl core::fmt::Debug for u64&gt;::fmt (3 samples, 0.12%)</title><rect x="94.0174%" y="325" width="0.1246%" height="15" fill="rgb(206,107,13)" fg:x="2263" fg:w="3"/><text x="94.2674%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::fmt::num::imp::_&lt;impl core::fmt::Display for u64&gt;::fmt (2 samples, 0.08%)</title><rect x="94.0590%" y="309" width="0.0831%" height="15" fill="rgb(250,100,44)" fg:x="2264" fg:w="2"/><text x="94.3090%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::fmt::Formatter::pad_integral (1 samples, 0.04%)</title><rect x="94.1005%" y="293" width="0.0415%" height="15" fill="rgb(231,147,38)" fg:x="2265" fg:w="1"/><text x="94.3505%" y="303.50"></text></g><g><title>speed-0b1675bc7d978a4b`alloc::string::String::as_bytes (1 samples, 0.04%)</title><rect x="94.1421%" y="405" width="0.0415%" height="15" fill="rgb(229,8,40)" fg:x="2266" fg:w="1"/><text x="94.3921%" y="415.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="94.1421%" y="389" width="0.0415%" height="15" fill="rgb(221,135,30)" fg:x="2266" fg:w="1"/><text x="94.3921%" y="399.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="94.1421%" y="373" width="0.0415%" height="15" fill="rgb(249,193,18)" fg:x="2266" fg:w="1"/><text x="94.3921%" y="383.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::array::_&lt;impl core::default::Default for [T (4 samples, 0.17%)</title><rect x="94.1836%" y="405" width="0.1662%" height="15" fill="rgb(209,133,39)" fg:x="2267" fg:w="4"/><text x="94.4336%" y="415.50"></text></g><g><title> 32]&gt;::default (4 samples, 0.17%)</title><rect x="94.1836%" y="389" width="0.1662%" height="15" fill="rgb(232,100,14)" fg:x="2267" fg:w="4"/><text x="94.4336%" y="399.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::fmt::Arguments::new_v1 (1 samples, 0.04%)</title><rect x="94.3498%" y="405" width="0.0415%" height="15" fill="rgb(224,185,1)" fg:x="2271" fg:w="1"/><text x="94.5998%" y="415.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::option::Option&lt;T&gt;::unwrap (1 samples, 0.04%)</title><rect x="94.3914%" y="405" width="0.0415%" height="15" fill="rgb(223,139,8)" fg:x="2272" fg:w="1"/><text x="94.6414%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.04%)</title><rect x="94.4329%" y="325" width="0.0415%" height="15" fill="rgb(232,213,38)" fg:x="2273" fg:w="1"/><text x="94.6829%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.04%)</title><rect x="94.4329%" y="309" width="0.0415%" height="15" fill="rgb(207,94,22)" fg:x="2273" fg:w="1"/><text x="94.6829%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.08%)</title><rect x="94.4329%" y="341" width="0.0831%" height="15" fill="rgb(219,183,54)" fg:x="2273" fg:w="2"/><text x="94.6829%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (1 samples, 0.04%)</title><rect x="94.4744%" y="325" width="0.0415%" height="15" fill="rgb(216,185,54)" fg:x="2274" fg:w="1"/><text x="94.7244%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`bft_json_crdt::op::Op&lt;T&gt;::hash (1,218 samples, 50.60%)</title><rect x="43.9551%" y="421" width="50.6024%" height="15" fill="rgb(254,217,39)" fg:x="1058" fg:w="1218"/><text x="44.2051%" y="431.50">speed-0b1675bc7d978a4b`bft_json_crdt::op::Op&lt;T&gt;::hash</text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::drop_in_place&lt;alloc::string::String&gt; (3 samples, 0.12%)</title><rect x="94.4329%" y="405" width="0.1246%" height="15" fill="rgb(240,178,23)" fg:x="2273" fg:w="3"/><text x="94.6829%" y="415.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.12%)</title><rect x="94.4329%" y="389" width="0.1246%" height="15" fill="rgb(218,11,47)" fg:x="2273" fg:w="3"/><text x="94.6829%" y="399.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.12%)</title><rect x="94.4329%" y="373" width="0.1246%" height="15" fill="rgb(218,51,51)" fg:x="2273" fg:w="3"/><text x="94.6829%" y="383.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.12%)</title><rect x="94.4329%" y="357" width="0.1246%" height="15" fill="rgb(238,126,27)" fg:x="2273" fg:w="3"/><text x="94.6829%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.04%)</title><rect x="94.5160%" y="341" width="0.0415%" height="15" fill="rgb(249,202,22)" fg:x="2275" fg:w="1"/><text x="94.7660%" y="351.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::alloc::layout::Layout::array::inner (1 samples, 0.04%)</title><rect x="94.5160%" y="325" width="0.0415%" height="15" fill="rgb(254,195,49)" fg:x="2275" fg:w="1"/><text x="94.7660%" y="335.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memcmp (1 samples, 0.04%)</title><rect x="94.5575%" y="373" width="0.0415%" height="15" fill="rgb(208,123,14)" fg:x="2276" fg:w="1"/><text x="94.8075%" y="383.50"></text></g><g><title>speed-0b1675bc7d978a4b`bft_json_crdt::op::Op&lt;T&gt;::valid_hash (1,221 samples, 50.73%)</title><rect x="43.9551%" y="437" width="50.7270%" height="15" fill="rgb(224,200,8)" fg:x="1058" fg:w="1221"/><text x="44.2051%" y="447.50">speed-0b1675bc7d978a4b`bft_json_crdt::op::Op&lt;T&gt;::valid_hash</text></g><g><title>speed-0b1675bc7d978a4b`core::array::equality::_&lt;impl core::cmp::PartialEq&lt;[B (3 samples, 0.12%)</title><rect x="94.5575%" y="421" width="0.1246%" height="15" fill="rgb(217,61,36)" fg:x="2276" fg:w="3"/><text x="94.8075%" y="431.50"></text></g><g><title> N]&gt; for [A (3 samples, 0.12%)</title><rect x="94.5575%" y="405" width="0.1246%" height="15" fill="rgb(206,35,45)" fg:x="2276" fg:w="3"/><text x="94.8075%" y="415.50"></text></g><g><title> N]&gt;::eq (3 samples, 0.12%)</title><rect x="94.5575%" y="389" width="0.1246%" height="15" fill="rgb(217,65,33)" fg:x="2276" fg:w="3"/><text x="94.8075%" y="399.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (2 samples, 0.08%)</title><rect x="94.5991%" y="373" width="0.0831%" height="15" fill="rgb(222,158,48)" fg:x="2277" fg:w="2"/><text x="94.8491%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (1 samples, 0.04%)</title><rect x="94.6406%" y="357" width="0.0415%" height="15" fill="rgb(254,2,54)" fg:x="2278" fg:w="1"/><text x="94.8906%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::cmp::impls::_&lt;impl core::cmp::Ord for u64&gt;::cmp (3 samples, 0.12%)</title><rect x="94.6822%" y="437" width="0.1246%" height="15" fill="rgb(250,143,38)" fg:x="2279" fg:w="3"/><text x="94.9322%" y="447.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::cmp::impls::_&lt;impl core::cmp::Ord for usize&gt;::cmp (3 samples, 0.12%)</title><rect x="94.8068%" y="437" width="0.1246%" height="15" fill="rgb(248,25,0)" fg:x="2282" fg:w="3"/><text x="95.0568%" y="447.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::cmp::max (1 samples, 0.04%)</title><rect x="94.9314%" y="437" width="0.0415%" height="15" fill="rgb(206,152,27)" fg:x="2285" fg:w="1"/><text x="95.1814%" y="447.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::cmp::Ord::max (1 samples, 0.04%)</title><rect x="94.9314%" y="421" width="0.0415%" height="15" fill="rgb(240,77,30)" fg:x="2285" fg:w="1"/><text x="95.1814%" y="431.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::option::Option&lt;T&gt;::unwrap (2 samples, 0.08%)</title><rect x="94.9730%" y="437" width="0.0831%" height="15" fill="rgb(231,5,3)" fg:x="2286" fg:w="2"/><text x="95.2230%" y="447.50"></text></g><g><title>speed-0b1675bc7d978a4b`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.04%)</title><rect x="95.0561%" y="437" width="0.0415%" height="15" fill="rgb(207,226,32)" fg:x="2288" fg:w="1"/><text x="95.3061%" y="447.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (9 samples, 0.37%)</title><rect x="95.2223%" y="373" width="0.3739%" height="15" fill="rgb(222,207,47)" fg:x="2292" fg:w="9"/><text x="95.4723%" y="383.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (9 samples, 0.37%)</title><rect x="95.2223%" y="357" width="0.3739%" height="15" fill="rgb(229,115,45)" fg:x="2292" fg:w="9"/><text x="95.4723%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (9 samples, 0.37%)</title><rect x="95.2223%" y="341" width="0.3739%" height="15" fill="rgb(224,191,6)" fg:x="2292" fg:w="9"/><text x="95.4723%" y="351.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (3 samples, 0.12%)</title><rect x="95.5962%" y="373" width="0.1246%" height="15" fill="rgb(230,227,24)" fg:x="2301" fg:w="3"/><text x="95.8462%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.08%)</title><rect x="95.6377%" y="357" width="0.0831%" height="15" fill="rgb(228,80,19)" fg:x="2302" fg:w="2"/><text x="95.8877%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::hash::Hasher::write_u64 (1 samples, 0.04%)</title><rect x="95.7208%" y="357" width="0.0415%" height="15" fill="rgb(247,229,0)" fg:x="2304" fg:w="1"/><text x="95.9708%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (4 samples, 0.17%)</title><rect x="95.7208%" y="373" width="0.1662%" height="15" fill="rgb(237,194,15)" fg:x="2304" fg:w="4"/><text x="95.9708%" y="383.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::hash::impls::_&lt;impl core::hash::Hash for u64&gt;::hash (3 samples, 0.12%)</title><rect x="95.7624%" y="357" width="0.1246%" height="15" fill="rgb(219,203,20)" fg:x="2305" fg:w="3"/><text x="96.0124%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::hash::Hasher::write_u64 (3 samples, 0.12%)</title><rect x="95.7624%" y="341" width="0.1246%" height="15" fill="rgb(234,128,8)" fg:x="2305" fg:w="3"/><text x="96.0124%" y="351.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.08%)</title><rect x="95.8039%" y="325" width="0.0831%" height="15" fill="rgb(248,202,8)" fg:x="2306" fg:w="2"/><text x="96.0539%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.08%)</title><rect x="95.8039%" y="309" width="0.0831%" height="15" fill="rgb(206,104,37)" fg:x="2306" fg:w="2"/><text x="96.0539%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.04%)</title><rect x="95.8455%" y="293" width="0.0415%" height="15" fill="rgb(223,8,27)" fg:x="2307" fg:w="1"/><text x="96.0955%" y="303.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::hash::BuildHasher::hash_one (18 samples, 0.75%)</title><rect x="95.1807%" y="389" width="0.7478%" height="15" fill="rgb(216,217,28)" fg:x="2291" fg:w="18"/><text x="95.4307%" y="399.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.04%)</title><rect x="95.8870%" y="373" width="0.0415%" height="15" fill="rgb(249,199,1)" fg:x="2308" fg:w="1"/><text x="96.1370%" y="383.50"></text></g><g><title>speed-0b1675bc7d978a4b`hashbrown::map::make_insert_hash (19 samples, 0.79%)</title><rect x="95.1807%" y="405" width="0.7894%" height="15" fill="rgb(240,85,17)" fg:x="2291" fg:w="19"/><text x="95.4307%" y="415.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.04%)</title><rect x="95.9285%" y="389" width="0.0415%" height="15" fill="rgb(206,108,45)" fg:x="2309" fg:w="1"/><text x="96.1785%" y="399.50"></text></g><g><title>speed-0b1675bc7d978a4b`hashbrown::raw::Bucket&lt;T&gt;::as_mut (1 samples, 0.04%)</title><rect x="95.9701%" y="405" width="0.0415%" height="15" fill="rgb(245,210,41)" fg:x="2310" fg:w="1"/><text x="96.2201%" y="415.50"></text></g><g><title>speed-0b1675bc7d978a4b`hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.04%)</title><rect x="96.0116%" y="373" width="0.0415%" height="15" fill="rgb(206,13,37)" fg:x="2311" fg:w="1"/><text x="96.2616%" y="383.50"></text></g><g><title>speed-0b1675bc7d978a4b`hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (3 samples, 0.12%)</title><rect x="96.0532%" y="373" width="0.1246%" height="15" fill="rgb(250,61,18)" fg:x="2312" fg:w="3"/><text x="96.3032%" y="383.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="96.4686%" y="357" width="0.0415%" height="15" fill="rgb(235,172,48)" fg:x="2322" fg:w="1"/><text x="96.7186%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::cmp::Ord::min (1 samples, 0.04%)</title><rect x="96.5102%" y="357" width="0.0415%" height="15" fill="rgb(249,201,17)" fg:x="2323" fg:w="1"/><text x="96.7602%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::cmp::impls::_&lt;impl core::cmp::Ord for usize&gt;::cmp (1 samples, 0.04%)</title><rect x="96.5102%" y="341" width="0.0415%" height="15" fill="rgb(219,208,6)" fg:x="2323" fg:w="1"/><text x="96.7602%" y="351.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::core_arch::x86::sse2::_mm_loadu_si128 (4 samples, 0.17%)</title><rect x="96.5517%" y="357" width="0.1662%" height="15" fill="rgb(248,31,23)" fg:x="2324" fg:w="4"/><text x="96.8017%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`hashbrown::map::equivalent_key::_{{closure}} (3 samples, 0.12%)</title><rect x="96.7595%" y="341" width="0.1246%" height="15" fill="rgb(245,15,42)" fg:x="2329" fg:w="3"/><text x="97.0095%" y="351.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::cmp::impls::_&lt;impl core::cmp::PartialEq for u64&gt;::eq (3 samples, 0.12%)</title><rect x="96.7595%" y="325" width="0.1246%" height="15" fill="rgb(222,217,39)" fg:x="2329" fg:w="3"/><text x="97.0095%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (6 samples, 0.25%)</title><rect x="96.7179%" y="357" width="0.2493%" height="15" fill="rgb(210,219,27)" fg:x="2328" fg:w="6"/><text x="96.9679%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`hashbrown::raw::Bucket&lt;T&gt;::as_ref (2 samples, 0.08%)</title><rect x="96.8841%" y="341" width="0.0831%" height="15" fill="rgb(252,166,36)" fg:x="2332" fg:w="2"/><text x="97.1341%" y="351.50"></text></g><g><title>speed-0b1675bc7d978a4b`hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (25 samples, 1.04%)</title><rect x="96.0116%" y="405" width="1.0386%" height="15" fill="rgb(245,132,34)" fg:x="2311" fg:w="25"/><text x="96.2616%" y="415.50"></text></g><g><title>speed-0b1675bc7d978a4b`hashbrown::raw::RawTable&lt;T,A&gt;::find (25 samples, 1.04%)</title><rect x="96.0116%" y="389" width="1.0386%" height="15" fill="rgb(236,54,3)" fg:x="2311" fg:w="25"/><text x="96.2616%" y="399.50"></text></g><g><title>speed-0b1675bc7d978a4b`hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (21 samples, 0.87%)</title><rect x="96.1778%" y="373" width="0.8725%" height="15" fill="rgb(241,173,43)" fg:x="2315" fg:w="21"/><text x="96.4278%" y="383.50"></text></g><g><title>speed-0b1675bc7d978a4b`hashbrown::raw::sse2::Group::match_byte (2 samples, 0.08%)</title><rect x="96.9672%" y="357" width="0.0831%" height="15" fill="rgb(215,190,9)" fg:x="2334" fg:w="2"/><text x="97.2172%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::core_arch::x86::sse2::_mm_set1_epi8 (2 samples, 0.08%)</title><rect x="96.9672%" y="341" width="0.0831%" height="15" fill="rgb(242,101,16)" fg:x="2334" fg:w="2"/><text x="97.2172%" y="351.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.04%)</title><rect x="97.0087%" y="325" width="0.0415%" height="15" fill="rgb(223,190,21)" fg:x="2335" fg:w="1"/><text x="97.2587%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (2 samples, 0.08%)</title><rect x="97.0503%" y="389" width="0.0831%" height="15" fill="rgb(215,228,25)" fg:x="2336" fg:w="2"/><text x="97.3003%" y="399.50"></text></g><g><title>speed-0b1675bc7d978a4b`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.08%)</title><rect x="97.0503%" y="373" width="0.0831%" height="15" fill="rgb(225,36,22)" fg:x="2336" fg:w="2"/><text x="97.3003%" y="383.50"></text></g><g><title>speed-0b1675bc7d978a4b`hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (1 samples, 0.04%)</title><rect x="97.0918%" y="357" width="0.0415%" height="15" fill="rgb(251,106,46)" fg:x="2337" fg:w="1"/><text x="97.3418%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (50 samples, 2.08%)</title><rect x="95.0976%" y="437" width="2.0773%" height="15" fill="rgb(208,90,1)" fg:x="2289" fg:w="50"/><text x="95.3476%" y="447.50">s..</text></g><g><title>speed-0b1675bc7d978a4b`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (50 samples, 2.08%)</title><rect x="95.0976%" y="421" width="2.0773%" height="15" fill="rgb(243,10,4)" fg:x="2289" fg:w="50"/><text x="95.3476%" y="431.50">s..</text></g><g><title>speed-0b1675bc7d978a4b`hashbrown::raw::RawTable&lt;T,A&gt;::insert (3 samples, 0.12%)</title><rect x="97.0503%" y="405" width="0.1246%" height="15" fill="rgb(212,137,27)" fg:x="2336" fg:w="3"/><text x="97.3003%" y="415.50"></text></g><g><title>speed-0b1675bc7d978a4b`hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.04%)</title><rect x="97.1334%" y="389" width="0.0415%" height="15" fill="rgb(231,220,49)" fg:x="2338" fg:w="1"/><text x="97.3834%" y="399.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.04%)</title><rect x="97.1334%" y="373" width="0.0415%" height="15" fill="rgb(237,96,20)" fg:x="2338" fg:w="1"/><text x="97.3834%" y="383.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.08%)</title><rect x="97.2165%" y="325" width="0.0831%" height="15" fill="rgb(239,229,30)" fg:x="2340" fg:w="2"/><text x="97.4665%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.12%)</title><rect x="97.2165%" y="357" width="0.1246%" height="15" fill="rgb(219,65,33)" fg:x="2340" fg:w="3"/><text x="97.4665%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.12%)</title><rect x="97.2165%" y="341" width="0.1246%" height="15" fill="rgb(243,134,7)" fg:x="2340" fg:w="3"/><text x="97.4665%" y="351.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.04%)</title><rect x="97.2995%" y="325" width="0.0415%" height="15" fill="rgb(216,177,54)" fg:x="2342" fg:w="1"/><text x="97.5495%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.04%)</title><rect x="97.3411%" y="357" width="0.0415%" height="15" fill="rgb(211,160,20)" fg:x="2343" fg:w="1"/><text x="97.5911%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="97.3411%" y="341" width="0.0415%" height="15" fill="rgb(239,85,39)" fg:x="2343" fg:w="1"/><text x="97.5911%" y="351.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::hash::Hasher::write_length_prefix (3 samples, 0.12%)</title><rect x="97.3826%" y="309" width="0.1246%" height="15" fill="rgb(232,125,22)" fg:x="2344" fg:w="3"/><text x="97.6326%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::hash::Hasher::write_usize (3 samples, 0.12%)</title><rect x="97.3826%" y="293" width="0.1246%" height="15" fill="rgb(244,57,34)" fg:x="2344" fg:w="3"/><text x="97.6326%" y="303.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.12%)</title><rect x="97.3826%" y="277" width="0.1246%" height="15" fill="rgb(214,203,32)" fg:x="2344" fg:w="3"/><text x="97.6326%" y="287.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.12%)</title><rect x="97.3826%" y="261" width="0.1246%" height="15" fill="rgb(207,58,43)" fg:x="2344" fg:w="3"/><text x="97.6326%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::hash::BuildHasher::hash_one (13 samples, 0.54%)</title><rect x="97.1749%" y="373" width="0.5401%" height="15" fill="rgb(215,193,15)" fg:x="2339" fg:w="13"/><text x="97.4249%" y="383.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (8 samples, 0.33%)</title><rect x="97.3826%" y="357" width="0.3324%" height="15" fill="rgb(232,15,44)" fg:x="2344" fg:w="8"/><text x="97.6326%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::array::_&lt;impl core::hash::Hash for [T (8 samples, 0.33%)</title><rect x="97.3826%" y="341" width="0.3324%" height="15" fill="rgb(212,3,48)" fg:x="2344" fg:w="8"/><text x="97.6326%" y="351.50"></text></g><g><title> N]&gt;::hash (8 samples, 0.33%)</title><rect x="97.3826%" y="325" width="0.3324%" height="15" fill="rgb(218,128,7)" fg:x="2344" fg:w="8"/><text x="97.6326%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash_slice (5 samples, 0.21%)</title><rect x="97.5073%" y="309" width="0.2077%" height="15" fill="rgb(226,216,39)" fg:x="2347" fg:w="5"/><text x="97.7573%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.17%)</title><rect x="97.5488%" y="293" width="0.1662%" height="15" fill="rgb(243,47,51)" fg:x="2348" fg:w="4"/><text x="97.7988%" y="303.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.17%)</title><rect x="97.5488%" y="277" width="0.1662%" height="15" fill="rgb(241,183,40)" fg:x="2348" fg:w="4"/><text x="97.7988%" y="287.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.12%)</title><rect x="97.5904%" y="261" width="0.1246%" height="15" fill="rgb(231,217,32)" fg:x="2349" fg:w="3"/><text x="97.8404%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`hashbrown::map::make_hash (14 samples, 0.58%)</title><rect x="97.1749%" y="389" width="0.5816%" height="15" fill="rgb(229,61,38)" fg:x="2339" fg:w="14"/><text x="97.4249%" y="399.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.04%)</title><rect x="97.7150%" y="373" width="0.0415%" height="15" fill="rgb(225,210,5)" fg:x="2352" fg:w="1"/><text x="97.9650%" y="383.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="97.7981%" y="341" width="0.0415%" height="15" fill="rgb(231,79,45)" fg:x="2354" fg:w="1"/><text x="98.0481%" y="351.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.04%)</title><rect x="97.8396%" y="341" width="0.0415%" height="15" fill="rgb(224,100,7)" fg:x="2355" fg:w="1"/><text x="98.0896%" y="351.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.04%)</title><rect x="97.8812%" y="341" width="0.0415%" height="15" fill="rgb(241,198,18)" fg:x="2356" fg:w="1"/><text x="98.1312%" y="351.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::core_arch::x86::sse2::_mm_cmpeq_epi8 (2 samples, 0.08%)</title><rect x="97.9227%" y="325" width="0.0831%" height="15" fill="rgb(252,97,53)" fg:x="2357" fg:w="2"/><text x="98.1727%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.08%)</title><rect x="98.0058%" y="325" width="0.0831%" height="15" fill="rgb(220,88,7)" fg:x="2359" fg:w="2"/><text x="98.2558%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`bft_json_crdt::list_crdt::ListCRDT&lt;T&gt;::apply (2,237 samples, 92.94%)</title><rect x="5.3594%" y="453" width="92.9373%" height="15" fill="rgb(213,176,14)" fg:x="129" fg:w="2237"/><text x="5.6094%" y="463.50">speed-0b1675bc7d978a4b`bft_json_crdt::list_crdt::ListCRDT&lt;T&gt;::apply</text></g><g><title>speed-0b1675bc7d978a4b`std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (27 samples, 1.12%)</title><rect x="97.1749%" y="437" width="1.1217%" height="15" fill="rgb(246,73,7)" fg:x="2339" fg:w="27"/><text x="97.4249%" y="447.50"></text></g><g><title>speed-0b1675bc7d978a4b`hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (27 samples, 1.12%)</title><rect x="97.1749%" y="421" width="1.1217%" height="15" fill="rgb(245,64,36)" fg:x="2339" fg:w="27"/><text x="97.4249%" y="431.50"></text></g><g><title>speed-0b1675bc7d978a4b`hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (27 samples, 1.12%)</title><rect x="97.1749%" y="405" width="1.1217%" height="15" fill="rgb(245,80,10)" fg:x="2339" fg:w="27"/><text x="97.4249%" y="415.50"></text></g><g><title>speed-0b1675bc7d978a4b`hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (13 samples, 0.54%)</title><rect x="97.7565%" y="389" width="0.5401%" height="15" fill="rgb(232,107,50)" fg:x="2353" fg:w="13"/><text x="98.0065%" y="399.50"></text></g><g><title>speed-0b1675bc7d978a4b`hashbrown::raw::RawTable&lt;T,A&gt;::find (12 samples, 0.50%)</title><rect x="97.7981%" y="373" width="0.4985%" height="15" fill="rgb(253,3,0)" fg:x="2354" fg:w="12"/><text x="98.0481%" y="383.50"></text></g><g><title>speed-0b1675bc7d978a4b`hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (12 samples, 0.50%)</title><rect x="97.7981%" y="357" width="0.4985%" height="15" fill="rgb(212,99,53)" fg:x="2354" fg:w="12"/><text x="98.0481%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`hashbrown::raw::sse2::Group::match_byte (9 samples, 0.37%)</title><rect x="97.9227%" y="341" width="0.3739%" height="15" fill="rgb(249,111,54)" fg:x="2357" fg:w="9"/><text x="98.1727%" y="351.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::core_arch::x86::sse2::_mm_set1_epi8 (5 samples, 0.21%)</title><rect x="98.0889%" y="325" width="0.2077%" height="15" fill="rgb(249,55,30)" fg:x="2361" fg:w="5"/><text x="98.3389%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::core_arch::x86::sse2::_mm_set_epi8 (5 samples, 0.21%)</title><rect x="98.0889%" y="309" width="0.2077%" height="15" fill="rgb(237,47,42)" fg:x="2361" fg:w="5"/><text x="98.3389%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::_{{closure}} (1 samples, 0.04%)</title><rect x="98.2966%" y="261" width="0.0415%" height="15" fill="rgb(211,20,18)" fg:x="2366" fg:w="1"/><text x="98.5466%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1 samples, 0.04%)</title><rect x="98.2966%" y="245" width="0.0415%" height="15" fill="rgb(231,203,46)" fg:x="2366" fg:w="1"/><text x="98.5466%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::_{{closure}} (1 samples, 0.04%)</title><rect x="98.2966%" y="229" width="0.0415%" height="15" fill="rgb(237,142,3)" fg:x="2366" fg:w="1"/><text x="98.5466%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (3 samples, 0.12%)</title><rect x="98.2966%" y="325" width="0.1246%" height="15" fill="rgb(241,107,1)" fg:x="2366" fg:w="3"/><text x="98.5466%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::for_each (3 samples, 0.12%)</title><rect x="98.2966%" y="309" width="0.1246%" height="15" fill="rgb(229,83,13)" fg:x="2366" fg:w="3"/><text x="98.5466%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.12%)</title><rect x="98.2966%" y="293" width="0.1246%" height="15" fill="rgb(241,91,40)" fg:x="2366" fg:w="3"/><text x="98.5466%" y="303.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::fold (3 samples, 0.12%)</title><rect x="98.2966%" y="277" width="0.1246%" height="15" fill="rgb(225,3,45)" fg:x="2366" fg:w="3"/><text x="98.5466%" y="287.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.08%)</title><rect x="98.3382%" y="261" width="0.0831%" height="15" fill="rgb(244,223,14)" fg:x="2367" fg:w="2"/><text x="98.5882%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (2 samples, 0.08%)</title><rect x="98.3382%" y="245" width="0.0831%" height="15" fill="rgb(224,124,37)" fg:x="2367" fg:w="2"/><text x="98.5882%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="98.3797%" y="229" width="0.0415%" height="15" fill="rgb(251,171,30)" fg:x="2368" fg:w="1"/><text x="98.6297%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.04%)</title><rect x="98.4213%" y="293" width="0.0415%" height="15" fill="rgb(236,46,54)" fg:x="2369" fg:w="1"/><text x="98.6713%" y="303.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::for_each (1 samples, 0.04%)</title><rect x="98.4213%" y="277" width="0.0415%" height="15" fill="rgb(245,213,5)" fg:x="2369" fg:w="1"/><text x="98.6713%" y="287.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.04%)</title><rect x="98.4213%" y="261" width="0.0415%" height="15" fill="rgb(230,144,27)" fg:x="2369" fg:w="1"/><text x="98.6713%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::fold (1 samples, 0.04%)</title><rect x="98.4213%" y="245" width="0.0415%" height="15" fill="rgb(220,86,6)" fg:x="2369" fg:w="1"/><text x="98.6713%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="98.4213%" y="229" width="0.0415%" height="15" fill="rgb(240,20,13)" fg:x="2369" fg:w="1"/><text x="98.6713%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="98.4213%" y="213" width="0.0415%" height="15" fill="rgb(217,89,34)" fg:x="2369" fg:w="1"/><text x="98.6713%" y="223.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="98.4213%" y="197" width="0.0415%" height="15" fill="rgb(229,13,5)" fg:x="2369" fg:w="1"/><text x="98.6713%" y="207.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::result::Result&lt;T,E&gt;::unwrap (1 samples, 0.04%)</title><rect x="98.4628%" y="229" width="0.0415%" height="15" fill="rgb(244,67,35)" fg:x="2370" fg:w="1"/><text x="98.7128%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;D as digest::digest::Digest&gt;::finalize (6 samples, 0.25%)</title><rect x="98.2966%" y="389" width="0.2493%" height="15" fill="rgb(221,40,2)" fg:x="2366" fg:w="6"/><text x="98.5466%" y="399.50"></text></g><g><title>speed-0b1675bc7d978a4b`digest::FixedOutput::finalize_fixed (6 samples, 0.25%)</title><rect x="98.2966%" y="373" width="0.2493%" height="15" fill="rgb(237,157,21)" fg:x="2366" fg:w="6"/><text x="98.5466%" y="383.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::FixedOutput&gt;::finalize_into (6 samples, 0.25%)</title><rect x="98.2966%" y="357" width="0.2493%" height="15" fill="rgb(222,94,11)" fg:x="2366" fg:w="6"/><text x="98.5466%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (6 samples, 0.25%)</title><rect x="98.2966%" y="341" width="0.2493%" height="15" fill="rgb(249,113,6)" fg:x="2366" fg:w="6"/><text x="98.5466%" y="351.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;sha2::core_api::Sha256VarCore as digest::core_api::VariableOutputCore&gt;::finalize_variable_core (3 samples, 0.12%)</title><rect x="98.4213%" y="325" width="0.1246%" height="15" fill="rgb(238,137,36)" fg:x="2369" fg:w="3"/><text x="98.6713%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`block_buffer::BlockBuffer&lt;BlockSize,block_buffer::Eager&gt;::len64_padding_be (3 samples, 0.12%)</title><rect x="98.4213%" y="309" width="0.1246%" height="15" fill="rgb(210,102,26)" fg:x="2369" fg:w="3"/><text x="98.6713%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;sha2::core_api::Sha256VarCore as digest::core_api::VariableOutputCore&gt;::finalize_variable_core::_{{closure}} (2 samples, 0.08%)</title><rect x="98.4628%" y="293" width="0.0831%" height="15" fill="rgb(218,30,30)" fg:x="2370" fg:w="2"/><text x="98.7128%" y="303.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::compress256 (2 samples, 0.08%)</title><rect x="98.4628%" y="277" width="0.0831%" height="15" fill="rgb(214,67,26)" fg:x="2370" fg:w="2"/><text x="98.7128%" y="287.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::x86::compress (2 samples, 0.08%)</title><rect x="98.4628%" y="261" width="0.0831%" height="15" fill="rgb(251,9,53)" fg:x="2370" fg:w="2"/><text x="98.7128%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::compress (2 samples, 0.08%)</title><rect x="98.4628%" y="245" width="0.0831%" height="15" fill="rgb(228,204,25)" fg:x="2370" fg:w="2"/><text x="98.7128%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::sha256_digest_block_u32 (1 samples, 0.04%)</title><rect x="98.5044%" y="229" width="0.0415%" height="15" fill="rgb(207,153,8)" fg:x="2371" fg:w="1"/><text x="98.7544%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::sha256_digest_round_x2 (1 samples, 0.04%)</title><rect x="98.5044%" y="213" width="0.0415%" height="15" fill="rgb(242,9,16)" fg:x="2371" fg:w="1"/><text x="98.7544%" y="223.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;D as digest::digest::Digest&gt;::update (1 samples, 0.04%)</title><rect x="98.5459%" y="389" width="0.0415%" height="15" fill="rgb(217,211,10)" fg:x="2372" fg:w="1"/><text x="98.7959%" y="399.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::Update&gt;::update (1 samples, 0.04%)</title><rect x="98.5459%" y="373" width="0.0415%" height="15" fill="rgb(219,228,52)" fg:x="2372" fg:w="1"/><text x="98.7959%" y="383.50"></text></g><g><title>speed-0b1675bc7d978a4b`block_buffer::BlockBuffer&lt;BlockSize,Kind&gt;::digest_blocks (1 samples, 0.04%)</title><rect x="98.5459%" y="357" width="0.0415%" height="15" fill="rgb(231,92,29)" fg:x="2372" fg:w="1"/><text x="98.7959%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::Update&gt;::update::_{{closure}} (1 samples, 0.04%)</title><rect x="98.5459%" y="341" width="0.0415%" height="15" fill="rgb(232,8,23)" fg:x="2372" fg:w="1"/><text x="98.7959%" y="351.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::UpdateCore&gt;::update_blocks (1 samples, 0.04%)</title><rect x="98.5459%" y="325" width="0.0415%" height="15" fill="rgb(216,211,34)" fg:x="2372" fg:w="1"/><text x="98.7959%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;sha2::core_api::Sha256VarCore as digest::core_api::UpdateCore&gt;::update_blocks (1 samples, 0.04%)</title><rect x="98.5459%" y="309" width="0.0415%" height="15" fill="rgb(236,151,0)" fg:x="2372" fg:w="1"/><text x="98.7959%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::compress256 (1 samples, 0.04%)</title><rect x="98.5459%" y="293" width="0.0415%" height="15" fill="rgb(209,168,3)" fg:x="2372" fg:w="1"/><text x="98.7959%" y="303.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::x86::compress (1 samples, 0.04%)</title><rect x="98.5459%" y="277" width="0.0415%" height="15" fill="rgb(208,129,28)" fg:x="2372" fg:w="1"/><text x="98.7959%" y="287.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::compress (1 samples, 0.04%)</title><rect x="98.5459%" y="261" width="0.0415%" height="15" fill="rgb(229,78,22)" fg:x="2372" fg:w="1"/><text x="98.7959%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="98.5459%" y="245" width="0.0415%" height="15" fill="rgb(228,187,13)" fg:x="2372" fg:w="1"/><text x="98.7959%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.04%)</title><rect x="98.5459%" y="229" width="0.0415%" height="15" fill="rgb(240,119,24)" fg:x="2372" fg:w="1"/><text x="98.7959%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (1 samples, 0.04%)</title><rect x="98.5459%" y="213" width="0.0415%" height="15" fill="rgb(209,194,42)" fg:x="2372" fg:w="1"/><text x="98.7959%" y="223.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.04%)</title><rect x="98.5875%" y="197" width="0.0415%" height="15" fill="rgb(247,200,46)" fg:x="2373" fg:w="1"/><text x="98.8375%" y="207.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::fmt::num::_&lt;impl core::fmt::Debug for u8&gt;::fmt (1 samples, 0.04%)</title><rect x="98.5875%" y="181" width="0.0415%" height="15" fill="rgb(218,76,16)" fg:x="2373" fg:w="1"/><text x="98.8375%" y="191.50"></text></g><g><title>speed-0b1675bc7d978a4b`bft_json_crdt::list_crdt::ListCRDT&lt;T&gt;::apply (9 samples, 0.37%)</title><rect x="98.2966%" y="437" width="0.3739%" height="15" fill="rgb(225,21,48)" fg:x="2366" fg:w="9"/><text x="98.5466%" y="447.50"></text></g><g><title>speed-0b1675bc7d978a4b`bft_json_crdt::op::Op&lt;T&gt;::valid_hash (9 samples, 0.37%)</title><rect x="98.2966%" y="421" width="0.3739%" height="15" fill="rgb(239,223,50)" fg:x="2366" fg:w="9"/><text x="98.5466%" y="431.50"></text></g><g><title>speed-0b1675bc7d978a4b`bft_json_crdt::op::Op&lt;T&gt;::hash (9 samples, 0.37%)</title><rect x="98.2966%" y="405" width="0.3739%" height="15" fill="rgb(244,45,21)" fg:x="2366" fg:w="9"/><text x="98.5466%" y="415.50"></text></g><g><title>speed-0b1675bc7d978a4b`alloc::fmt::format (2 samples, 0.08%)</title><rect x="98.5875%" y="389" width="0.0831%" height="15" fill="rgb(232,33,43)" fg:x="2373" fg:w="2"/><text x="98.8375%" y="399.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::option::Option&lt;T&gt;::map_or_else (2 samples, 0.08%)</title><rect x="98.5875%" y="373" width="0.0831%" height="15" fill="rgb(209,8,3)" fg:x="2373" fg:w="2"/><text x="98.8375%" y="383.50"></text></g><g><title>speed-0b1675bc7d978a4b`alloc::fmt::format::_{{closure}} (2 samples, 0.08%)</title><rect x="98.5875%" y="357" width="0.0831%" height="15" fill="rgb(214,25,53)" fg:x="2373" fg:w="2"/><text x="98.8375%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`alloc::fmt::format::format_inner (2 samples, 0.08%)</title><rect x="98.5875%" y="341" width="0.0831%" height="15" fill="rgb(254,186,54)" fg:x="2373" fg:w="2"/><text x="98.8375%" y="351.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::fmt::write (2 samples, 0.08%)</title><rect x="98.5875%" y="325" width="0.0831%" height="15" fill="rgb(208,174,49)" fg:x="2373" fg:w="2"/><text x="98.8375%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::array::_&lt;impl core::fmt::Debug for [T (2 samples, 0.08%)</title><rect x="98.5875%" y="309" width="0.0831%" height="15" fill="rgb(233,191,51)" fg:x="2373" fg:w="2"/><text x="98.8375%" y="319.50"></text></g><g><title> N]&gt;::fmt (2 samples, 0.08%)</title><rect x="98.5875%" y="293" width="0.0831%" height="15" fill="rgb(222,134,10)" fg:x="2373" fg:w="2"/><text x="98.8375%" y="303.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;&amp;T as core::fmt::Debug&gt;::fmt (2 samples, 0.08%)</title><rect x="98.5875%" y="277" width="0.0831%" height="15" fill="rgb(230,226,20)" fg:x="2373" fg:w="2"/><text x="98.8375%" y="287.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;[T] as core::fmt::Debug&gt;::fmt (2 samples, 0.08%)</title><rect x="98.5875%" y="261" width="0.0831%" height="15" fill="rgb(251,111,25)" fg:x="2373" fg:w="2"/><text x="98.8375%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::fmt::builders::DebugList::entries (2 samples, 0.08%)</title><rect x="98.5875%" y="245" width="0.0831%" height="15" fill="rgb(224,40,46)" fg:x="2373" fg:w="2"/><text x="98.8375%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::fmt::builders::DebugSet::entry (2 samples, 0.08%)</title><rect x="98.5875%" y="229" width="0.0831%" height="15" fill="rgb(236,108,47)" fg:x="2373" fg:w="2"/><text x="98.8375%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::fmt::builders::DebugInner::entry (2 samples, 0.08%)</title><rect x="98.5875%" y="213" width="0.0831%" height="15" fill="rgb(234,93,0)" fg:x="2373" fg:w="2"/><text x="98.8375%" y="223.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="98.6290%" y="197" width="0.0415%" height="15" fill="rgb(224,213,32)" fg:x="2374" fg:w="1"/><text x="98.8790%" y="207.50"></text></g><g><title>speed-0b1675bc7d978a4b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.04%)</title><rect x="98.6290%" y="181" width="0.0415%" height="15" fill="rgb(251,11,48)" fg:x="2374" fg:w="1"/><text x="98.8790%" y="191.50"></text></g><g><title>speed-0b1675bc7d978a4b`alloc::raw_vec::finish_grow (1 samples, 0.04%)</title><rect x="98.6290%" y="165" width="0.0415%" height="15" fill="rgb(236,173,5)" fg:x="2374" fg:w="1"/><text x="98.8790%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.04%)</title><rect x="98.6290%" y="149" width="0.0415%" height="15" fill="rgb(230,95,12)" fg:x="2374" fg:w="1"/><text x="98.8790%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.04%)</title><rect x="98.6290%" y="133" width="0.0415%" height="15" fill="rgb(232,209,1)" fg:x="2374" fg:w="1"/><text x="98.8790%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.04%)</title><rect x="98.6290%" y="117" width="0.0415%" height="15" fill="rgb(232,6,1)" fg:x="2374" fg:w="1"/><text x="98.8790%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.04%)</title><rect x="98.6290%" y="101" width="0.0415%" height="15" fill="rgb(210,224,50)" fg:x="2374" fg:w="1"/><text x="98.8790%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.04%)</title><rect x="98.6290%" y="85" width="0.0415%" height="15" fill="rgb(228,127,35)" fg:x="2374" fg:w="1"/><text x="98.8790%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.04%)</title><rect x="98.6290%" y="69" width="0.0415%" height="15" fill="rgb(245,102,45)" fg:x="2374" fg:w="1"/><text x="98.8790%" y="79.50"></text></g><g><title>speed-0b1675bc7d978a4b`bft_json_crdt::list_crdt::ListCRDT&lt;T&gt;::our_seq (1 samples, 0.04%)</title><rect x="98.6705%" y="437" width="0.0415%" height="15" fill="rgb(214,1,49)" fg:x="2375" fg:w="1"/><text x="98.9205%" y="447.50"></text></g><g><title>speed-0b1675bc7d978a4b`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.04%)</title><rect x="98.6705%" y="421" width="0.0415%" height="15" fill="rgb(226,163,40)" fg:x="2375" fg:w="1"/><text x="98.9205%" y="431.50"></text></g><g><title>speed-0b1675bc7d978a4b`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.04%)</title><rect x="98.6705%" y="405" width="0.0415%" height="15" fill="rgb(239,212,28)" fg:x="2375" fg:w="1"/><text x="98.9205%" y="415.50"></text></g><g><title>speed-0b1675bc7d978a4b`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.04%)</title><rect x="98.6705%" y="389" width="0.0415%" height="15" fill="rgb(220,20,13)" fg:x="2375" fg:w="1"/><text x="98.9205%" y="399.50"></text></g><g><title>speed-0b1675bc7d978a4b`hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.04%)</title><rect x="98.6705%" y="373" width="0.0415%" height="15" fill="rgb(210,164,35)" fg:x="2375" fg:w="1"/><text x="98.9205%" y="383.50"></text></g><g><title>speed-0b1675bc7d978a4b`hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.04%)</title><rect x="98.6705%" y="357" width="0.0415%" height="15" fill="rgb(248,109,41)" fg:x="2375" fg:w="1"/><text x="98.9205%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.04%)</title><rect x="98.6705%" y="341" width="0.0415%" height="15" fill="rgb(238,23,50)" fg:x="2375" fg:w="1"/><text x="98.9205%" y="351.50"></text></g><g><title>speed-0b1675bc7d978a4b`hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (1 samples, 0.04%)</title><rect x="98.6705%" y="325" width="0.0415%" height="15" fill="rgb(211,48,49)" fg:x="2375" fg:w="1"/><text x="98.9205%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`hashbrown::map::equivalent_key::_{{closure}} (1 samples, 0.04%)</title><rect x="98.6705%" y="309" width="0.0415%" height="15" fill="rgb(223,36,21)" fg:x="2375" fg:w="1"/><text x="98.9205%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.04%)</title><rect x="98.7121%" y="341" width="0.0415%" height="15" fill="rgb(207,123,46)" fg:x="2376" fg:w="1"/><text x="98.9621%" y="351.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::for_each (1 samples, 0.04%)</title><rect x="98.7121%" y="325" width="0.0415%" height="15" fill="rgb(240,218,32)" fg:x="2376" fg:w="1"/><text x="98.9621%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.04%)</title><rect x="98.7121%" y="309" width="0.0415%" height="15" fill="rgb(252,5,43)" fg:x="2376" fg:w="1"/><text x="98.9621%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::fold (1 samples, 0.04%)</title><rect x="98.7121%" y="293" width="0.0415%" height="15" fill="rgb(252,84,19)" fg:x="2376" fg:w="1"/><text x="98.9621%" y="303.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::_{{closure}} (1 samples, 0.04%)</title><rect x="98.7121%" y="277" width="0.0415%" height="15" fill="rgb(243,152,39)" fg:x="2376" fg:w="1"/><text x="98.9621%" y="287.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1 samples, 0.04%)</title><rect x="98.7121%" y="261" width="0.0415%" height="15" fill="rgb(234,160,15)" fg:x="2376" fg:w="1"/><text x="98.9621%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::_{{closure}} (1 samples, 0.04%)</title><rect x="98.7121%" y="245" width="0.0415%" height="15" fill="rgb(237,34,20)" fg:x="2376" fg:w="1"/><text x="98.9621%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::_{{closure}} (1 samples, 0.04%)</title><rect x="98.7536%" y="245" width="0.0415%" height="15" fill="rgb(229,97,13)" fg:x="2377" fg:w="1"/><text x="99.0036%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (2 samples, 0.08%)</title><rect x="98.7536%" y="309" width="0.0831%" height="15" fill="rgb(234,71,50)" fg:x="2377" fg:w="2"/><text x="99.0036%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::for_each (2 samples, 0.08%)</title><rect x="98.7536%" y="293" width="0.0831%" height="15" fill="rgb(253,155,4)" fg:x="2377" fg:w="2"/><text x="99.0036%" y="303.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.08%)</title><rect x="98.7536%" y="277" width="0.0831%" height="15" fill="rgb(222,185,37)" fg:x="2377" fg:w="2"/><text x="99.0036%" y="287.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::fold (2 samples, 0.08%)</title><rect x="98.7536%" y="261" width="0.0831%" height="15" fill="rgb(251,177,13)" fg:x="2377" fg:w="2"/><text x="99.0036%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="98.7952%" y="245" width="0.0415%" height="15" fill="rgb(250,179,40)" fg:x="2378" fg:w="1"/><text x="99.0452%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="98.7952%" y="229" width="0.0415%" height="15" fill="rgb(242,44,2)" fg:x="2378" fg:w="1"/><text x="99.0452%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="98.7952%" y="213" width="0.0415%" height="15" fill="rgb(216,177,13)" fg:x="2378" fg:w="1"/><text x="99.0452%" y="223.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="98.8367%" y="245" width="0.0415%" height="15" fill="rgb(216,106,43)" fg:x="2379" fg:w="1"/><text x="99.0867%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="98.8367%" y="229" width="0.0415%" height="15" fill="rgb(216,183,2)" fg:x="2379" fg:w="1"/><text x="99.0867%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="98.8367%" y="213" width="0.0415%" height="15" fill="rgb(249,75,3)" fg:x="2379" fg:w="1"/><text x="99.0867%" y="223.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::slice::_&lt;impl [T]&gt;::iter_mut (1 samples, 0.04%)</title><rect x="98.8783%" y="245" width="0.0415%" height="15" fill="rgb(219,67,39)" fg:x="2380" fg:w="1"/><text x="99.1283%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::slice::iter::IterMut&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="98.8783%" y="229" width="0.0415%" height="15" fill="rgb(253,228,2)" fg:x="2380" fg:w="1"/><text x="99.1283%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;sha2::core_api::Sha256VarCore as digest::core_api::VariableOutputCore&gt;::finalize_variable_core::_{{closure}} (9 samples, 0.37%)</title><rect x="98.8367%" y="309" width="0.3739%" height="15" fill="rgb(235,138,27)" fg:x="2379" fg:w="9"/><text x="99.0867%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::compress256 (9 samples, 0.37%)</title><rect x="98.8367%" y="293" width="0.3739%" height="15" fill="rgb(236,97,51)" fg:x="2379" fg:w="9"/><text x="99.0867%" y="303.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::x86::compress (9 samples, 0.37%)</title><rect x="98.8367%" y="277" width="0.3739%" height="15" fill="rgb(240,80,30)" fg:x="2379" fg:w="9"/><text x="99.0867%" y="287.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::compress (9 samples, 0.37%)</title><rect x="98.8367%" y="261" width="0.3739%" height="15" fill="rgb(230,178,19)" fg:x="2379" fg:w="9"/><text x="99.0867%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::sha256_digest_block_u32 (7 samples, 0.29%)</title><rect x="98.9198%" y="245" width="0.2908%" height="15" fill="rgb(210,190,27)" fg:x="2381" fg:w="7"/><text x="99.1698%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::sha256_digest_round_x2 (5 samples, 0.21%)</title><rect x="99.0029%" y="229" width="0.2077%" height="15" fill="rgb(222,107,31)" fg:x="2383" fg:w="5"/><text x="99.2529%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::FixedOutput&gt;::finalize_into (13 samples, 0.54%)</title><rect x="98.7121%" y="373" width="0.5401%" height="15" fill="rgb(216,127,34)" fg:x="2376" fg:w="13"/><text x="98.9621%" y="383.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (13 samples, 0.54%)</title><rect x="98.7121%" y="357" width="0.5401%" height="15" fill="rgb(234,116,52)" fg:x="2376" fg:w="13"/><text x="98.9621%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;sha2::core_api::Sha256VarCore as digest::core_api::VariableOutputCore&gt;::finalize_variable_core (12 samples, 0.50%)</title><rect x="98.7536%" y="341" width="0.4985%" height="15" fill="rgb(222,124,15)" fg:x="2377" fg:w="12"/><text x="99.0036%" y="351.50"></text></g><g><title>speed-0b1675bc7d978a4b`block_buffer::BlockBuffer&lt;BlockSize,block_buffer::Eager&gt;::len64_padding_be (12 samples, 0.50%)</title><rect x="98.7536%" y="325" width="0.4985%" height="15" fill="rgb(231,179,28)" fg:x="2377" fg:w="12"/><text x="99.0036%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::slice::_&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.04%)</title><rect x="99.2106%" y="309" width="0.0415%" height="15" fill="rgb(226,93,45)" fg:x="2388" fg:w="1"/><text x="99.4606%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="99.2106%" y="293" width="0.0415%" height="15" fill="rgb(215,8,51)" fg:x="2388" fg:w="1"/><text x="99.4606%" y="303.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;D as digest::digest::Digest&gt;::finalize (14 samples, 0.58%)</title><rect x="98.7121%" y="405" width="0.5816%" height="15" fill="rgb(223,106,5)" fg:x="2376" fg:w="14"/><text x="98.9621%" y="415.50"></text></g><g><title>speed-0b1675bc7d978a4b`digest::FixedOutput::finalize_fixed (14 samples, 0.58%)</title><rect x="98.7121%" y="389" width="0.5816%" height="15" fill="rgb(250,191,5)" fg:x="2376" fg:w="14"/><text x="98.9621%" y="399.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.04%)</title><rect x="99.2522%" y="373" width="0.0415%" height="15" fill="rgb(242,132,44)" fg:x="2389" fg:w="1"/><text x="99.5022%" y="383.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::for_each (1 samples, 0.04%)</title><rect x="99.2522%" y="357" width="0.0415%" height="15" fill="rgb(251,152,29)" fg:x="2389" fg:w="1"/><text x="99.5022%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.04%)</title><rect x="99.2522%" y="341" width="0.0415%" height="15" fill="rgb(218,179,5)" fg:x="2389" fg:w="1"/><text x="99.5022%" y="351.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::_{{closure}} (1 samples, 0.04%)</title><rect x="99.2522%" y="325" width="0.0415%" height="15" fill="rgb(227,67,19)" fg:x="2389" fg:w="1"/><text x="99.5022%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;D as digest::digest::Digest&gt;::new (1 samples, 0.04%)</title><rect x="99.2937%" y="405" width="0.0415%" height="15" fill="rgb(233,119,31)" fg:x="2390" fg:w="1"/><text x="99.5437%" y="415.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as core::default::Default&gt;::default (1 samples, 0.04%)</title><rect x="99.2937%" y="389" width="0.0415%" height="15" fill="rgb(241,120,22)" fg:x="2390" fg:w="1"/><text x="99.5437%" y="399.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;block_buffer::BlockBuffer&lt;BlockSize,Kind&gt; as core::default::Default&gt;::default (1 samples, 0.04%)</title><rect x="99.2937%" y="373" width="0.0415%" height="15" fill="rgb(224,102,30)" fg:x="2390" fg:w="1"/><text x="99.5437%" y="383.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.04%)</title><rect x="99.2937%" y="357" width="0.0415%" height="15" fill="rgb(210,164,37)" fg:x="2390" fg:w="1"/><text x="99.5437%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::for_each (1 samples, 0.04%)</title><rect x="99.2937%" y="341" width="0.0415%" height="15" fill="rgb(226,191,16)" fg:x="2390" fg:w="1"/><text x="99.5437%" y="351.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.04%)</title><rect x="99.2937%" y="325" width="0.0415%" height="15" fill="rgb(214,40,45)" fg:x="2390" fg:w="1"/><text x="99.5437%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::fold (1 samples, 0.04%)</title><rect x="99.2937%" y="309" width="0.0415%" height="15" fill="rgb(244,29,26)" fg:x="2390" fg:w="1"/><text x="99.5437%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="99.2937%" y="293" width="0.0415%" height="15" fill="rgb(216,16,5)" fg:x="2390" fg:w="1"/><text x="99.5437%" y="303.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="99.2937%" y="277" width="0.0415%" height="15" fill="rgb(249,76,35)" fg:x="2390" fg:w="1"/><text x="99.5437%" y="287.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (1 samples, 0.04%)</title><rect x="99.3353%" y="261" width="0.0415%" height="15" fill="rgb(207,11,44)" fg:x="2391" fg:w="1"/><text x="99.5853%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T (1 samples, 0.04%)</title><rect x="99.3353%" y="245" width="0.0415%" height="15" fill="rgb(228,190,49)" fg:x="2391" fg:w="1"/><text x="99.5853%" y="255.50"></text></g><g><title> N]&gt;::try_from (1 samples, 0.04%)</title><rect x="99.3353%" y="229" width="0.0415%" height="15" fill="rgb(214,173,12)" fg:x="2391" fg:w="1"/><text x="99.5853%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::result::Result&lt;T,E&gt;::map (1 samples, 0.04%)</title><rect x="99.3353%" y="213" width="0.0415%" height="15" fill="rgb(218,26,35)" fg:x="2391" fg:w="1"/><text x="99.5853%" y="223.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::num::_&lt;impl u32&gt;::from_be_bytes (1 samples, 0.04%)</title><rect x="99.3768%" y="261" width="0.0415%" height="15" fill="rgb(220,200,19)" fg:x="2392" fg:w="1"/><text x="99.6268%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::schedule (1 samples, 0.04%)</title><rect x="99.4184%" y="245" width="0.0415%" height="15" fill="rgb(239,95,49)" fg:x="2393" fg:w="1"/><text x="99.6684%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;D as digest::digest::Digest&gt;::update (4 samples, 0.17%)</title><rect x="99.3353%" y="405" width="0.1662%" height="15" fill="rgb(235,85,53)" fg:x="2391" fg:w="4"/><text x="99.5853%" y="415.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::Update&gt;::update (4 samples, 0.17%)</title><rect x="99.3353%" y="389" width="0.1662%" height="15" fill="rgb(233,133,31)" fg:x="2391" fg:w="4"/><text x="99.5853%" y="399.50"></text></g><g><title>speed-0b1675bc7d978a4b`block_buffer::BlockBuffer&lt;BlockSize,Kind&gt;::digest_blocks (4 samples, 0.17%)</title><rect x="99.3353%" y="373" width="0.1662%" height="15" fill="rgb(218,25,20)" fg:x="2391" fg:w="4"/><text x="99.5853%" y="383.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::Update&gt;::update::_{{closure}} (4 samples, 0.17%)</title><rect x="99.3353%" y="357" width="0.1662%" height="15" fill="rgb(252,210,38)" fg:x="2391" fg:w="4"/><text x="99.5853%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::UpdateCore&gt;::update_blocks (4 samples, 0.17%)</title><rect x="99.3353%" y="341" width="0.1662%" height="15" fill="rgb(242,134,21)" fg:x="2391" fg:w="4"/><text x="99.5853%" y="351.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;sha2::core_api::Sha256VarCore as digest::core_api::UpdateCore&gt;::update_blocks (4 samples, 0.17%)</title><rect x="99.3353%" y="325" width="0.1662%" height="15" fill="rgb(213,28,48)" fg:x="2391" fg:w="4"/><text x="99.5853%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::compress256 (4 samples, 0.17%)</title><rect x="99.3353%" y="309" width="0.1662%" height="15" fill="rgb(250,196,2)" fg:x="2391" fg:w="4"/><text x="99.5853%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::x86::compress (4 samples, 0.17%)</title><rect x="99.3353%" y="293" width="0.1662%" height="15" fill="rgb(227,5,17)" fg:x="2391" fg:w="4"/><text x="99.5853%" y="303.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::compress (4 samples, 0.17%)</title><rect x="99.3353%" y="277" width="0.1662%" height="15" fill="rgb(221,226,24)" fg:x="2391" fg:w="4"/><text x="99.5853%" y="287.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::sha256_digest_block_u32 (2 samples, 0.08%)</title><rect x="99.4184%" y="261" width="0.0831%" height="15" fill="rgb(211,5,48)" fg:x="2393" fg:w="2"/><text x="99.6684%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`sha2::sha256::soft::sha256_digest_round_x2 (1 samples, 0.04%)</title><rect x="99.4599%" y="245" width="0.0415%" height="15" fill="rgb(219,150,6)" fg:x="2394" fg:w="1"/><text x="99.7099%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`alloc::fmt::format (2 samples, 0.08%)</title><rect x="99.5015%" y="405" width="0.0831%" height="15" fill="rgb(251,46,16)" fg:x="2395" fg:w="2"/><text x="99.7515%" y="415.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::option::Option&lt;T&gt;::map_or_else (2 samples, 0.08%)</title><rect x="99.5015%" y="389" width="0.0831%" height="15" fill="rgb(220,204,40)" fg:x="2395" fg:w="2"/><text x="99.7515%" y="399.50"></text></g><g><title>speed-0b1675bc7d978a4b`alloc::fmt::format::_{{closure}} (2 samples, 0.08%)</title><rect x="99.5015%" y="373" width="0.0831%" height="15" fill="rgb(211,85,2)" fg:x="2395" fg:w="2"/><text x="99.7515%" y="383.50"></text></g><g><title>speed-0b1675bc7d978a4b`alloc::fmt::format::format_inner (2 samples, 0.08%)</title><rect x="99.5015%" y="357" width="0.0831%" height="15" fill="rgb(229,17,7)" fg:x="2395" fg:w="2"/><text x="99.7515%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::fmt::write (2 samples, 0.08%)</title><rect x="99.5015%" y="341" width="0.0831%" height="15" fill="rgb(239,72,28)" fg:x="2395" fg:w="2"/><text x="99.7515%" y="351.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::array::_&lt;impl core::fmt::Debug for [T (2 samples, 0.08%)</title><rect x="99.5015%" y="325" width="0.0831%" height="15" fill="rgb(230,47,54)" fg:x="2395" fg:w="2"/><text x="99.7515%" y="335.50"></text></g><g><title> N]&gt;::fmt (2 samples, 0.08%)</title><rect x="99.5015%" y="309" width="0.0831%" height="15" fill="rgb(214,50,8)" fg:x="2395" fg:w="2"/><text x="99.7515%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;&amp;T as core::fmt::Debug&gt;::fmt (2 samples, 0.08%)</title><rect x="99.5015%" y="293" width="0.0831%" height="15" fill="rgb(216,198,43)" fg:x="2395" fg:w="2"/><text x="99.7515%" y="303.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;[T] as core::fmt::Debug&gt;::fmt (2 samples, 0.08%)</title><rect x="99.5015%" y="277" width="0.0831%" height="15" fill="rgb(234,20,35)" fg:x="2395" fg:w="2"/><text x="99.7515%" y="287.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::fmt::builders::DebugList::entries (2 samples, 0.08%)</title><rect x="99.5015%" y="261" width="0.0831%" height="15" fill="rgb(254,45,19)" fg:x="2395" fg:w="2"/><text x="99.7515%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="99.5430%" y="245" width="0.0415%" height="15" fill="rgb(219,14,44)" fg:x="2396" fg:w="1"/><text x="99.7930%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="99.5430%" y="229" width="0.0415%" height="15" fill="rgb(217,220,26)" fg:x="2396" fg:w="1"/><text x="99.7930%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="99.5430%" y="213" width="0.0415%" height="15" fill="rgb(213,158,28)" fg:x="2396" fg:w="1"/><text x="99.7930%" y="223.50"></text></g><g><title>speed-0b1675bc7d978a4b`bft_json_crdt::list_crdt::ListCRDT&lt;T&gt;::insert (32 samples, 1.33%)</title><rect x="98.2966%" y="453" width="1.3295%" height="15" fill="rgb(252,51,52)" fg:x="2366" fg:w="32"/><text x="98.5466%" y="463.50"></text></g><g><title>speed-0b1675bc7d978a4b`bft_json_crdt::op::Op&lt;T&gt;::new (22 samples, 0.91%)</title><rect x="98.7121%" y="437" width="0.9140%" height="15" fill="rgb(246,89,16)" fg:x="2376" fg:w="22"/><text x="98.9621%" y="447.50"></text></g><g><title>speed-0b1675bc7d978a4b`bft_json_crdt::op::Op&lt;T&gt;::hash (22 samples, 0.91%)</title><rect x="98.7121%" y="421" width="0.9140%" height="15" fill="rgb(216,158,49)" fg:x="2376" fg:w="22"/><text x="98.9621%" y="431.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.04%)</title><rect x="99.5845%" y="405" width="0.0415%" height="15" fill="rgb(236,107,19)" fg:x="2397" fg:w="1"/><text x="99.8345%" y="415.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.04%)</title><rect x="99.5845%" y="389" width="0.0415%" height="15" fill="rgb(228,185,30)" fg:x="2397" fg:w="1"/><text x="99.8345%" y="399.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.04%)</title><rect x="99.5845%" y="373" width="0.0415%" height="15" fill="rgb(246,134,8)" fg:x="2397" fg:w="1"/><text x="99.8345%" y="383.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="99.5845%" y="357" width="0.0415%" height="15" fill="rgb(214,143,50)" fg:x="2397" fg:w="1"/><text x="99.8345%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="99.5845%" y="341" width="0.0415%" height="15" fill="rgb(228,75,8)" fg:x="2397" fg:w="1"/><text x="99.8345%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (1 samples, 0.04%)</title><rect x="99.5845%" y="325" width="0.0415%" height="15" fill="rgb(207,175,4)" fg:x="2397" fg:w="1"/><text x="99.8345%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`alloc::vec::partial_eq::_&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (3 samples, 0.12%)</title><rect x="99.6261%" y="389" width="0.1246%" height="15" fill="rgb(205,108,24)" fg:x="2398" fg:w="3"/><text x="99.8761%" y="399.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::slice::cmp::_&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.12%)</title><rect x="99.6261%" y="373" width="0.1246%" height="15" fill="rgb(244,120,49)" fg:x="2398" fg:w="3"/><text x="99.8761%" y="383.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.12%)</title><rect x="99.6261%" y="357" width="0.1246%" height="15" fill="rgb(223,47,38)" fg:x="2398" fg:w="3"/><text x="99.8761%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.12%)</title><rect x="99.6261%" y="341" width="0.1246%" height="15" fill="rgb(229,179,11)" fg:x="2398" fg:w="3"/><text x="99.8761%" y="351.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::all::check::_{{closure}} (2 samples, 0.08%)</title><rect x="99.6676%" y="325" width="0.0831%" height="15" fill="rgb(231,122,1)" fg:x="2399" fg:w="2"/><text x="99.9176%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (2 samples, 0.08%)</title><rect x="99.6676%" y="309" width="0.0831%" height="15" fill="rgb(245,119,9)" fg:x="2399" fg:w="2"/><text x="99.9176%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="99.7507%" y="229" width="0.0415%" height="15" fill="rgb(241,163,25)" fg:x="2401" fg:w="1"/><text x="100.0007%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.08%)</title><rect x="99.7507%" y="261" width="0.0831%" height="15" fill="rgb(217,214,3)" fg:x="2401" fg:w="2"/><text x="100.0007%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (2 samples, 0.08%)</title><rect x="99.7507%" y="245" width="0.0831%" height="15" fill="rgb(240,86,28)" fg:x="2401" fg:w="2"/><text x="100.0007%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.04%)</title><rect x="99.7923%" y="229" width="0.0415%" height="15" fill="rgb(215,47,9)" fg:x="2402" fg:w="1"/><text x="100.0423%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.12%)</title><rect x="99.7507%" y="277" width="0.1246%" height="15" fill="rgb(252,25,45)" fg:x="2401" fg:w="3"/><text x="100.0007%" y="287.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::option::Option&lt;T&gt;::map (1 samples, 0.04%)</title><rect x="99.8338%" y="261" width="0.0415%" height="15" fill="rgb(251,164,9)" fg:x="2403" fg:w="1"/><text x="100.0838%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="99.8754%" y="277" width="0.0415%" height="15" fill="rgb(233,194,0)" fg:x="2404" fg:w="1"/><text x="100.1254%" y="287.50"></text></g><g><title>speed-0b1675bc7d978a4b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="99.8754%" y="261" width="0.0415%" height="15" fill="rgb(249,111,24)" fg:x="2404" fg:w="1"/><text x="100.1254%" y="271.50"></text></g><g><title>speed-0b1675bc7d978a4b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.04%)</title><rect x="99.8754%" y="245" width="0.0415%" height="15" fill="rgb(250,223,3)" fg:x="2404" fg:w="1"/><text x="100.1254%" y="255.50"></text></g><g><title>speed-0b1675bc7d978a4b`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.04%)</title><rect x="99.8754%" y="229" width="0.0415%" height="15" fill="rgb(236,178,37)" fg:x="2404" fg:w="1"/><text x="100.1254%" y="239.50"></text></g><g><title>speed-0b1675bc7d978a4b`alloc::raw_vec::finish_grow (1 samples, 0.04%)</title><rect x="99.8754%" y="213" width="0.0415%" height="15" fill="rgb(241,158,50)" fg:x="2404" fg:w="1"/><text x="100.1254%" y="223.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.04%)</title><rect x="99.8754%" y="197" width="0.0415%" height="15" fill="rgb(213,121,41)" fg:x="2404" fg:w="1"/><text x="100.1254%" y="207.50"></text></g><g><title>speed-0b1675bc7d978a4b`alloc::alloc::Global::grow_impl (1 samples, 0.04%)</title><rect x="99.8754%" y="181" width="0.0415%" height="15" fill="rgb(240,92,3)" fg:x="2404" fg:w="1"/><text x="100.1254%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.04%)</title><rect x="99.8754%" y="165" width="0.0415%" height="15" fill="rgb(205,123,3)" fg:x="2404" fg:w="1"/><text x="100.1254%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.04%)</title><rect x="99.8754%" y="149" width="0.0415%" height="15" fill="rgb(205,97,47)" fg:x="2404" fg:w="1"/><text x="100.1254%" y="159.50"></text></g><g><title>speed-0b1675bc7d978a4b`bft_json_crdt::list_crdt::ListCRDT&lt;T&gt;::view (5 samples, 0.21%)</title><rect x="99.7507%" y="389" width="0.2077%" height="15" fill="rgb(247,152,14)" fg:x="2401" fg:w="5"/><text x="100.0007%" y="399.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::collect (5 samples, 0.21%)</title><rect x="99.7507%" y="373" width="0.2077%" height="15" fill="rgb(248,195,53)" fg:x="2401" fg:w="5"/><text x="100.0007%" y="383.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5 samples, 0.21%)</title><rect x="99.7507%" y="357" width="0.2077%" height="15" fill="rgb(226,201,16)" fg:x="2401" fg:w="5"/><text x="100.0007%" y="367.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.21%)</title><rect x="99.7507%" y="341" width="0.2077%" height="15" fill="rgb(205,98,0)" fg:x="2401" fg:w="5"/><text x="100.0007%" y="351.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (5 samples, 0.21%)</title><rect x="99.7507%" y="325" width="0.2077%" height="15" fill="rgb(214,191,48)" fg:x="2401" fg:w="5"/><text x="100.0007%" y="335.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.21%)</title><rect x="99.7507%" y="309" width="0.2077%" height="15" fill="rgb(237,112,39)" fg:x="2401" fg:w="5"/><text x="100.0007%" y="319.50"></text></g><g><title>speed-0b1675bc7d978a4b`alloc::vec::Vec&lt;T,A&gt;::extend_desugared (5 samples, 0.21%)</title><rect x="99.7507%" y="293" width="0.2077%" height="15" fill="rgb(247,203,27)" fg:x="2401" fg:w="5"/><text x="100.0007%" y="303.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="99.9169%" y="277" width="0.0415%" height="15" fill="rgb(235,124,28)" fg:x="2405" fg:w="1"/><text x="100.1669%" y="287.50"></text></g><g><title>all (2,407 samples, 100%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(208,207,46)" fg:x="0" fg:w="2407"/><text x="0.2500%" y="719.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (2,405 samples, 99.92%)</title><rect x="0.0831%" y="693" width="99.9169%" height="15" fill="rgb(234,176,4)" fg:x="2" fg:w="2405"/><text x="0.3331%" y="703.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (2,405 samples, 99.92%)</title><rect x="0.0831%" y="677" width="99.9169%" height="15" fill="rgb(230,133,28)" fg:x="2" fg:w="2405"/><text x="0.3331%" y="687.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>speed-0b1675bc7d978a4b`std::sys::unix::thread::Thread::new::thread_start (2,405 samples, 99.92%)</title><rect x="0.0831%" y="661" width="99.9169%" height="15" fill="rgb(211,137,40)" fg:x="2" fg:w="2405"/><text x="0.3331%" y="671.50">speed-0b1675bc7d978a4b`std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>speed-0b1675bc7d978a4b`core::ops::function::FnOnce::call_once{{vtable.shim}} (2,404 samples, 99.88%)</title><rect x="0.1246%" y="645" width="99.8754%" height="15" fill="rgb(254,35,13)" fg:x="3" fg:w="2404"/><text x="0.3746%" y="655.50">speed-0b1675bc7d978a4b`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>speed-0b1675bc7d978a4b`std::sys_common::backtrace::__rust_begin_short_backtrace (2,404 samples, 99.88%)</title><rect x="0.1246%" y="629" width="99.8754%" height="15" fill="rgb(225,49,51)" fg:x="3" fg:w="2404"/><text x="0.3746%" y="639.50">speed-0b1675bc7d978a4b`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>speed-0b1675bc7d978a4b`test::run_test::run_test_inner::_{{closure}} (2,404 samples, 99.88%)</title><rect x="0.1246%" y="613" width="99.8754%" height="15" fill="rgb(251,10,15)" fg:x="3" fg:w="2404"/><text x="0.3746%" y="623.50">speed-0b1675bc7d978a4b`test::run_test::run_test_inner::_{{closure}}</text></g><g><title>speed-0b1675bc7d978a4b`test::__rust_begin_short_backtrace (2,404 samples, 99.88%)</title><rect x="0.1246%" y="597" width="99.8754%" height="15" fill="rgb(228,207,15)" fg:x="3" fg:w="2404"/><text x="0.3746%" y="607.50">speed-0b1675bc7d978a4b`test::__rust_begin_short_backtrace</text></g><g><title>speed-0b1675bc7d978a4b`core::ops::function::FnOnce::call_once{{vtable.shim}} (2,404 samples, 99.88%)</title><rect x="0.1246%" y="581" width="99.8754%" height="15" fill="rgb(241,99,19)" fg:x="3" fg:w="2404"/><text x="0.3746%" y="591.50">speed-0b1675bc7d978a4b`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>speed-0b1675bc7d978a4b`test::__rust_begin_short_backtrace (2,404 samples, 99.88%)</title><rect x="0.1246%" y="565" width="99.8754%" height="15" fill="rgb(207,104,49)" fg:x="3" fg:w="2404"/><text x="0.3746%" y="575.50">speed-0b1675bc7d978a4b`test::__rust_begin_short_backtrace</text></g><g><title>speed-0b1675bc7d978a4b`core::ops::function::FnOnce::call_once (2,404 samples, 99.88%)</title><rect x="0.1246%" y="549" width="99.8754%" height="15" fill="rgb(234,99,18)" fg:x="3" fg:w="2404"/><text x="0.3746%" y="559.50">speed-0b1675bc7d978a4b`core::ops::function::FnOnce::call_once</text></g><g><title>speed-0b1675bc7d978a4b`speed::bench_insert_many_agents_conflicts::_{{closure}} (2,279 samples, 94.68%)</title><rect x="5.3178%" y="533" width="94.6822%" height="15" fill="rgb(213,191,49)" fg:x="128" fg:w="2279"/><text x="5.5678%" y="543.50">speed-0b1675bc7d978a4b`speed::bench_insert_many_agents_conflicts::_{{closure}}</text></g><g><title>speed-0b1675bc7d978a4b`speed::bench_insert_many_agents_conflicts (2,279 samples, 94.68%)</title><rect x="5.3178%" y="517" width="94.6822%" height="15" fill="rgb(210,226,19)" fg:x="128" fg:w="2279"/><text x="5.5678%" y="527.50">speed-0b1675bc7d978a4b`speed::bench_insert_many_agents_conflicts</text></g><g><title>speed-0b1675bc7d978a4b`test::bench::Bencher::iter (2,279 samples, 94.68%)</title><rect x="5.3178%" y="501" width="94.6822%" height="15" fill="rgb(229,97,18)" fg:x="128" fg:w="2279"/><text x="5.5678%" y="511.50">speed-0b1675bc7d978a4b`test::bench::Bencher::iter</text></g><g><title>speed-0b1675bc7d978a4b`test::bench::ns_iter_inner (2,279 samples, 94.68%)</title><rect x="5.3178%" y="485" width="94.6822%" height="15" fill="rgb(211,167,15)" fg:x="128" fg:w="2279"/><text x="5.5678%" y="495.50">speed-0b1675bc7d978a4b`test::bench::ns_iter_inner</text></g><g><title>speed-0b1675bc7d978a4b`speed::bench_insert_many_agents_conflicts::_{{closure}} (2,279 samples, 94.68%)</title><rect x="5.3178%" y="469" width="94.6822%" height="15" fill="rgb(210,169,34)" fg:x="128" fg:w="2279"/><text x="5.5678%" y="479.50">speed-0b1675bc7d978a4b`speed::bench_insert_many_agents_conflicts::_{{closure}}</text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::all (9 samples, 0.37%)</title><rect x="99.6261%" y="453" width="0.3739%" height="15" fill="rgb(241,121,31)" fg:x="2398" fg:w="9"/><text x="99.8761%" y="463.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::try_fold (9 samples, 0.37%)</title><rect x="99.6261%" y="437" width="0.3739%" height="15" fill="rgb(232,40,11)" fg:x="2398" fg:w="9"/><text x="99.8761%" y="447.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::iter::traits::iterator::Iterator::all::check::_{{closure}} (9 samples, 0.37%)</title><rect x="99.6261%" y="421" width="0.3739%" height="15" fill="rgb(205,86,26)" fg:x="2398" fg:w="9"/><text x="99.8761%" y="431.50"></text></g><g><title>speed-0b1675bc7d978a4b`speed::bench_insert_many_agents_conflicts::_{{closure}}::_{{closure}} (9 samples, 0.37%)</title><rect x="99.6261%" y="405" width="0.3739%" height="15" fill="rgb(231,126,28)" fg:x="2398" fg:w="9"/><text x="99.8761%" y="415.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;usize&gt;&gt; (1 samples, 0.04%)</title><rect x="99.9585%" y="389" width="0.0415%" height="15" fill="rgb(219,221,18)" fg:x="2406" fg:w="1"/><text x="100.2085%" y="399.50"></text></g><g><title>speed-0b1675bc7d978a4b`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="99.9585%" y="373" width="0.0415%" height="15" fill="rgb(211,40,0)" fg:x="2406" fg:w="1"/><text x="100.2085%" y="383.50"></text></g><g><title>speed-0b1675bc7d978a4b`core::ptr::mut_ptr::_&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="99.9585%" y="357" width="0.0415%" height="15" fill="rgb(239,85,43)" fg:x="2406" fg:w="1"/><text x="100.2085%" y="367.50"></text></g></svg></svg>